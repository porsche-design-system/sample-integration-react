{"version":3,"names":["backdropCss","Backdrop","prototype","handleClick","this","sendDataAnalyticsEvent","clickDrawerHeaderClose","emit","analyticsManager","setDrawerType","DisplayElementTypes","DoubleDrawer","globalDataLayerService","pushDataLayerEvent","EventActions","MENU_CLOSE_CLICK","componentClick","clickElementId","clickElementName","clickElementType","ClickElementTypes","Button","targetElement","componentDisplay","displayElementType","calculateDisplayElementType","activeRoutingKey","ElementTypes","backdrop","displayElementId","calculateDisplayElementId","displayElementName","componentWillLoad","windowService","hasScrollbar","lockScroll","disconnectedCallback","unlockScroll","render","h","Host"],"sources":["src/components/backdrop/backdrop.scss?tag=phn-backdrop&encapsulation=scoped","src/components/backdrop/backdrop.tsx"],"sourcesContent":["@import '../../scss';\n\n:host {\n  position: fixed;\n  z-index: $phn-z-index-mega-flyout;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.0);\n  opacity: 0;\n  cursor: pointer;\n  @include pds-frosted-glass();\n\n  &.fade-in-animation {\n    animation: fade-in-animation 400ms;\n  }\n\n  &.fade-out-animation {\n    animation: fade-in-animation 400ms reverse;\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Prop } from '@stencil/core';\nimport analyticsManager from '../../services/analytics/analytics-manager';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport windowService from '../../services/window-service';\nimport { ClickElementTypes, DisplayElementTypes, ElementTypes, EventActions } from '../../utility/constants';\n\n@Component({\n  tag: 'phn-backdrop',\n  styleUrl: 'backdrop.scss',\n  scoped: true\n})\nexport class Backdrop {\n  @Prop() activeRoutingKey!: string;\n\n  @Element() el!: HTMLPhnBackdropElement;\n\n  @Event() clickDrawerHeaderClose!: EventEmitter<void>;\n  @Event() backdropClosed!: EventEmitter<void>;\n\n  @Listen('click', { passive: true })\n  handleClick(): void {\n    this.sendDataAnalyticsEvent();\n    this.clickDrawerHeaderClose.emit();\n  }\n\n  private sendDataAnalyticsEvent() {\n    analyticsManager.setDrawerType(DisplayElementTypes.DoubleDrawer);\n    globalDataLayerService.pushDataLayerEvent(EventActions.MENU_CLOSE_CLICK, {\n      componentClick: {\n        clickElementId: 'mainmenu.drawer.close',\n        clickElementName: 'backdrop',\n        clickElementType: ClickElementTypes.Button,\n        targetElement: 'level-0'\n      },\n      componentDisplay: {\n        displayElementType: analyticsManager.calculateDisplayElementType(this.activeRoutingKey, ElementTypes.backdrop),\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementName: 'Double Drawer'\n      }\n    });\n  }\n\n  componentWillLoad(): void {\n    if (windowService.hasScrollbar()) {\n      windowService.lockScroll();\n    }\n  }\n\n  disconnectedCallback(): void {\n    if (windowService.hasScrollbar()) {\n      windowService.unlockScroll();\n    }\n  }\n\n  render(): HTMLPhnBackdropElement {\n    return <Host />;\n  }\n}\n"],"mappings":"unBAAA,IAAMA,YAAc,s6I,ICWPC,SAAQ,W,yMASnBA,EAAAC,UAAAC,YAAA,WACEC,KAAKC,yBACLD,KAAKE,uBAAuBC,M,EAGtBN,EAAAC,UAAAG,uBAAA,WACNG,iBAAiBC,cAAcC,oBAAoBC,cACnDC,uBAAuBC,mBAAmBC,aAAaC,iBAAkB,CACvEC,eAAgB,CACdC,eAAgB,wBAChBC,iBAAkB,WAClBC,iBAAkBC,kBAAkBC,OACpCC,cAAe,WAEjBC,iBAAkB,CAChBC,mBAAoBhB,iBAAiBiB,4BAA4BrB,KAAKsB,iBAAkBC,aAAaC,UACrGC,iBAAkBrB,iBAAiBsB,4BACnCC,mBAAoB,kB,EAK1B9B,EAAAC,UAAA8B,kBAAA,WACE,GAAIC,cAAcC,eAAgB,CAChCD,cAAcE,Y,GAIlBlC,EAAAC,UAAAkC,qBAAA,WACE,GAAIH,cAAcC,eAAgB,CAChCD,cAAcI,c,GAIlBpC,EAAAC,UAAAoC,OAAA,WACE,OAAOC,EAACC,KAAI,K,gIA5CK,G"}