{"version":3,"names":["showDealerSearchDropdown","country","countriesWithDropdown","includes","getRegionSpecificCountry","split","sanitizeDealerHomepage","originalUrl","startsWith","concat","getOpeningHours","openingHoursData","openingHours","navContentStore","state","dealer","WEEK_DAYS","monday","tuesday","wednesday","thursday","friday","saturday","sunday","openingHoursMap","getOpeningHoursMap","result","previousOpeningHours","previousDayIndex","consecutiveDays","_i","WEEK_DAYS_1","length","day","currentDayIndex","indexOf","openHours","get","openingHoursString","getOpeningHoursString","push","getDayRange","join","days","Map","openingHoursData_1","item","toLowerCase","isString","set","open","close","getTimeFormat","timeFormat","convertToLocalTime","time","_a","map","Number","hour","minute","date","Date","toLocaleString","undefined","hour12","toUpperCase"],"sources":["src/utility/helpers/dealer-search-helper.ts"],"sourcesContent":["import { OpenHours } from '../../entities/dealer-response';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { OpeningHours } from '../../entities/content';\nimport { isString } from '../helper';\n\nexport function showDealerSearchDropdown(country: string): boolean {\n  const countriesWithDropdown = ['CN'];\n\n  return countriesWithDropdown.includes(country);\n}\n\nexport function getRegionSpecificCountry(country: string): string {\n  return country.includes('-') ? country.split('-')[0] : country;\n}\n\nexport function sanitizeDealerHomepage(originalUrl: string): string {\n  if (!originalUrl.startsWith('https://')) {\n    return `http://${originalUrl}`;\n  }\n\n  return originalUrl;\n}\n\nexport function getOpeningHours(openingHoursData: OpenHours[]): string {\n  const { openingHours } = navContentStore.state.dealer;\n\n  if (!openingHours) {\n    return '';\n  }\n\n  const WEEK_DAYS = [\n    openingHours.monday,\n    openingHours.tuesday,\n    openingHours.wednesday,\n    openingHours.thursday,\n    openingHours.friday,\n    openingHours.saturday,\n    openingHours.sunday\n  ];\n\n  const openingHoursMap = getOpeningHoursMap(openingHours, openingHoursData);\n  const result: string[] = [];\n  let previousOpeningHours = '';\n  let previousDayIndex = -1;\n  let consecutiveDays: string[] = [];\n\n  for (const day of WEEK_DAYS) {\n    const currentDayIndex = WEEK_DAYS.indexOf(day);\n    const openHours = openingHoursMap.get(day);\n    const openingHoursString = getOpeningHoursString(openHours);\n\n    if (openingHoursString !== '') {\n      if (previousOpeningHours === '') {\n        previousOpeningHours = openingHoursString;\n        consecutiveDays.push(day);\n      } else if (previousOpeningHours !== openingHoursString || previousDayIndex !== currentDayIndex - 1) {\n        result.push(getDayRange(consecutiveDays, previousOpeningHours));\n        consecutiveDays = [day];\n        previousOpeningHours = openingHoursString;\n      } else {\n        consecutiveDays.push(day);\n      }\n      previousDayIndex = currentDayIndex;\n    }\n  }\n\n  if (previousOpeningHours !== '') {\n    result.push(getDayRange(consecutiveDays, previousOpeningHours));\n  }\n\n  return result.join('\\n');\n}\n\nfunction getDayRange(days: string[], openingHoursString: string) {\n  if (days.length === 1) {\n    return `${days[0]}: ${openingHoursString}`;\n  }\n  return `${days[0]} - ${days[days.length - 1]}: ${openingHoursString}`;\n}\n\nfunction getOpeningHoursMap(openingHours: OpeningHours, openingHoursData: OpenHours[]) {\n  const openingHoursMap: Map<string, { open: string; close: string }> = new Map();\n\n  for (const item of openingHoursData) {\n    const day = openingHours[item.day.toLowerCase() as keyof OpeningHours];\n\n    if (isString(day)) {\n      openingHoursMap.set(day, { open: item.open, close: item.close });\n    }\n  }\n\n  return openingHoursMap;\n}\n\nfunction getOpeningHoursString(openHours: { open: string; close: string } | undefined): string {\n  return openHours && openHours.open !== '' && openHours.close !== '' ? getTimeFormat(openHours) : '';\n}\n\nfunction getTimeFormat(openHours: { open: string; close: string }): string {\n  const { openingHours } = navContentStore.state.dealer;\n\n  const timeFormat = openingHours?.timeFormat === 12;\n\n  return `${convertToLocalTime(openHours.open, timeFormat)} - ${convertToLocalTime(openHours.close, timeFormat)}`;\n}\n\nfunction convertToLocalTime(time: string, timeFormat = false) {\n  const [hour, minute] = time.split(':').map(Number);\n  const date = new Date(0, 0, 0, hour, minute);\n\n  return date\n    .toLocaleString(undefined, {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: timeFormat\n    })\n    .toUpperCase();\n}\n"],"mappings":"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"}