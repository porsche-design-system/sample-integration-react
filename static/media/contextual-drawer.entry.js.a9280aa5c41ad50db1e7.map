{"version":3,"names":["registerContextualDrawerOpening","_a","onStartOpening","onFinishOpening","animationManager","register","makeSequence","onStart","elementSelector","animation","name","to","duration","AnimationDurations","drawerOpen","from","onEnd","backdrop","timingFunction","registerContextualDrawerClosing","onStartClosing","onEndClosing","drawer","contextualDrawerCss","ContextualDrawer","prototype","closeContextualDrawer","this","closeDrawer","openContextualDrawer","play","componentDidLoad","_this","phnContextualDrawerStatus","emit","status","DrawerStatusValues","startOpening","isDrawerOpened","contextualDrawerHeader","document","getElementById","style","display","finishOpening","startClosing","finishClosing","render","h","Host","variant","className","theme","icon","onClick","class","id","slot"],"sources":["src/components/contextual-drawer/contextual-drawer-animation-sequence.ts","src/components/contextual-drawer/contextual-drawer.scss?tag=contextual-drawer&encapsulation=scoped","src/components/contextual-drawer/contextual-drawer.tsx"],"sourcesContent":["import animationManager, { makeSequence } from '../../services/animations/animation-manager';\nimport { AnimationDurations } from '../../utility/constants';\n\nexport const registerContextualDrawerOpening = ({\n  onStartOpening,\n  onFinishOpening\n}: {\n  onStartOpening: () => void;\n  onFinishOpening: () => void;\n}): void => {\n  animationManager.register(\n    'openContextualDrawer',\n    makeSequence(\n      [\n        [\n          {\n            onStart: onStartOpening,\n            elementSelector: 'contextual-drawer',\n            animation: {\n              name: 'slideInFromLeft',\n              to: 0,\n              duration: AnimationDurations.drawerOpen,\n              from: -1000\n            }\n          },\n          {\n            onEnd: onFinishOpening,\n            elementSelector: '.contextual-drawer-backdrop',\n            animation: {\n              name: 'fadeInBackdrop',\n              duration: AnimationDurations.backdrop,\n              to: 0.6\n            }\n          }\n        ]\n      ],\n      { timingFunction: 'cubicBezierStart' }\n    )\n  );\n};\n\nexport const registerContextualDrawerClosing = ({\n  onStartClosing,\n  onEndClosing\n}: {\n  onStartClosing: () => void;\n  onEndClosing: () => void;\n}): void => {\n  animationManager.register(\n    'closeContextualDrawer',\n    makeSequence(\n      [\n        [\n          {\n            onStart: onStartClosing,\n            elementSelector: 'contextual-drawer',\n            animation: {\n              name: 'slideOutToLeft',\n              to: -1000,\n              duration: AnimationDurations.drawer\n            }\n          },\n          {\n            elementSelector: '.contextual-drawer-backdrop',\n            animation: {\n              name: 'fadeOutBackdrop',\n              to: 0.6,\n              duration: AnimationDurations.backdrop\n            },\n            onEnd: onEndClosing\n          }\n        ]\n      ],\n      { timingFunction: 'cubicBezierEnd' }\n    )\n  );\n};\n","@import '../../scss';\n\n$drawer-width: (\n  'mobile':  100%,\n  'm':  p-px-to-rem(336px),\n  'l':  p-px-to-rem(405px),\n  'xxl':  p-px-to-rem(606px),\n  'default': p-px-to-rem(330px)\n);\n\n:host {\n  float: right;\n  right: -150%;\n  width: fit-content;\n  box-sizing: border-box;\n  position: fixed;\n  top: 0;\n  height: 100vh;\n  z-index: $phn-z-index-mega-flyout + 1;\n\n  @include pds-media-query-min-max('base', 's') {\n    width: map-get($drawer-width, 'mobile');\n  }\n\n  .contextual-drawer-backdrop {\n    position: fixed;\n    z-index: $phn-z-index-mega-flyout;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    cursor: pointer;\n    @include pds-frosted-glass()\n  }\n\n  .close-button {\n    $button-width: 48px;\n    $button-margin: 28px;\n    position: absolute;\n    right: p-px-to-rem(-($button-width + $button-margin));\n    z-index: $phn-z-index-mega-flyout + 1;\n    width: p-px-to-rem($button-width);\n    height: p-px-to-rem($button-width);\n    margin-top: p-px-to-rem($button-margin);\n    cursor: pointer;\n\n    @include pds-media-query-min-max('base', 's') {\n      display: none;\n    }\n  }\n\n  .contextual-drawer{\n    background-color: $main-drawer-background-color;\n    position: relative;\n    overflow-y: auto;\n    overflow-x: hidden;\n    width: map-get($drawer-width, 'default');\n    border-radius: 0 4px 4px 0;\n    height: 100vh;\n    z-index: $phn-z-index-mega-flyout + 1;\n\n    @include pds-media-query-min-max('base', 's') {\n      width: map-get($drawer-width, 'mobile');\n      border-radius: 0;\n      background-color: $main-drawer-mobile-background-color;\n    }\n\n    @include pds-media-query-min('m') {\n      width: map-get($drawer-width, 'm');\n    }\n\n    @include pds-media-query-min('l') {\n      width: map-get($drawer-width, 'l');\n    }\n\n    @include pds-media-query-min('xxl') {\n      width: map-get($drawer-width, 'xxl');\n    }\n  }\n\n\n}\n","import { Component, Event, EventEmitter, h, Host, JSX, Listen, State } from '@stencil/core';\nimport {\n  registerContextualDrawerClosing,\n  registerContextualDrawerOpening\n} from './contextual-drawer-animation-sequence';\nimport animationManager from '../../services/animations/animation-manager';\nimport { DrawerStatusTypes, DrawerStatusValues } from '../../utility/constants/app';\n\n@Component({\n  tag: 'contextual-drawer',\n  styleUrl: 'contextual-drawer.scss',\n  scoped: true\n})\nexport class ContextualDrawer {\n  @Event() openBackdrop!: EventEmitter<boolean>;\n  @State() isDrawerOpened = false;\n\n  @Event({ composed: true, bubbles: true }) phnContextualDrawerStatus!: EventEmitter<{\n    status: DrawerStatusTypes;\n  }>;\n\n  @Listen('phnCloseContextualDrawer', { target: 'window' })\n  closeContextualDrawer(): void {\n    this.closeDrawer();\n  }\n\n  @Listen('phnOpenContextualDrawer', { target: 'window' })\n  openContextualDrawer(): void {\n    animationManager.play('openContextualDrawer');\n  }\n\n  private closeDrawer(): void {\n    animationManager.play('closeContextualDrawer');\n  }\n\n  componentDidLoad(): void {\n    registerContextualDrawerOpening({\n      onStartOpening: () => {\n        this.phnContextualDrawerStatus.emit({ status: DrawerStatusValues.startOpening });\n        this.isDrawerOpened = true;\n        const contextualDrawerHeader = document.getElementById('contextual-drawer-header');\n        if (contextualDrawerHeader) {\n          contextualDrawerHeader.style.display = '';\n        }\n      },\n      onFinishOpening: () => {\n        this.phnContextualDrawerStatus.emit({ status: DrawerStatusValues.finishOpening });\n      }\n    });\n\n    registerContextualDrawerClosing({\n      onStartClosing: () => {\n        this.phnContextualDrawerStatus.emit({ status: DrawerStatusValues.startClosing });\n      },\n      onEndClosing: () => {\n        this.phnContextualDrawerStatus.emit({ status: DrawerStatusValues.finishClosing });\n        this.isDrawerOpened = false;\n      }\n    });\n  }\n\n  render(): JSX.Element {\n    return (\n      <Host style={{ display: this.isDrawerOpened ? '' : 'none' }}>\n        <phn-p-button\n          variant=\"secondary\"\n          className=\"close-button\"\n          theme=\"dark\"\n          hide-label=\"true\"\n          icon={'close'}\n          aria-label=\"close modal dialog\"\n          onClick={() => {\n            this.closeDrawer();\n          }}\n        />\n        <div class=\"contextual-drawer\" id=\"contextual-drawer\">\n          <div slot=\"contextual_drawer_header\">\n            <slot name=\"contextual_drawer_header\"></slot>\n          </div>\n        </div>\n        <div\n          aria-hidden=\"true\"\n          class=\"contextual-drawer-backdrop\"\n          onClick={() => {\n            this.closeDrawer();\n          }}\n        />\n      </Host>\n    );\n  }\n}\n"],"mappings":"0UAGO,IAAMA,gCAAkC,SAACC,G,IAC9CC,EAAcD,EAAAC,eACdC,EAAeF,EAAAE,gBAKfC,iBAAiBC,SACf,uBACAC,aACE,CACE,CACE,CACEC,QAASL,EACTM,gBAAiB,oBACjBC,UAAW,CACTC,KAAM,kBACNC,GAAI,EACJC,SAAUC,mBAAmBC,WAC7BC,MAAO,MAGX,CACEC,MAAOb,EACPK,gBAAiB,8BACjBC,UAAW,CACTC,KAAM,iBACNE,SAAUC,mBAAmBI,SAC7BN,GAAI,OAKZ,CAAEO,eAAgB,qBAGxB,EAEO,IAAMC,gCAAkC,SAAClB,G,IAC9CmB,EAAcnB,EAAAmB,eACdC,EAAYpB,EAAAoB,aAKZjB,iBAAiBC,SACf,wBACAC,aACE,CACE,CACE,CACEC,QAASa,EACTZ,gBAAiB,oBACjBC,UAAW,CACTC,KAAM,iBACNC,IAAK,IACLC,SAAUC,mBAAmBS,SAGjC,CACEd,gBAAiB,8BACjBC,UAAW,CACTC,KAAM,kBACNC,GAAI,GACJC,SAAUC,mBAAmBI,UAE/BD,MAAOK,KAIb,CAAEH,eAAgB,mBAGxB,EC5EA,IAAMK,oBAAsB,ytH,ICafC,iBAAgB,W,+LAED,K,CAO1BA,EAAAC,UAAAC,sBAAA,WACEC,KAAKC,a,EAIPJ,EAAAC,UAAAI,qBAAA,WACEzB,iBAAiB0B,KAAK,uB,EAGhBN,EAAAC,UAAAG,YAAA,WACNxB,iBAAiB0B,KAAK,wB,EAGxBN,EAAAC,UAAAM,iBAAA,eAAAC,EAAAL,KACE3B,gCAAgC,CAC9BE,eAAgB,WACd8B,EAAKC,0BAA0BC,KAAK,CAAEC,OAAQC,mBAAmBC,eACjEL,EAAKM,eAAiB,KACtB,IAAMC,EAAyBC,SAASC,eAAe,4BACvD,GAAIF,EAAwB,CAC1BA,EAAuBG,MAAMC,QAAU,E,GAG3CxC,gBAAiB,WACf6B,EAAKC,0BAA0BC,KAAK,CAAEC,OAAQC,mBAAmBQ,e,IAIrEzB,gCAAgC,CAC9BC,eAAgB,WACdY,EAAKC,0BAA0BC,KAAK,CAAEC,OAAQC,mBAAmBS,c,EAEnExB,aAAc,WACZW,EAAKC,0BAA0BC,KAAK,CAAEC,OAAQC,mBAAmBU,gBACjEd,EAAKM,eAAiB,K,KAK5Bd,EAAAC,UAAAsB,OAAA,eAAAf,EAAAL,KACE,OACEqB,EAACC,KAAI,CAACP,MAAO,CAAEC,QAAShB,KAAKW,eAAiB,GAAK,SACjDU,EAAA,gBACEE,QAAQ,YACRC,UAAU,eACVC,MAAM,OAAM,aACD,OACXC,KAAM,QAAO,aACF,qBACXC,QAAS,WACPtB,EAAKJ,a,IAGToB,EAAA,OAAKO,MAAM,oBAAoBC,GAAG,qBAChCR,EAAA,OAAKS,KAAK,4BACRT,EAAA,QAAMtC,KAAK,+BAGfsC,EAAA,qBACc,OACZO,MAAM,6BACND,QAAS,WACPtB,EAAKJ,a,eAvEY,G"}