{"version":3,"names":["MainDrawerContent","_a","activeRoutingKey","locale","breakpoint","backButtonText","onClickBack","receivedContent","h","class","isString","onClick","text","analyticsId","navContentStore","state","menu","id","SideDrawerContent","tabIndex","doubleDrawerCss","DoubleDrawer","RoutingKeyPointers","LEVEL_ZERO","class_1","prototype","watchRoutingKeyPointer","newPointer","oldPointer","_this","this","topLevelRoutingKey","findTopLevelRoutingKey","routingKeyHistory","routingKeyPointer","RoutingKeys","DEALER_SEARCH","animationManager","play","then","focusOnInitialElement","watchRoutingKeyHistory","newHistory","oldHistory","length","animateIfSameLength","onResizeWindow","animatingRoutingKeyPointer","animatingRoutingKey","handleKeyDown","e","key","startsWith","split","eventSourceElement","getHTMLElement","target","focusableSideDrawerElements","getAllFocusableElements","el","querySelector","focusableMainDrawerElements","highlightedSideDrawerElementIndex","findIndex","getAttribute","highlightedSideDrawerElement","filter","element","nodeName","lastSideDrawerElement","lastMainDrawerElement","closeButton","shiftKey","preventDefault","focusOnElement","nextSideDrawerElementIndex","nextSideDrawerElement","handleMobileMenuItemClick","event","isPlaying","stopPropagation","handleSideDrawerItemClick","isNavigatingBackwards","focusedRoutingKey","autoFocusElement","usingKeyboard","focusableElement","concat","FOCUSABLE_ELEMENTS_SELECTOR","firstFocus","goBackToPreviousMenu","clickDrawerHeaderBack","emit","updateRouting","drawerChanged","sendDoubleDrawerLoadDataEvent","analyticsManager","setDrawerType","DisplayElementTypes","globalDataLayerService","pushDataLayerEvent","EventActions","DRAWER_LOAD","componentDisplay","displayElementType","calculateDisplayElementType","ElementTypes","doubleDrawer","displayElementId","calculateDisplayElementId","displayElementName","sendDataEventOfCloseButtonClick","MENU_CLOSE_CLICK","componentClick","clickElementId","clickElementName","clickElementType","ClickElementTypes","Button","targetElement","componentWillLoad","initialUsingKeyboard","componentDidLoad","routeChangeCallbacks","onSlideMainDrawerOutEnd","__awaiter","__generator","registerOpenDoubleDrawerSequence","onAnimationStarts","phnDrawerStatus","status","DrawerStatusValues","startOpening","onAnimationEnds","finishOpening","registerCloseDoubleDrawerSequence","onBackdropFadeOutEnd","backdropClosed","startClosing","finishClosing","registerBackToPreviousMenuSequence","registerForwardToNextMenuSequence","registerTransitionSequence","render","previousRoutingKey","getBackButtonText","wasPreviouslyOnDealerSearch","isOnDealerDetails","Host","role","variant","theme","icon","aria","clickDrawerHeaderClose","Fragment"],"sources":["src/components/double-drawer/main-drawer-content.tsx","src/components/double-drawer/side-drawer-content.tsx","src/components/double-drawer/double-drawer.scss?tag=phn-double-drawer&encapsulation=scoped","src/components/double-drawer/double-drawer.tsx"],"sourcesContent":["import { h, JSX } from '@stencil/core';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { isString } from '../../utility/helper';\n\nexport const MainDrawerContent = ({\n  activeRoutingKey,\n  locale,\n  breakpoint,\n  backButtonText,\n  onClickBack,\n  receivedContent\n}: {\n  activeRoutingKey: string;\n  locale: string;\n  breakpoint: number;\n  backButtonText: string;\n  onClickBack: () => void;\n  receivedContent: boolean;\n}): JSX.Element => (\n  <div class=\"drawer-content\">\n    <div class=\"main-drawer-header\">\n      {isString(backButtonText) ? (\n        <phn-back-button\n          class=\"back-button\"\n          onClick={onClickBack}\n          text={backButtonText}\n          analyticsId={navContentStore.state.menu.id}\n          activeRoutingKey={activeRoutingKey}\n        />\n      ) : null}\n    </div>\n\n    <phn-router\n      activeRoutingKey={activeRoutingKey}\n      breakpoint={breakpoint}\n      locale={locale}\n      receivedContent={receivedContent}\n    />\n  </div>\n);\n","import { h, JSX } from '@stencil/core';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { isString } from '../../utility/helper';\n\nexport const SideDrawerContent = ({\n  activeRoutingKey,\n  locale,\n  backButtonText,\n  onClickBack\n}: {\n  activeRoutingKey: string;\n  locale: string;\n  backButtonText: string;\n  onClickBack: () => void;\n}): JSX.Element => {\n  return (\n    <div class=\"drawer-content\">\n      <span class=\"first-focus\" tabIndex={-1} aria-hidden=\"true\" />\n\n      <div class=\"side-drawer-header\">\n        {isString(backButtonText) ? (\n          <phn-back-button\n            class=\"back-button\"\n            onClick={onClickBack}\n            text={backButtonText}\n            analyticsId={navContentStore.state.menu.id}\n            activeRoutingKey={activeRoutingKey}\n          />\n        ) : null}\n      </div>\n\n      <phn-side-drawer activeRoutingKey={activeRoutingKey} locale={locale} />\n    </div>\n  );\n};\n","@import '../../scss';\n\n$drawer-width: (\n  'm':  p-px-to-rem(336px),\n  'l':  p-px-to-rem(405px),\n  'xxl':  p-px-to-rem(606px),\n  'default': p-px-to-rem(330px)\n);\n$drawer-paddings: (\n  'm':  p-px-to-rem(36px),\n  'l':  p-px-to-rem(48px),\n  'xxl':  p-px-to-rem(84px),\n  'default': p-px-to-rem(28px)\n);\n\n:host {\n  position: fixed;\n  top: 0;\n  left: -1000px;\n  height: 100vh;\n  width: fit-content;\n  z-index: $phn-z-index-mega-flyout + 1;\n\n  @include pds-media-query-min('xxl') {\n    left: -1300px;\n  }\n\n  &.opening-animation {\n    left: 0px;\n    transition: left 600ms;\n  }\n\n  &.closing-animation {\n    left: -1000px;\n    transition: left 600ms;\n\n    @include pds-media-query-min('xxl') {\n      left: -1300px;\n    }\n  }\n\n  .close-button {\n    $button-width: 48px;\n    $button-margin: 28px;\n    position: absolute;\n    right: p-px-to-rem(-($button-width + $button-margin));\n    z-index: $phn-z-index-mega-flyout + 1;\n    width: p-px-to-rem($button-width);\n    height: p-px-to-rem($button-width);\n    margin-top: p-px-to-rem($button-margin);\n    cursor: pointer;\n  }\n\n  .drawer {\n    overflow-y: auto;\n    overflow-x: hidden;\n    position: relative;\n    background-color: $pds-theme-light-background-base;\n    height: 100vh;\n\n    transition: left 400ms;\n\n    &#side-drawer {\n      z-index: $phn-z-index-mega-flyout + 2;\n      float: left;\n      width: calc(map-get($drawer-width, 'default') - calc(map-get($drawer-paddings, 'default') +  map-get($drawer-paddings, 'default')));\n      padding-left: map-get($drawer-paddings, 'default');\n      padding-right: map-get($drawer-paddings, 'default');\n\n      @include pds-media-query-min('m') {\n        width: calc(map-get($drawer-width, 'm') - calc(map-get($drawer-paddings, 'm') +  map-get($drawer-paddings, 'm')));\n        padding-left: map-get($drawer-paddings, 'm');\n        padding-right: map-get($drawer-paddings, 'm');\n      }\n      @include pds-media-query-min('l') {\n        width: calc(map-get($drawer-width, 'l') - calc(map-get($drawer-paddings, 'l') +  map-get($drawer-paddings, 'l')));\n        padding-left: map-get($drawer-paddings, 'l');\n        padding-right: map-get($drawer-paddings, 'l');\n      }\n      @include pds-media-query-min('xxl') {\n        width: calc(map-get($drawer-width, 'xxl') - calc(map-get($drawer-paddings, 'xxl') +  map-get($drawer-paddings, 'xxl')));\n        padding-left: map-get($drawer-paddings, 'xxl');\n        padding-right: map-get($drawer-paddings, 'xxl');\n      }\n\n      & > div {\n        left: 0;\n      }\n\n      phn-side-drawer {\n        padding-bottom: 6rem;\n      }\n\n      .side-drawer-header {\n        box-sizing: border-box;\n        height: p-px-to-rem(92px);\n        padding-top: p-px-to-rem(42px);\n\n        @include pds-media-query-min('l') {\n          height: p-px-to-rem(96px);\n        }\n\n        @include pds-media-query-min('xxl') {\n          height: p-px-to-rem(128px);\n          padding-top: p-px-to-rem(60px);\n        }\n\n        phn-back-button {\n          margin-left: p-px-to-rem(-8px); // to make it look like the icon starts with the side-drawer-item\n          height: p-px-to-rem(24px);\n        }\n      }\n    }\n\n    &#main-drawer {\n      z-index: $phn-z-index-mega-flyout + 1;\n      float: right;\n      border-radius: 0 4px 4px 0;\n      background-color: $main-drawer-background-color;\n      box-sizing: border-box;\n      position: static;\n      width: map-get($drawer-width, 'default');\n      padding-left: map-get($drawer-paddings, 'default');\n      padding-right: map-get($drawer-paddings, 'default');\n\n      @include pds-media-query-min('m') {\n        width: map-get($drawer-width, 'm');\n        padding-left: map-get($drawer-paddings, 'm');\n        padding-right: map-get($drawer-paddings, 'm');\n      }\n      @include pds-media-query-min('l') {\n        width: map-get($drawer-width, 'l');\n        padding-left: map-get($drawer-paddings, 'l');\n        padding-right: map-get($drawer-paddings, 'l');\n      }\n      @include pds-media-query-min('xxl') {\n        width: map-get($drawer-width, 'xxl');\n        padding-left: map-get($drawer-paddings, 'xxl');\n        padding-right: map-get($drawer-paddings, 'xxl');\n      }\n\n      & > div {\n        left: 0;\n      }\n\n\n      phn-router {\n        padding-bottom: 6rem;\n      }\n\n      .main-drawer-header {\n        box-sizing: border-box;\n        height: p-px-to-rem(66px);\n        padding-top: p-px-to-rem(40px);\n        margin-bottom: p-px-to-rem(26px);\n\n        @include pds-media-query-min('l') {\n          margin-bottom: p-px-to-rem(30px);\n        }\n\n        @include pds-media-query-min('xxl') {\n          height: p-px-to-rem(84px);\n          margin-bottom: p-px-to-rem(44px);\n          padding-top: p-px-to-rem(40px);\n        }\n\n        phn-back-button {\n          // to make it look like the icon aligns with the left border of the main drawer\n          margin-left: p-px-to-rem(-8px);\n          height: p-px-to-rem(24px);\n        }\n      }\n\n      .bottom-gradient {\n        z-index: 302;\n\n        @include drawer-gradient(rgba(255, 255, 255, 0), $main-drawer-background-color);\n        width: map-get($drawer-width, 'default');\n        margin-left: map-get($drawer-width, 'default');\n        border-radius: 0 0 4px 0;\n\n        @include pds-media-query-min('m') {\n          width: map-get($drawer-width, 'm');\n          margin-left: map-get($drawer-width, 'm');\n        }\n\n        @include pds-media-query-min('l') {\n          width: map-get($drawer-width, 'l');\n          margin-left: map-get($drawer-width, 'l');\n        }\n\n        @include pds-media-query-min('xxl') {\n          width: map-get($drawer-width, 'xxl');\n          margin-left: map-get($drawer-width, 'xxl');\n        }\n      }\n    }\n  }\n}\n","import { Component, Element, Event, EventEmitter, Fragment, h, Host, Listen, Prop, State, Watch } from '@stencil/core';\nimport { findTopLevelRoutingKey, RoutingKeyPointers, RoutingKeys } from '../../entities/routing-key';\nimport analyticsManager from '../../services/analytics/analytics-manager';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport animationManager from '../../services/animations/animation-manager';\nimport { getBackButtonText } from '../../services/menu-items-service';\nimport { navContentStore } from '../../state/nav-content-store';\nimport {\n  ClickElementTypes,\n  DisplayElementTypes,\n  ElementTypes,\n  EventActions,\n  FOCUSABLE_ELEMENTS_SELECTOR\n} from '../../utility/constants';\nimport { focusOnElement, getHTMLElement, isString } from '../../utility/helper';\nimport {\n  registerBackToPreviousMenuSequence,\n  registerCloseDoubleDrawerSequence,\n  registerForwardToNextMenuSequence,\n  registerOpenDoubleDrawerSequence,\n  registerTransitionSequence,\n  RouteChangeCallbacks\n} from './double-drawer-animation-sequences';\nimport { getAllFocusableElements } from './helper';\nimport { MainDrawerContent } from './main-drawer-content';\nimport { SideDrawerContent } from './side-drawer-content';\nimport { DrawerStatusTypes, DrawerStatusValues } from '../../utility/constants/app';\n\n@Component({\n  tag: 'phn-double-drawer',\n  styleUrl: 'double-drawer.scss',\n  scoped: true\n})\nexport class DoubleDrawer {\n  @Prop() breakpoint!: number;\n  @Prop() locale!: string;\n  @Prop() initialUsingKeyboard = false;\n  @Prop() routingKeyHistory: string[] = [];\n  @Prop() routingKeyPointer: number = RoutingKeyPointers.LEVEL_ZERO;\n  @Prop() receivedContent!: boolean;\n\n  @Event() clickDrawerHeaderClose!: EventEmitter<void>;\n  @Event() clickDrawerHeaderBack!: EventEmitter<void>;\n  @Event() drawerClosed!: EventEmitter<void>;\n  @Event() drawerChanged!: EventEmitter<boolean>;\n  @Event() backdropClosed!: EventEmitter<void>;\n  @Event({ composed: true, bubbles: true }) phnDrawerStatus!: EventEmitter<{\n    status: DrawerStatusTypes;\n  }>;\n\n  @Element() el!: HTMLPhnDoubleDrawerElement;\n\n  @State() usingKeyboard = false;\n  @State() animatingRoutingKeyPointer = RoutingKeyPointers.LEVEL_ZERO;\n  @State() isAnimating = true;\n  @State() animatingRoutingKey = '';\n\n  @Watch('routingKeyPointer')\n  watchRoutingKeyPointer(newPointer: number, oldPointer: number): void {\n    if (oldPointer < newPointer) {\n      const topLevelRoutingKey = findTopLevelRoutingKey(this.routingKeyHistory[this.routingKeyPointer]);\n      if (topLevelRoutingKey === RoutingKeys.DEALER_SEARCH) {\n        animationManager.play('transitionSameLevelDoubleDrawer').then(() => this.focusOnInitialElement());\n      } else {\n        animationManager.play('transitionNextLevelDoubleDrawer').then(() => this.focusOnInitialElement());\n      }\n    }\n  }\n\n  @Watch('routingKeyHistory')\n  watchRoutingKeyHistory(newHistory: string[], oldHistory: string[]): void {\n    if (newHistory.length < oldHistory.length || this.animateIfSameLength(newHistory, oldHistory)) {\n      animationManager.play('transitionSameLevelDoubleDrawer').then(() => this.focusOnInitialElement());\n    }\n  }\n\n  @Listen('resize', { target: 'window' })\n  onResizeWindow(): void {\n    if (this.animatingRoutingKeyPointer !== this.routingKeyPointer) {\n      this.animatingRoutingKey = this.routingKeyHistory[this.routingKeyPointer];\n      this.animatingRoutingKeyPointer = this.routingKeyPointer;\n    }\n  }\n\n  @Listen('keydown', { passive: false })\n  handleKeyDown(e: KeyboardEvent): void {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    let activeRoutingKey = this.routingKeyHistory[this.routingKeyPointer];\n    if (activeRoutingKey.startsWith(RoutingKeys.DEALER_SEARCH)) {\n      activeRoutingKey = activeRoutingKey.split('/')[0];\n    }\n\n    const eventSourceElement = getHTMLElement(e.target);\n    if (eventSourceElement === null) {\n      return;\n    }\n\n    const focusableSideDrawerElements = getAllFocusableElements(this.el.querySelector('#side-drawer'));\n    let focusableMainDrawerElements = getAllFocusableElements(this.el.querySelector('#main-drawer'));\n\n    if (focusableSideDrawerElements.length === 0 || focusableMainDrawerElements.length === 0) {\n      return;\n    }\n\n    const highlightedSideDrawerElementIndex = focusableSideDrawerElements.findIndex(\n      (el) => el.getAttribute('data-id') === activeRoutingKey\n    );\n    const highlightedSideDrawerElement = focusableSideDrawerElements[highlightedSideDrawerElementIndex];\n\n    if (activeRoutingKey === RoutingKeys.DEALER_SEARCH) {\n      focusableMainDrawerElements = focusableMainDrawerElements.filter(\n        (element) => element.nodeName !== 'BUTTON' && element.nodeName !== 'A'\n      );\n    }\n\n    const lastSideDrawerElement = focusableSideDrawerElements[focusableSideDrawerElements.length - 1];\n    const lastMainDrawerElement = focusableMainDrawerElements[focusableMainDrawerElements.length - 1];\n\n    const closeButton = this.el.querySelector('.close-button');\n\n    if (!e.shiftKey) {\n      if (eventSourceElement === highlightedSideDrawerElement) {\n        e.preventDefault();\n        focusOnElement(focusableMainDrawerElements[0]);\n        return;\n      }\n\n      if (eventSourceElement === lastSideDrawerElement) {\n        e.preventDefault();\n        if (closeButton !== null) {\n          focusOnElement(closeButton);\n        }\n      }\n\n      if (eventSourceElement === lastMainDrawerElement) {\n        e.preventDefault();\n\n        const nextSideDrawerElementIndex =\n          highlightedSideDrawerElementIndex + 1 >= focusableSideDrawerElements.length\n            ? 0\n            : highlightedSideDrawerElementIndex + 1;\n\n        const nextSideDrawerElement = getHTMLElement(focusableSideDrawerElements[nextSideDrawerElementIndex]);\n\n        focusOnElement(nextSideDrawerElement);\n      }\n\n      if (eventSourceElement === closeButton) {\n        e.preventDefault();\n        focusOnElement(focusableSideDrawerElements[0]);\n      }\n    } else if (e.shiftKey) {\n      if (eventSourceElement === focusableMainDrawerElements[0]) {\n        e.preventDefault();\n        if (highlightedSideDrawerElement !== null) {\n          focusOnElement(highlightedSideDrawerElement);\n        }\n      }\n\n      if (eventSourceElement === closeButton) {\n        e.preventDefault();\n        focusOnElement(lastSideDrawerElement);\n      }\n    }\n  }\n\n  @Listen('mobileMenuItemClick')\n  handleMobileMenuItemClick(event: CustomEvent<string[]>): void {\n    if (animationManager.isPlaying('transitionNextLevelDoubleDrawer')) {\n      event.stopPropagation();\n    }\n  }\n\n  @Listen('sideDrawerItemClick')\n  handleSideDrawerItemClick(event: CustomEvent<string[]>): void {\n    if (animationManager.isPlaying('transitionSameLevelDoubleDrawer')) {\n      event.stopPropagation();\n    }\n  }\n\n  private focusOnInitialElement(): void {\n    const isNavigatingBackwards = this.routingKeyPointer < this.routingKeyHistory.length - 1;\n\n    let focusedRoutingKey = isNavigatingBackwards\n      ? this.routingKeyHistory[this.routingKeyPointer + 1]\n      : this.routingKeyHistory[this.routingKeyPointer];\n    if (focusedRoutingKey.startsWith(RoutingKeys.DEALER_SEARCH)) {\n      focusedRoutingKey = focusedRoutingKey.split('/')[0];\n    }\n\n    const autoFocusElement = getHTMLElement(this.el.querySelector('.autofocus'));\n    if (autoFocusElement !== null) {\n      focusOnElement(autoFocusElement);\n      return;\n    }\n\n    if (this.usingKeyboard) {\n      let focusableElement: HTMLElement | null = null;\n\n      if (isString(focusedRoutingKey)) {\n        focusableElement = getHTMLElement(this.el.querySelector(`[data-id=\"${focusedRoutingKey}\"]`));\n      }\n\n      if (focusableElement === null) {\n        focusableElement = getHTMLElement(this.el.querySelector(`${FOCUSABLE_ELEMENTS_SELECTOR}`));\n      }\n\n      if (focusableElement !== null) {\n        focusOnElement(focusableElement);\n      }\n\n      return;\n    }\n\n    const firstFocus = getHTMLElement(this.el.querySelector('.first-focus'));\n    if (firstFocus !== null) {\n      focusOnElement(firstFocus);\n    }\n  }\n\n  private async goBackToPreviousMenu(): Promise<void> {\n    if (this.routingKeyPointer === this.animatingRoutingKeyPointer) {\n      this.clickDrawerHeaderBack.emit();\n\n      const topLevelRoutingKey = findTopLevelRoutingKey(this.routingKeyHistory[this.routingKeyPointer]);\n      if (topLevelRoutingKey === RoutingKeys.DEALER_SEARCH) {\n        animationManager.play('transitionSameLevelDoubleDrawerReverse').then(() => this.focusOnInitialElement());\n      } else {\n        animationManager.play('transitionPreviousLevelDoubleDrawer').then(() => this.focusOnInitialElement());\n      }\n    }\n  }\n\n  private async updateRouting(): Promise<void> {\n    this.animatingRoutingKey = this.routingKeyHistory[this.routingKeyPointer];\n    this.animatingRoutingKeyPointer = this.routingKeyPointer;\n\n    const isNavigatingBackwards = this.routingKeyPointer < this.routingKeyHistory.length - 1;\n    this.drawerChanged.emit(isNavigatingBackwards);\n\n    this.sendDoubleDrawerLoadDataEvent();\n  }\n\n  private sendDoubleDrawerLoadDataEvent() {\n    analyticsManager.setDrawerType(DisplayElementTypes.DoubleDrawer);\n    const activeRoutingKey: string = this.animatingRoutingKey || '';\n\n    globalDataLayerService.pushDataLayerEvent(EventActions.DRAWER_LOAD, {\n      componentDisplay: {\n        displayElementType: analyticsManager.calculateDisplayElementType(activeRoutingKey, ElementTypes.doubleDrawer),\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementName: 'Double Drawer'\n      }\n    });\n  }\n\n  private sendDataEventOfCloseButtonClick() {\n    const activeRoutingKey: string = this.animatingRoutingKey || '';\n    globalDataLayerService.pushDataLayerEvent(EventActions.MENU_CLOSE_CLICK, {\n      componentClick: {\n        clickElementId: 'mainmenu.drawer.close',\n        clickElementName: 'X',\n        clickElementType: ClickElementTypes.Button,\n        targetElement: 'level-0'\n      },\n      componentDisplay: {\n        displayElementType: analyticsManager.calculateDisplayElementType(activeRoutingKey, ElementTypes.closeButton),\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementName: 'Double Drawer'\n      }\n    });\n  }\n\n  private animateIfSameLength(newHistory: string[], oldHistory: string[]): boolean {\n    return (\n      newHistory.length === oldHistory.length &&\n      this.routingKeyPointer === newHistory.length - 1 &&\n      newHistory[newHistory.length - 1] !== oldHistory[oldHistory.length - 1]\n    );\n  }\n\n  componentWillLoad(): void {\n    this.animatingRoutingKey = this.routingKeyHistory[this.routingKeyPointer];\n    this.animatingRoutingKeyPointer = this.routingKeyPointer;\n    this.usingKeyboard = this.initialUsingKeyboard;\n  }\n\n  componentDidLoad(): void {\n    const routeChangeCallbacks: RouteChangeCallbacks = {\n      onSlideMainDrawerOutEnd: async () => this.updateRouting()\n    };\n\n    registerOpenDoubleDrawerSequence({\n      onAnimationStarts: () => {\n        this.phnDrawerStatus.emit({ status: DrawerStatusValues.startOpening });\n      },\n      onAnimationEnds: () => {\n        this.phnDrawerStatus.emit({ status: DrawerStatusValues.finishOpening });\n        this.focusOnInitialElement();\n      }\n    });\n    registerCloseDoubleDrawerSequence({\n      onBackdropFadeOutEnd: async () => {\n        this.backdropClosed.emit();\n      },\n      onAnimationStarts: () => {\n        this.phnDrawerStatus.emit({ status: DrawerStatusValues.startClosing });\n      },\n      onAnimationEnds: () => {\n        this.phnDrawerStatus.emit({ status: DrawerStatusValues.finishClosing });\n      }\n    });\n    registerBackToPreviousMenuSequence(routeChangeCallbacks);\n    registerForwardToNextMenuSequence(routeChangeCallbacks);\n    registerTransitionSequence(routeChangeCallbacks);\n    registerTransitionSequence(routeChangeCallbacks, 'reverse');\n\n    this.sendDoubleDrawerLoadDataEvent();\n  }\n\n  render(): HTMLPhnDoubleDrawerElement {\n    const previousRoutingKey = this.routingKeyHistory[this.animatingRoutingKeyPointer - 1];\n    const backButtonText = getBackButtonText(navContentStore.state, previousRoutingKey);\n    const topLevelRoutingKey = findTopLevelRoutingKey(this.animatingRoutingKey);\n    const wasPreviouslyOnDealerSearch = findTopLevelRoutingKey(previousRoutingKey) === RoutingKeys.DEALER_SEARCH;\n    const isOnDealerDetails =\n      topLevelRoutingKey === RoutingKeys.DEALER_SEARCH && this.animatingRoutingKey !== topLevelRoutingKey;\n    return (\n      <Host role=\"dialog\" aria-modal=\"true\" aria-label=\"navigation modal dialog\">\n        <phn-p-button\n          variant=\"secondary\"\n          class=\"close-button\"\n          theme=\"dark\"\n          hide-label=\"true\"\n          icon={'close'}\n          aria=\"{ 'aria-label': 'close modal dialog' }\"\n          data-test-id=\"close-button\"\n          onClick={() => {\n            this.sendDataEventOfCloseButtonClick();\n            this.clickDrawerHeaderClose.emit();\n          }}\n        />\n        {isString(this.animatingRoutingKey) ? (\n          <Fragment>\n            <div class=\"drawer\" id=\"side-drawer\">\n              <SideDrawerContent\n                activeRoutingKey={this.animatingRoutingKey}\n                locale={this.locale}\n                backButtonText={wasPreviouslyOnDealerSearch ? '' : backButtonText}\n                onClickBack={() => this.goBackToPreviousMenu()}\n              />\n            </div>\n\n            <div class=\"drawer\" id=\"main-drawer\">\n              <MainDrawerContent\n                activeRoutingKey={this.animatingRoutingKey}\n                breakpoint={this.breakpoint}\n                locale={this.locale}\n                backButtonText={isOnDealerDetails ? backButtonText : ''}\n                receivedContent={this.receivedContent}\n                onClickBack={() => this.goBackToPreviousMenu()}\n              />\n              <div class=\"bottom-gradient\" />\n            </div>\n          </Fragment>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}