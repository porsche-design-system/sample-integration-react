{"version":3,"names":["animationRegistry","sequences","animationTimeoutDurationMs","initialize","getRootElement","addEventListener","animationEndListener","register","sequenceIdentifier","animationSequence","reset","Object","keys","forEach","key","play","sequence","undefined","Promise","_","reject","Error","concat","running","promise","resolve","value","applyCurrentAnimationSequenceStep","currentStepIndex","steps","length","finishAnimationSequence","sequenceStep","promises","_i","sequenceStep_1","animation","push","executeAnimation","all","_b","sent","_a","call","error_1","setTimeout","event","target","getHTMLElement","type","id","dataset","phnAmId","finishAnimationPromise","onStart","onEnd","elementSelector","maybePromise","isPromise","_c","animatedElements","Array","from","querySelectorAll","animationExecutors","animatedElements_1","element","animationPromiseEffect","generateAndCleanUpAnimationPromise","animationPromiseGenerator","cleanUpBeforeAnimation","cleanUpAfterAnimation","animationPromise","classList","remove","className","Math","floor","random","add","toString","timeout","_resolve","_reject","console","warn","String","clearTimeout","isPlaying","makeSequence","sequenceSteps","animationDefaults","map","step","assign","animationManager"],"sources":["src/services/animations/animation-manager.ts"],"sourcesContent":["import { AnimationSequencesType } from '../../utility/constants';\nimport { getHTMLElement, getRootElement, isPromise } from '../../utility/helper';\n\nexport type AnimationStartsCallbacks = {\n  onAnimationStarts?: (() => Promise<unknown>) | (() => void);\n};\n\nexport type AnimationEndsCallbacks = {\n  onAnimationEnds?: (() => Promise<unknown>) | (() => void);\n};\n\nexport type AnimationStatusCallbacks = AnimationStartsCallbacks & AnimationEndsCallbacks;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type SequenceIdentifier = AnimationSequencesType | (string & {});\n\nexport interface NaviAnimation {\n  animation: AnimationGeneratorType;\n  elementSelector: string;\n  onStart?: (() => Promise<unknown>) | (() => unknown);\n  onEnd?: (() => Promise<unknown>) | (() => unknown);\n}\n\nexport type SequenceStep = Array<NaviAnimation>;\n\nexport type AnimationSequence = {\n  steps: Array<SequenceStep>;\n  currentStepIndex: number;\n  running: boolean;\n  resolve?: (value: unknown) => void;\n  reject?: (reason?: unknown) => void;\n  promise?: Promise<void>;\n};\n\nexport type AnimationGeneratorType = {\n  className: string;\n  cleanUpBeforeAnimation?: ((el: HTMLElement) => Promise<void>) | ((el: HTMLElement) => void) | boolean;\n  cleanUpAfterAnimation?: ((el: HTMLElement) => Promise<void>) | ((el: HTMLElement) => void) | boolean;\n};\n\nconst animationRegistry: Record<\n  string,\n  {\n    promise: Promise<void>;\n    resolve: (value: void) => void;\n    reject: (reason?: unknown) => void;\n    animation: AnimationGeneratorType;\n    timeout: NodeJS.Timeout;\n  }\n> = {};\n\nconst sequences: {\n  [key in SequenceIdentifier]?: AnimationSequence | undefined;\n} = {};\n\nconst animationTimeoutDurationMs = 1000;\n\nfunction initialize(): void {\n  getRootElement().addEventListener('transitionend', animationEndListener);\n  getRootElement().addEventListener('animationend', animationEndListener);\n}\n\nfunction register(sequenceIdentifier: SequenceIdentifier, animationSequence: AnimationSequence): void {\n  sequences[sequenceIdentifier] = animationSequence;\n}\n\nfunction reset(): void {\n  Object.keys(sequences).forEach((key) => delete sequences[key]);\n}\n\nasync function play(sequenceIdentifier: SequenceIdentifier): Promise<unknown> {\n  const sequence = sequences[sequenceIdentifier];\n\n  if (sequence === undefined) {\n    return new Promise((_, reject) => reject(new Error(`Sequence ${sequenceIdentifier} has not been registered`)));\n  }\n\n  if (!sequence.running) {\n    sequence.promise = new Promise<void>((resolve, reject) => {\n      sequence.resolve = () => {\n        sequence.running = false;\n        resolve();\n      };\n\n      sequence.reject = (value: unknown) => {\n        sequence.running = false;\n        reject(value);\n      };\n\n      sequence.running = true;\n\n      applyCurrentAnimationSequenceStep(sequence);\n    });\n  }\n\n  return sequence.promise;\n}\n\nasync function applyCurrentAnimationSequenceStep(sequence: AnimationSequence) {\n  if (sequence.currentStepIndex >= sequence.steps.length) {\n    finishAnimationSequence(sequence);\n    return;\n  }\n\n  const sequenceStep = sequence.steps[sequence.currentStepIndex];\n\n  const promises = [];\n  for (const animation of sequenceStep) {\n    promises.push(executeAnimation(animation));\n  }\n\n  try {\n    await Promise.all(promises);\n  } catch (error) {\n    sequence.reject?.(error);\n    return;\n  }\n\n  sequence.currentStepIndex += 1;\n\n  setTimeout(() => applyCurrentAnimationSequenceStep(sequence), 0);\n}\n\nfunction finishAnimationSequence(sequence: AnimationSequence) {\n  sequence.currentStepIndex = 0;\n  sequence.resolve?.(null);\n  sequence.promise = undefined;\n}\n\nfunction animationEndListener(event: AnimationEvent | TransitionEvent): void {\n  const target = getHTMLElement(event.target);\n\n  if (target === null) {\n    throw new Error(`${event.type} event target is null`);\n  }\n\n  const id = target.dataset.phnAmId;\n\n  if (id !== undefined && id !== null) {\n    finishAnimationPromise(id, target);\n  }\n}\n\nasync function executeAnimation({ onStart, onEnd, animation, elementSelector }: NaviAnimation): Promise<void> {\n  if (onStart) {\n    const maybePromise = onStart();\n    if (isPromise<void>(maybePromise)) {\n      await maybePromise;\n    }\n  }\n\n  const animatedElements: HTMLElement[] = Array.from(getRootElement().querySelectorAll(elementSelector));\n  const animationExecutors = [];\n\n  for (const element of animatedElements) {\n    const animationPromiseEffect = generateAndCleanUpAnimationPromise(animationPromiseGenerator)(element, animation);\n    animationExecutors.push(animationPromiseEffect);\n  }\n\n  await Promise.all(animationExecutors);\n  if (onEnd) {\n    const maybePromise = onEnd();\n    if (isPromise<void>(maybePromise)) {\n      await maybePromise;\n    }\n  }\n}\n\nfunction generateAndCleanUpAnimationPromise(\n  animationPromiseGenerator: (element: HTMLElement, animation: AnimationGeneratorType) => Promise<void>\n): (element: HTMLElement, animation: AnimationGeneratorType) => Promise<void> {\n  return async function (element: HTMLElement, animation: AnimationGeneratorType): Promise<void> {\n    const { cleanUpBeforeAnimation, cleanUpAfterAnimation } = animation;\n\n    const animationPromise = animationPromiseGenerator(element, animation);\n\n    if (typeof cleanUpBeforeAnimation === 'function') {\n      const maybePromise: void | Promise<void> = cleanUpBeforeAnimation(element);\n      if (isPromise<void>(maybePromise)) {\n        await maybePromise;\n      }\n    }\n\n    await animationPromise;\n\n    if (typeof cleanUpAfterAnimation === 'function') {\n      const maybePromise: void | Promise<void> = cleanUpAfterAnimation(element);\n      if (isPromise<void>(maybePromise)) {\n        await maybePromise;\n      }\n    }\n\n    if (cleanUpAfterAnimation !== false) {\n      // only not remove class if cleanUpAfterAnimation is explicitely set to false\n      element.classList.remove(animation.className);\n    }\n  };\n}\n\nconst animationPromiseGenerator = (element: HTMLElement, animation: AnimationGeneratorType): Promise<void> => {\n  const id = Math.floor(Math.random() * 1e7);\n\n  element.classList.add(animation.className);\n  element.dataset.phnAmId = id.toString();\n\n  let resolve!: (value: void) => void;\n  let reject!: (reason?: unknown) => void;\n  let timeout!: NodeJS.Timeout;\n  const promise = new Promise<void>((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n\n    timeout = setTimeout(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Animation with className ${animation.className} didn't finish after ${animationTimeoutDurationMs}ms. Forcefully finishing animation and continuing with the rest of the sequence.`\n      );\n      finishAnimationPromise(String(id), element);\n    }, animationTimeoutDurationMs);\n  });\n\n  animationRegistry[id] = { animation, resolve, reject, promise, timeout };\n\n  return promise;\n};\n\nfunction finishAnimationPromise(phnAmId: string, target: HTMLElement): void {\n  const { resolve, timeout } = animationRegistry[phnAmId];\n\n  clearTimeout(timeout);\n  delete animationRegistry[phnAmId];\n  delete target.dataset.phnAmId;\n\n  resolve();\n}\n\nfunction isPlaying(sequenceIdentifier: SequenceIdentifier): boolean {\n  const sequence = sequences[sequenceIdentifier];\n\n  if (sequence === undefined) {\n    throw new Error(`Sequence ${sequenceIdentifier} has not been registered`);\n  }\n\n  return sequence.promise !== undefined;\n}\n\nfunction makeSequence(\n  sequenceSteps: SequenceStep[],\n  animationDefaults?: Partial<Omit<AnimationGeneratorType, 'name'>>\n): AnimationSequence {\n  return {\n    steps: sequenceSteps.map((step) => step.map((animation) => ({ ...animationDefaults, ...animation }))),\n    currentStepIndex: 0,\n    running: false\n  };\n}\n\nexport default {\n  initialize,\n  play,\n  isPlaying,\n  register,\n  reset\n};\n\nexport { makeSequence };\n"],"mappings":"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"}