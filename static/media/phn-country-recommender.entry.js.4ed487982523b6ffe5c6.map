{"version":3,"names":["countryRecommenderCss","CountryRecommender","class_1","prototype","localeWatcher","this","setFlagURL","_c","sent","footerAssetsUrl","getConfig","navStateStore","state","env","FOOTER_ASSETS_URL","getFlagURL","locale","flagURL","_d","closeCountryRecommender","globalDataLayerService","pushDataLayerEvent","EventActions","COUNTRY_RECOMMENDER_CLOSE","componentClick","clickElementId","clickElementName","clickElementType","ClickElementTypes","Button","el","classList","remove","add","componentWillLoad","componentDidLoad","COUNTRY_RECOMMENDER_LOAD","Link","handleAnimationEnd","e","animationName","_a","getHTMLElement","target","bannerClosed","emit","_b","sendDataLayerEvent","COUNTRY_RECOMMENDER_CHANGE","content","change","id","text","targetUrl","COUNTRY_SELECTOR_URL","render","_this","statement","region","language","h","Host","class","isString","theme","size","source","color","onClick","aria","href","icon"],"sources":["src/components/country-recommender/country-recommender.scss?tag=phn-country-recommender&encapsulation=scoped","src/components/country-recommender/country-recommender.tsx"],"sourcesContent":["@import '../../scss';\n\n:host {\n  display: block;\n  @include apply-themes();\n  background-color: $pds-theme-light-primary;\n  width: 100%;\n  overflow: hidden;\n  color: white;\n  line-height: p-px-to-rem(20px);\n  border-bottom: 1PX solid #E3E4E5;\n  font-size: p-px-to-rem(12px);\n\n\n  &.showing {\n    animation: slideDown 1s ease-in-out 0s;\n  }\n\n  &.hiding {\n    animation: slideUp 1s ease-in-out 0s;\n  }\n\n  @include pds-media-query-min('s') {\n    font-size: p-px-to-rem(14px);\n  }\n\n  @include pds-media-query-min('xl') {\n    font-size: p-px-to-rem(16px);\n  }\n\n  phn-p-button-pure, phn-p-link-pure {\n    height: fit-content;\n  }\n\n  .country-recommender-container {\n    @include pds-grid;\n\n\n\n    font-family: $pds-font-family;\n    font-weight: $pds-font-weight-regular;\n    color: $pds-theme-light-background-base;\n\n    .country-recommender {\n      font-family: $pds-font-family;\n      font-weight: $pds-font-weight-regular;\n      color: $pds-theme-light-background-base;\n\n      overflow: hidden;\n\n      display: flex;\n      align-items: center;\n      position: relative;\n      grid-column: wide-start/wide-end;\n      @include limit-stretch();\n      padding-top: p-px-to-rem(26px);\n      padding-bottom: p-px-to-rem(10px);\n\n      .country-recommender-icons-tray {\n        display: grid;\n        grid-template-columns: 4fr 1fr;\n        grid-template-rows: 1fr;\n        gap: 0px 0px;\n        grid-template-areas: \"left  right\";\n        width: 100%;\n\n        div.left-icons,\n        div.right-icons {\n          display: flex;\n          flex-direction: row;\n        }\n\n        div.left-icons {\n          grid-area: left;\n          flex-wrap: wrap;\n        }\n\n        div.right-icons {\n          display: flex;\n          flex-direction: row;\n          justify-self: end;\n          grid-area: right;\n        }\n\n\n        .statement {\n          order: 0;\n          padding-top: p-px-to-rem(2px);\n          padding-right: p-px-to-rem(8px);\n\n          @include pds-media-query-max('s') {\n            padding-bottom: p-px-to-rem(17px);\n          }\n          @include pds-media-query-max('xs') {\n            padding-bottom: p-px-to-rem(17px);\n          }\n          @include pds-media-query-min-max('base', 'xs') {\n           padding-bottom: p-px-to-rem(10px);\n          }\n        }\n\n        .flag {\n          margin-right: p-px-to-rem(8px);\n          max-height: p-px-to-rem(24px);\n          width: p-px-to-rem(20px);\n          height: p-px-to-rem(20px);\n          border-radius: 100%;\n          border: 1px solid $pds-theme-light-contrast-medium;\n          background-color: $pds-theme-light-contrast-medium;\n\n          @include pds-media-query-min('m') {\n            width: p-px-to-rem(22px);\n            height: p-px-to-rem(22px);\n          }\n        }\n\n        .flag-region {\n          display: flex;\n        }\n\n        .language {\n          padding-right: p-px-to-rem(24px);\n          padding-top: p-px-to-rem(2px);\n          padding-bottom: p-px-to-rem(16px);\n        }\n\n        .selector {\n          display: inline-flex;\n          order: 2;\n          width: 100%;\n\n          @include pds-media-query-min('s') {\n            order: 1;\n            width: auto;\n          }\n        }\n\n        .change {\n          padding-top: p-px-to-rem(2px);\n          margin-bottom: p-px-to-rem(16px);\n        }\n\n        .close-button {\n          grid-area: right;\n          margin-left: auto;\n          order: 1;\n          font-size: p-px-to-rem(6px);\n\n          @include pds-media-query-min('s') {\n            order: 2;\n          }\n        }\n      }\n    }\n  }\n}\n\n\n","import { Component, Element, Event, EventEmitter, h, Host, Listen, Prop, State, Watch } from '@stencil/core';\nimport { TCountryRecommender } from '../../entities/content';\nimport { getFlagURL } from '../../services/content-service';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { ClickElementTypes, EventActions } from '../../utility/constants';\nimport { getConfig, getHTMLElement, isString } from '../../utility/helper';\n\n@Component({\n  tag: 'phn-country-recommender',\n  styleUrl: 'country-recommender.scss',\n  scoped: true\n})\nexport class CountryRecommender {\n  @Prop() locale!: string;\n  @Prop() content!: TCountryRecommender;\n\n  @State() flagURL = '';\n\n  @Element() el!: HTMLPhnCountryRecommenderElement;\n\n  @Event() bannerClosed!: EventEmitter<void>;\n\n  @Watch('locale')\n  async localeWatcher(): Promise<void> {\n    await this.setFlagURL();\n  }\n\n  private async setFlagURL() {\n    const footerAssetsUrl = getConfig(navStateStore.state.env).FOOTER_ASSETS_URL;\n    this.flagURL = await getFlagURL(footerAssetsUrl, this.locale);\n  }\n\n  private closeCountryRecommender(): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.COUNTRY_RECOMMENDER_CLOSE, {\n      componentClick: {\n        clickElementId: 'mainmenu.banner.close',\n        clickElementName: 'close',\n        clickElementType: ClickElementTypes.Button\n      }\n    });\n\n    this.el.classList.remove('showing');\n    this.el.classList.add('hiding');\n  }\n\n  componentWillLoad(): void {\n    this.setFlagURL();\n  }\n\n  componentDidLoad(): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.COUNTRY_RECOMMENDER_LOAD, {\n      componentClick: {\n        clickElementId: 'mainmenu.banner',\n        clickElementName: 'Country Recommender',\n        clickElementType: ClickElementTypes.Link\n      }\n    });\n  }\n\n  @Listen('animationend', { passive: true })\n  handleAnimationEnd(e: AnimationEvent): void {\n    if (e.animationName === 'slideUp') {\n      getHTMLElement(e.target)?.classList.remove('hiding');\n      this.bannerClosed.emit();\n    } else if (e.animationName === 'slideDown') {\n      getHTMLElement(e.target)?.classList.remove('showing');\n    }\n  }\n\n  private sendDataLayerEvent() {\n    globalDataLayerService.pushDataLayerEvent(EventActions.COUNTRY_RECOMMENDER_CHANGE, {\n      componentClick: {\n        clickElementId: this.content.change.id,\n        clickElementName: this.content.change.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: getConfig(navStateStore.state.env).COUNTRY_SELECTOR_URL\n      }\n    });\n  }\n\n  render(): HTMLPhnCountryRecommenderElement {\n    const { statement, region, language, change } = this.content;\n\n    return (\n      <Host class=\"showing\">\n        <div class=\"country-recommender-container\">\n          <div class=\"country-recommender\">\n            <div class=\"country-recommender-icons-tray\">\n              <div class=\"left-icons\">\n                {isString(statement) ? (\n                  <phn-p-text theme=\"dark\" size=\"inherit\" class=\"statement\">\n                    {statement}\n                  </phn-p-text>\n                ) : /* istanbul ignore next */\n                null}\n\n                <div class=\"selector\">\n                  <div class=\"phn-flex-row phn-flex-wrap\">\n                    <div class=\"flag-region\">\n                      {isString(this.flagURL) ? (\n                        <phn-p-icon\n                          source={this.flagURL}\n                          class=\"flag\"\n                          aria-hidden=\"true\"\n                          size=\"inherit\"\n                          color=\"inherit\"\n                        />\n                      ) : /* istanbul ignore next */\n                      null}\n\n                      {isString(region) && isString(language) ? (\n                        <phn-p-text theme=\"dark\" class=\"language\" size=\"inherit\">\n                          {region} / {language}\n                        </phn-p-text>\n                      ) : /* istanbul ignore next */\n                      null}\n                    </div>\n\n                    <phn-p-link-pure\n                      theme=\"dark\"\n                      size=\"inherit\"\n                      class=\"change\"\n                      onClick={() => this.sendDataLayerEvent()}\n                      aria={{ 'aria-label': 'Change Region or Language' }}\n                    >\n                      <a href={getConfig(navStateStore.state.env).COUNTRY_SELECTOR_URL}>{change.text}</a>\n                    </phn-p-link-pure>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"right-icons\">\n                <phn-p-button-pure\n                  theme=\"dark\"\n                  icon=\"close\"\n                  onClick={() => this.closeCountryRecommender()}\n                  class=\"close-button\"\n                  hide-label=\"true\"\n                >\n                  Close dialog\n                </phn-p-button-pure>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"k8DAAA,IAAMA,sBAAwB,k+gB,ICajBC,mBAAkB,W,sJAIV,E,CAObC,EAAAC,UAAAC,cAAN,W,4GACE,SAAMC,KAAKC,c,OAAXC,EAAAC,O,kBAGYN,EAAAC,UAAAG,WAAN,W,oHACAG,EAAkBC,UAAUC,cAAcC,MAAMC,KAAKC,kBAC3DP,EAAAF,KAAe,SAAMU,WAAWN,EAAiBJ,KAAKW,S,OAAtDT,EAAKU,QAAUC,EAAAV,O,kBAGTN,EAAAC,UAAAgB,wBAAA,WACNC,uBAAuBC,mBAAmBC,aAAaC,0BAA2B,CAChFC,eAAgB,CACdC,eAAgB,wBAChBC,iBAAkB,QAClBC,iBAAkBC,kBAAkBC,UAIxCxB,KAAKyB,GAAGC,UAAUC,OAAO,WACzB3B,KAAKyB,GAAGC,UAAUE,IAAI,S,EAGxB/B,EAAAC,UAAA+B,kBAAA,WACE7B,KAAKC,Y,EAGPJ,EAAAC,UAAAgC,iBAAA,WACEf,uBAAuBC,mBAAmBC,aAAac,yBAA0B,CAC/EZ,eAAgB,CACdC,eAAgB,kBAChBC,iBAAkB,sBAClBC,iBAAkBC,kBAAkBS,O,EAM1CnC,EAAAC,UAAAmC,mBAAA,SAAmBC,G,QACjB,GAAIA,EAAEC,gBAAkB,UAAW,EACjCC,EAAAC,eAAeH,EAAEI,WAAO,MAAAF,SAAA,SAAAA,EAAEV,UAAUC,OAAO,UAC3C3B,KAAKuC,aAAaC,M,MACb,GAAIN,EAAEC,gBAAkB,YAAa,EAC1CM,EAAAJ,eAAeH,EAAEI,WAAO,MAAAG,SAAA,SAAAA,EAAEf,UAAUC,OAAO,U,GAIvC9B,EAAAC,UAAA4C,mBAAA,WACN3B,uBAAuBC,mBAAmBC,aAAa0B,2BAA4B,CACjFxB,eAAgB,CACdC,eAAgBpB,KAAK4C,QAAQC,OAAOC,GACpCzB,iBAAkBrB,KAAK4C,QAAQC,OAAOE,KACtCzB,iBAAkBC,kBAAkBS,KACpCgB,UAAW3C,UAAUC,cAAcC,MAAMC,KAAKyC,uB,EAKpDpD,EAAAC,UAAAoD,OAAA,eAAAC,EAAAnD,KACQ,IAAAE,EAA0CF,KAAK4C,QAA7CQ,EAASlD,EAAAkD,UAAEC,EAAMnD,EAAAmD,OAAEC,EAAQpD,EAAAoD,SAAET,EAAM3C,EAAA2C,OAE3C,OACEU,EAACC,KAAI,CAACC,MAAM,WACVF,EAAA,OAAKE,MAAM,iCACTF,EAAA,OAAKE,MAAM,uBACTF,EAAA,OAAKE,MAAM,kCACTF,EAAA,OAAKE,MAAM,cACRC,SAASN,GACRG,EAAA,cAAYI,MAAM,OAAOC,KAAK,UAAUH,MAAM,aAC3CL,GAGL,KAEAG,EAAA,OAAKE,MAAM,YACTF,EAAA,OAAKE,MAAM,8BACTF,EAAA,OAAKE,MAAM,eACRC,SAAS1D,KAAKY,SACb2C,EAAA,cACEM,OAAQ7D,KAAKY,QACb6C,MAAM,OAAM,cACA,OACZG,KAAK,UACLE,MAAM,YAGV,KAECJ,SAASL,IAAWK,SAASJ,GAC5BC,EAAA,cAAYI,MAAM,OAAOF,MAAM,WAAWG,KAAK,WAC5CP,EAAM,MAAKC,GAGhB,MAGFC,EAAA,mBACEI,MAAM,OACNC,KAAK,UACLH,MAAM,SACNM,QAAS,WAAM,OAAAZ,EAAKT,oBAAL,EACfsB,KAAM,CAAE,aAAc,8BAEtBT,EAAA,KAAGU,KAAM5D,UAAUC,cAAcC,MAAMC,KAAKyC,sBAAuBJ,EAAOE,UAMlFQ,EAAA,OAAKE,MAAM,eACTF,EAAA,qBACEI,MAAM,OACNO,KAAK,QACLH,QAAS,WAAM,OAAAZ,EAAKrC,yBAAL,EACf2C,MAAM,eAAc,aACT,QAAM,oB,0PA7HJ,G"}