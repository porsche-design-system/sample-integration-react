{"version":3,"file":"static/js/54.45e869a3.chunk.js","mappings":"kYAYaA,GAAiBC,EAAAA,EAAAA,GAAiC,CAC7DC,gBAAiB,CAAEC,sBAAuB,EAAGC,oBAAqB,EAAGC,SAAU,O,SCNjEC,EAAgBC,EAAgBC,G,MACxCC,EAAqC,QAA1BC,EAAAC,EAAAA,EAAgBC,MAAMC,YAAI,IAAAH,OAAA,EAAAA,EAAEI,iBAC7C,YAAoBC,IAAbN,GAA0BA,EAASO,SAAST,IAAWC,IAAQS,EAAAA,EAAYJ,IACpF,C,SAMgBK,EACdX,EACAC,EACAE,GAEA,OAAOJ,EAAgBC,EAAQC,IATjC,SAAyBD,G,QACvB,OAAyD,QAAlDG,EAA0B,QAA1BF,EAAAG,EAAAA,EAAgBC,MAAMC,YAAI,IAAAL,OAAA,EAAAA,EAAEW,8BAAsB,IAAAT,OAAA,EAAAA,EAAEM,SAAST,MAAW,CACjF,CAOyCa,CAAgBb,IAAoB,OAATG,CACpE,C,SAEgBW,EACdd,EACAC,EACAE,GAEQ,IAAAD,EAAuBC,EAAOG,KAAxBS,EAAiBZ,EAAOa,aAEtC,OAAa,OAATd,EAAsBC,EAEtBY,GAAgBd,IAAQS,EAAAA,EAAYJ,KAW1C,SAAqCN,EAAkBC,EAAiBE,GACtE,OAAAc,OAAAC,OAAAD,OAAAC,OAAA,GACKlB,GAAO,CACVM,KAAIW,OAAAC,OAAAD,OAAAC,OAAA,GACCjB,GACAE,IAGT,CAlBWgB,CAA4BhB,EAASD,EAAMa,GAoBtD,SAAuCf,EAAiBC,EAAgBE,GACtE,QACO,OAAJH,QAAA,IAAAA,OAAI,EAAJA,EAAMO,iBAAiBE,SAASR,MAC5B,OAAJD,QAAA,IAAAA,OAAI,EAAJA,EAAMoB,4BAA4BX,SAASR,KAAWE,IAAQO,EAAAA,EAAYJ,IAE/E,CAtBMe,CAA8BnB,EAAMF,EAAQC,GAwBlD,SAAmCD,EAAkBC,GACnD,OAAAgB,OAAAC,OAAAD,OAAAC,OAAA,GACKlB,GAAO,CACVM,KAAIW,OAAAC,OAAAD,OAAAC,OAAA,GACCjB,GAAI,CACPqB,KAAM,MAGZ,CA/BWC,CAA0BpB,EAASD,GAGrCC,CACT,C,SA6BgBqB,EACdxB,EACAC,GAEA,OAAgB,OAATD,QAAA,IAAAA,OAAS,EAATA,EAAWyB,QAAO,SAACzB,GACxB,OAAwB,OAApBA,EAAK0B,iBAA2ClB,IAApBR,EAAK0B,WAC5BzB,EAAeQ,SAAS,MAG1BR,EAAeQ,SAAST,EAAK0B,W,GAExC,C,SAEgBC,IACN,IAAA3B,EAAcI,EAAAA,EAAgBC,MAAKuB,UACnC3B,EAAkB4B,EAAAA,EAAcxB,MAAKyB,cAK7C,MAAO,CAAEjC,oBAJuBJ,EAAeY,MAAMV,gBAAeE,oBAItCkC,UAFbC,EAAAA,EAAAA,GAAY/B,GAAwB,OAATD,QAAA,IAAAA,OAAS,EAATA,EAAWiC,mBAAoB,IAG7E,C,SAEgBC,EAAsBlC,GACpCP,EAAe0C,IAAI,kBAAmBnC,EAAML,gBAC9C,CAEA,SAASyC,IAIP,OAH4B3C,EAAeY,MAAKV,gBACTE,oBAEf,EAAI,eAAiB,OAC/C,C,SAEgBwC,EAAiBrC,EAAcC,GAC7C,QAAQ,GACN,KAAuB,IAAlBA,EACH,MAAO,GAAAqC,OAAGtC,GACZ,KAAKC,EAAgB,EACnB,MAAO,GAAAqC,OAAGtC,EAAI,WAChB,QACE,MAAO,GAAAsC,OAAGtC,GAEhB,C,SAEgBuC,EAAwBvC,GACtC,IAIMG,EAJqD,CACzDqC,SAAUJ,GAG6BpC,GAEzC,MAA2B,oBAAhBG,EAAmC,KAEvCA,GACT,C","sources":["../node_modules/@porschehn/navigation/dist/esm-es5/src/state/shop-state-store.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/utility/helpers/shop-helper.ts"],"sourcesContent":["import { createStore } from '@stencil/store';\n\nexport interface ShopInformation {\n  numberOfShoppingItems: number;\n  wishlistItemsNumber: number;\n  subTotal: string;\n}\n\nexport interface ShopStateStoreTypes {\n  shopInformation: ShopInformation;\n}\n\nexport const shopStateStore = createStore<ShopStateStoreTypes>({\n  shopInformation: { numberOfShoppingItems: 0, wishlistItemsNumber: 0, subTotal: '0' }\n});\n","import { Application, ApplicationType } from '../constants/app';\nimport { Content, TLink, TShopAdditionalContentMenu, TShopAuthStatus, TShopMenu } from '../../entities/content';\nimport { getUsername } from '../helper';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { shopStateStore, ShopStateStoreTypes } from '../../state/shop-state-store';\n\nexport function isShopAvailable(locale: string, app: ApplicationType): boolean {\n  const shopList = navContentStore.state.shop?.availableLocales;\n  return shopList !== undefined && shopList.includes(locale) && app === Application.shop;\n}\n\nfunction logoLinksToShop(locale: string): boolean {\n  return navContentStore.state.shop?.logoLinksToShopLocales?.includes(locale) || false;\n}\n\nexport function isShopAvailableAndLogoLinksToShop(\n  locale: string,\n  app: ApplicationType,\n  shop: TShopMenu | null\n): shop is TShopMenu {\n  return isShopAvailable(locale, app) && logoLinksToShop(locale) && shop !== null;\n}\n\nexport function modifyShopItemDependingOnMarket(\n  locale: string,\n  app: ApplicationType | undefined,\n  content: Content\n): Content {\n  const { shop, externalShop } = content;\n\n  if (shop === null) return content;\n\n  if (externalShop && app !== Application.shop) {\n    return replaceShopWithExternalShop(content, shop, externalShop);\n  }\n\n  if (shopNotAvailableOnGlobalPages(shop, locale, app)) {\n    return removeShopItemFromContent(content, shop);\n  }\n\n  return content;\n}\n\nfunction replaceShopWithExternalShop(content: Content, shop: TShopMenu, externalShop: TLink): Content {\n  return {\n    ...content,\n    shop: {\n      ...shop,\n      ...externalShop\n    }\n  };\n}\n\nfunction shopNotAvailableOnGlobalPages(shop: TShopMenu, locale: string, app: ApplicationType | undefined) {\n  return (\n    !shop?.availableLocales.includes(locale) ||\n    (shop?.availableLocalesOnlyForShop.includes(locale) && app !== Application.shop)\n  );\n}\n\nfunction removeShopItemFromContent(content: Content, shop: TShopMenu) {\n  return {\n    ...content,\n    shop: {\n      ...shop,\n      text: ''\n    }\n  };\n}\n\nexport function filterWishlistItemsByAuthStatus(\n  menuItems: TShopAdditionalContentMenu[],\n  authStatusList: TShopAuthStatus[]\n): TShopAdditionalContentMenu[] {\n  return menuItems?.filter((item) => {\n    if (item.authStatus === null || item.authStatus === undefined) {\n      return authStatusList.includes(null);\n    }\n\n    return authStatusList.includes(item.authStatus);\n  });\n}\n\nexport function getAvailableShopVariables(): { wishlistItemsNumber: number; username: string } {\n  const { myPorsche } = navContentStore.state;\n  const { loggedInState } = navStateStore.state;\n  const { wishlistItemsNumber } = shopStateStore.state.shopInformation;\n\n  const username = getUsername(loggedInState, myPorsche?.loggedInFallback || '');\n\n  return { wishlistItemsNumber, username };\n}\n\nexport function loadsShopPropsOnStore(props: ShopStateStoreTypes): void {\n  shopStateStore.set('shopInformation', props.shopInformation);\n}\n\nfunction getWishlistIconName(): string {\n  const { shopInformation } = shopStateStore.state;\n  const wishlistNumber = shopInformation.wishlistItemsNumber;\n\n  return wishlistNumber > 0 ? 'heart-filled' : 'heart';\n}\n\nexport function handleFilledIcon(icon: string, numberOfItems: number): string {\n  switch (true) {\n    case numberOfItems === 0:\n      return `${icon}`;\n    case numberOfItems > 0:\n      return `${icon}-filled`;\n    default:\n      return `${icon}`;\n  }\n}\n\nexport function getIconNameByMenuItemId(id: string): string | null {\n  const iconsGetterFunctions: Record<string, () => string> = {\n    wishlist: getWishlistIconName\n  };\n\n  const getIconName = iconsGetterFunctions[id];\n\n  if (typeof getIconName !== 'function') return null;\n\n  return getIconName();\n}\n"],"names":["shopStateStore","createStore","shopInformation","numberOfShoppingItems","wishlistItemsNumber","subTotal","isShopAvailable","t","e","n","o","navContentStore","state","shop","availableLocales","undefined","includes","Application","isShopAvailableAndLogoLinksToShop","logoLinksToShopLocales","logoLinksToShop","modifyShopItemDependingOnMarket","a","externalShop","Object","assign","replaceShopWithExternalShop","availableLocalesOnlyForShop","shopNotAvailableOnGlobalPages","text","removeShopItemFromContent","filterWishlistItemsByAuthStatus","filter","authStatus","getAvailableShopVariables","myPorsche","navStateStore","loggedInState","username","getUsername","loggedInFallback","loadsShopPropsOnStore","set","getWishlistIconName","handleFilledIcon","concat","getIconNameByMenuItemId","wishlist"],"sourceRoot":""}