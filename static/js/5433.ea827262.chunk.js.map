{"version":3,"file":"static/js/5433.ea827262.chunk.js","mappings":"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","sources":["../node_modules/@porschehn/navigation/dist/esm-es5/src/services/analytics/analytics-manager.ts","../node_modules/@porschehn/navigation/dist/esm-es5/node_modules/@porsche/globaldatalayer/dist/GlobalDataLayer.es.js","../node_modules/@porschehn/navigation/dist/esm-es5/src/services/analytics/global-data-layer-service.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/double-drawer/helper.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/double-drawer/main-drawer-content.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/double-drawer/side-drawer-content.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/double-drawer/double-drawer.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/double-drawer/double-drawer.scss?tag=phn-double-drawer&encapsulation=scoped","../node_modules/@porschehn/navigation/dist/esm-es5/src/state/router-store.ts"],"sourcesContent":["import { BodyType } from '../../entities/content';\nimport { determineMainDrawerLevel, getLastRoutingSegment, getPreviousRoutingKey } from '../../entities/routing-key';\nimport { routerStore } from '../../state/router-store';\nimport { DEALER_SEARCH_ELEMENT_TYPE, DisplayElementType, ElementType, ElementTypes } from '../../utility/constants';\nimport { isString } from '../../utility/helper';\nimport { getSideDrawerRoutingKey } from '../menu-items-service';\n\nconst state: {\n  drawerType?: DisplayElementType;\n  elementType?: ElementType;\n} = {};\n\nfunction setDrawerType(drawerType: DisplayElementType): void {\n  state.drawerType = drawerType;\n}\n\nfunction calculateDisplayElementId(routingKeyForNavigatingForward?: string): string {\n  const { drawerType } = state;\n  const mainDrawerRoutingKey =\n    (isString(routingKeyForNavigatingForward)\n      ? getPreviousRoutingKey(routingKeyForNavigatingForward)\n      : routerStore.state.routingKeyHistory[routerStore.state.routingKeyPointer]) || '';\n  const lastMainDrawerRoutingKey = getLastRoutingSegment(mainDrawerRoutingKey);\n  const mainDrawerLevel = determineMainDrawerLevel(mainDrawerRoutingKey);\n  const sideDrawerLevel = mainDrawerLevel - 1;\n\n  if (!isString(mainDrawerRoutingKey)) {\n    return 'level0';\n  }\n\n  const mainDrawerDisplayElementId = isString(mainDrawerRoutingKey)\n    ? `level${mainDrawerLevel}-${lastMainDrawerRoutingKey}`\n    : `level${mainDrawerLevel - 1}-unknown`;\n\n  if (drawerType === 'doubleDrawer') {\n    if (mainDrawerRoutingKey === '') {\n      return `level${sideDrawerLevel}-unknown_level${mainDrawerLevel}-unknown`;\n    }\n    const sideDrawerRoutingKey = getSideDrawerRoutingKey(mainDrawerRoutingKey);\n    return `level${sideDrawerLevel}-${sideDrawerRoutingKey}_${mainDrawerDisplayElementId}`;\n  }\n\n  return mainDrawerDisplayElementId;\n}\n\nfunction calculateDisplayElementType(\n  activeRoutingKey: string,\n  elementType: ElementType,\n  isSideDrawer?: boolean\n): string {\n  const { drawerType } = state;\n  const mainDrawerLevel = determineMainDrawerLevel(activeRoutingKey);\n\n  if (drawerType === 'doubleDrawer') {\n    let sideDrawerLevel = mainDrawerLevel;\n    if (isSideDrawer) {\n      sideDrawerLevel = sideDrawerLevel - 1;\n    }\n    return `level${sideDrawerLevel}_${elementType}`;\n  } else {\n    return isString(activeRoutingKey)\n      ? `level${mainDrawerLevel}_${elementType}`\n      : `level${mainDrawerLevel - 1}_${elementType}`;\n  }\n}\n\nfunction getModelName(bodyType: BodyType): string {\n  const urlSplitIntoPieces: string[] = bodyType.link.split('/');\n  const lastElementInUrlSplit: string = urlSplitIntoPieces[urlSplitIntoPieces.length - 1];\n  let modelName: string;\n\n  if (lastElementInUrlSplit === '') {\n    if (urlSplitIntoPieces[urlSplitIntoPieces.length - 2] === undefined) {\n      modelName = '';\n    } else {\n      modelName = urlSplitIntoPieces[urlSplitIntoPieces.length - 2].split('-').join(' ');\n    }\n  } else {\n    modelName = lastElementInUrlSplit.split('-').join(' ');\n  }\n\n  return modelName;\n}\n\nfunction getModelTargetElement(elementId: string, text: string): string | undefined {\n  if (elementId.includes('models')) {\n    const mainDrawerLevel = determineMainDrawerLevel(elementId);\n\n    return `level${mainDrawerLevel}_${text.toLowerCase()}`;\n  }\n\n  return;\n}\n\nfunction getDrawerType() {\n  return state.drawerType;\n}\n\nfunction getDealerResultsLoadDisplayElementId(elementId: string): string {\n  if (getDrawerType() === 'doubleDrawer') {\n    return elementId;\n  } else {\n    return calculateDisplayElementId();\n  }\n}\n\nfunction getDealerResultsLoadDisplayElementType(): string {\n  if (getDrawerType() === 'doubleDrawer') {\n    return DEALER_SEARCH_ELEMENT_TYPE;\n  } else {\n    return calculateDisplayElementType('', ElementTypes.dealerSearchForm);\n  }\n}\n\nexport default {\n  setDrawerType,\n  getDealerResultsLoadDisplayElementId,\n  calculateDisplayElementId,\n  getDealerResultsLoadDisplayElementType,\n  calculateDisplayElementType,\n  getModelName,\n  getModelTargetElement\n};\n","var M = Object.defineProperty;\nvar W = (r, t, e) => t in r ? M(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e;\nvar o = (r, t, e) => (W(r, typeof t != \"symbol\" ? t + \"\" : t, e), e);\nconst y = {\n  BEFORE_MERGE: \"BEFORE_MERGE\",\n  AFTER_MERGE: \"AFTER_MERGE\"\n}, w = {\n  clean: {\n    enabled: !1,\n    executionPlace: y.AFTER_MERGE,\n    values: [\"\", void 0, null]\n  },\n  logging: {\n    enabled: !0,\n    level: \"warn\"\n  },\n  validation: {\n    enabled: !1,\n    allowUnknown: !1,\n    verbose: !0\n  },\n  webProperties: {\n    enabled: !0,\n    eventNamePattern: /.*/,\n    reactiveUrl: !0,\n    reactiveDimensions: !0\n  }\n};\nclass U {\n  /**\n   * Creates a PCOM (default) data layer schema specific object, that contains the given event name.\n   *\n   * @param data - Contains the event name in a standardized {@link IFactoryData} like way.\n   *\n   * @returns The event name in the PCOM (default) data layer schema specific object.\n   *\n   * @example\n   * myEventNameFactory.create({ event: 'MY_EVENT_NAME' });\n   * // returns:\n   * // {\n   * //   context: {\n   * //     eventAction: 'MY_EVENT_NAME'\n   * //   }\n   * // }\n   */\n  create(t) {\n    return typeof t.event != \"string\" || t.event.length === 0 ? {} : {\n      context: {\n        eventAction: t.event\n      }\n    };\n  }\n}\nconst S = (r, t) => {\n  let e;\n  for (e in r)\n    if (!(!r || !r[e]) && t(r[e], e) === !1)\n      return !1;\n  return !0;\n}, _ = (r, t) => S(r, (e, s) => {\n  for (const i in r[s])\n    if (t(e[i], i, e, s) === !1)\n      return !1;\n  return !0;\n}), ne = (r) => {\n  if (m(r))\n    return !0;\n  let t = 0, e = 0;\n  return S(r, (s) => {\n    t++, m(s) && e++;\n  }), t === e;\n}, m = (r) => {\n  for (const t in r)\n    return !1;\n  return !0;\n}, P = (r, t = ((e) => (e = w.clean) == null ? void 0 : e.values)() || []) => (_(\n  r,\n  (s, i, n, l) => {\n    t.includes(s) && (delete n[i], m(n) && delete r[l]);\n  }\n), r), G = (r, t) => r && (_(\n  r,\n  (e, s, i, n) => {\n    t.includes(`${n.toString()}.${s.toString()}`) && (delete i[s], m(i) && delete r[n]);\n  }\n), r), k = (r) => (_(\n  r,\n  (t, e, s) => (typeof t != \"function\" || (s[e] = t()), !0)\n), r);\nclass H {\n  /**\n   * Creates a new instance of {@link FrameTicker}.\n   *\n   * @param callback The functionality that should be called\n   * @param ticksPerSecond How many times should the functionality been called in one second\n   */\n  constructor(t, e = 10) {\n    o(this, \"tickInterval\");\n    o(this, \"callback\");\n    o(this, \"_tickTime\", Date.now());\n    o(this, \"_tickActive\", !1);\n    this.callback = t, this.tickInterval = 1e3 / e;\n  }\n  /**\n   * Start the {@link FrameTicker}.\n   */\n  start() {\n    this._tickActive || (this._tickActive = !0, this.run());\n  }\n  /**\n   * Stop the {@link FrameTicker}.\n   */\n  stop() {\n    this._tickActive = !1;\n  }\n  /**\n   * Internal function executed on each _tick_.\n   *\n   * @private\n   */\n  run() {\n    if (!this._tickActive)\n      return;\n    requestAnimationFrame(this.run.bind(this));\n    const t = Date.now(), e = t - this._tickTime;\n    e < this.tickInterval || (this._tickTime = t - e % this.tickInterval, this.callback());\n  }\n}\nconst B = (r, t) => {\n  const e = t.split(\".\");\n  if (e.length !== 2)\n    return;\n  const s = r[e[0]];\n  if (s)\n    return s[e[1]];\n}, C = (r) => {\n  if (!r)\n    return [];\n  const t = [];\n  return _(\n    r,\n    (e, s, i, n) => {\n      t.push(`${n.toString()}.${s.toString()}`);\n    }\n  ), t;\n}, j = w.logging;\nvar x = /* @__PURE__ */ ((r) => (r[r.error = 0] = \"error\", r[r.warn = 1] = \"warn\", r[r.log = 2] = \"log\", r))(x || {});\nconst v = class v {\n  /**\n   * Creates an instance of the {@link Logger} class.\n   *\n   * @param prefix A prefix that is used in all logs\n   *   (`[PREFIX] MESSAGE`, i.e. `[GlobalDataLayer] This is a serious message`).\n   * @param options Options to be merged as settings with the {@link DEFAULT_SETTINGS.logging}.\n   */\n  constructor(t, e) {\n    /**\n     * The prefix that is used in all logs.\n     * @private\n     */\n    o(this, \"prefix\");\n    /**\n     * The merged settings. Also see the options of the {@link constructor} and the {@link DEFAULT_SETTINGS.logging}.\n     *\n     * @see {@link TLoggerSettings}\n     *\n     * @private\n     */\n    o(this, \"settings\");\n    this.prefix = t, this.settings = {\n      ...j,\n      ...e\n    };\n  }\n  /**\n   * Helper function to merge the options of a log method call with the current {@link settings}.\n   *\n   * @param options  Options to be merged with the available {@link settings}\n   *\n   * @returns The merged temporary settings.\n   *\n   * @private\n   */\n  _getMergedSettings(t) {\n    return t ? {\n      ...this.settings,\n      ...t\n    } : this.settings;\n  }\n  /**\n   * Check, if this log message is allowed.\n   *\n   * @see {@link TLoggerSettings.enabled} and {@link TLoggerSettings.level} and {@link isAvailable}\n   *\n   * @param type Type of the current log message.\n   * @param settings The current (temporary) settings.\n   *\n   * @returns `true`if the log message is allowed.\n   *\n   * @private\n   */\n  _isAllowed(t, e) {\n    if (!v.isAvailable || !e.enabled)\n      return !1;\n    const s = x[e.level];\n    switch (t) {\n      case \"error\":\n      case \"warn\":\n        return s >= x[t];\n      case \"info\":\n      case \"log\":\n      case \"debug\":\n      case \"dir\":\n        return s >= 2;\n      default:\n        return !1;\n    }\n  }\n  /**\n   * A helper method to execute the log messages of all different types.\n   *\n   * @param msg The message text.\n   * @param type The type of the message.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   *\n   * @private\n   */\n  _log(t, e = \"log\", s) {\n    const i = this._getMergedSettings(s);\n    if (this._isAllowed(e, i))\n      switch (e) {\n        case \"dir\":\n          console.log(`[${this.prefix}] ${e}:`), console[e](t);\n          break;\n        default:\n          console[e](`[${this.prefix}] ${t}`);\n      }\n  }\n  /**\n   * Write a normal log message.\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  log(t, e) {\n    this._log(t, \"log\", e);\n  }\n  /**\n   * Write a log message of type `dir`.\n   *\n   * This message will be split in two messages, the prefix with \" dir:\" and the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/console/dir dir} output as interactive list.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/dir console.dir()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  dir(t, e) {\n    this._log(t, \"dir\", e);\n  }\n  /**\n   * Write a log message of type `debug`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/debug console.debug()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  debug(t, e) {\n    this._log(t, \"debug\", e);\n  }\n  /**\n   * Write a log message of type `error`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/error console.error()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  error(t, e) {\n    this._log(t, \"error\", e);\n  }\n  /**\n   * Write a log message of type `info`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/info console.info()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  info(t, e) {\n    this._log(t, \"info\", e);\n  }\n  /**\n   * Write a log message of type `warn`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/warn console.warn()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  warn(t, e) {\n    this._log(t, \"warn\", e);\n  }\n};\n/**\n * Check if there is a console available that makes logging possible.\n */\no(v, \"isAvailable\", (() => typeof console < \"u\")());\nlet b = v;\nconst u = (...r) => {\n  const t = {};\n  return r.forEach((e) => {\n    if (m(e))\n      return;\n    const s = {\n      ...t,\n      ...e\n    };\n    let i;\n    for (i in s)\n      typeof s[i] == \"object\" && !Array.isArray(s[i]) ? t[i] = {\n        ...t[i],\n        ...e[i]\n      } : t[i] = s[i];\n  }), t;\n};\nclass q {\n  /**\n   * Creates a PCOM (default) data layer schema specific object, that contains the given web properties.\n   *\n   * @param data - Contains the web properties in a standardized {@link IFactoryData} like way.\n   *\n   * @returns The given web properties in the PCOM (default) data layer schema specific object.\n   *\n   * @example\n   * myWebPropertiesFactory.create({ userAgent: 'MY_USE_AGENT' });\n   * // returns:\n   * // {\n   * //   visitor: {\n   * //     userAgent: 'MY_USE_AGENT'\n   * //   }\n   * // }\n   */\n  create(t) {\n    return P(\n      {\n        context: {\n          timestamp: t.timestamp,\n          server: t.hostname\n        },\n        pageExperience: {\n          pageId: t.url\n        },\n        visitor: {\n          deviceBrowserBreakpoint: t.breakpoint,\n          deviceBrowserHeight: t.height,\n          deviceBrowserOrientation: t.orientation,\n          deviceBrowserWidth: t.width,\n          deviceType: t.deviceType,\n          useragent: t.userAgent\n        }\n      },\n      [void 0]\n    );\n  }\n}\nconst K = w.webProperties, V = () => window.location.href.replace(/[?#].*/, \"\"), Y = () => (/* @__PURE__ */ new Date()).toISOString(), Q = () => window.location.hostname, R = () => window.innerHeight.toString(), D = () => window.innerHeight > window.innerWidth ? \"p\" : \"l\", T = () => window.innerWidth.toString(), X = () => window.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? \"mobile\" : \"desktop\", z = () => window.navigator.userAgent, J = (r) => {\n  if (!r.breakpoints || r.breakpoints.length < 1)\n    return;\n  const { breakpoints: t } = r, e = () => {\n    const s = window.innerWidth;\n    let i = 0, n = 0;\n    for (; n < t.length && s >= t[n]; )\n      i = t[n], n++;\n    return i.toString();\n  };\n  return r.reactiveDimensions ? e : e();\n}, Z = (r, t) => {\n  const e = {\n    ...K,\n    ...r\n  }, i = {\n    breakpoint: J(e),\n    timestamp: Y(),\n    hostname: Q(),\n    url: e.reactiveUrl ? V : V(),\n    height: e.reactiveDimensions ? R : R(),\n    orientation: e.reactiveDimensions ? D : D(),\n    width: e.reactiveDimensions ? T : T(),\n    deviceType: X(),\n    userAgent: z()\n  };\n  return t ? t.create(i) : i;\n}, ee = (r, t) => {\n  switch (t) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n      return typeof r === t;\n    case \"any[]\":\n      return Array.isArray(r) && r.length > 0;\n    case \"Record<string, any>\":\n      return typeof r == \"object\" && !Array.isArray(r) && Object.keys(r).length > 0;\n    case \"any\":\n      return !0;\n    default:\n      if ((typeof r == \"boolean\" || typeof r == \"number\" || typeof r == \"string\") && t.indexOf(\"|\") > 0)\n        return t.split(\"|\").map((s) => {\n          const i = s.trim();\n          return /^'.*'$/.test(i) ? i.replace(/(^ ?'?|'? ?$)/g, \"\") : /^(true|false)$/.test(i) ? i === \"true\" : /^-?(\\d*\\.)?\\d+$/.test(i) ? Number.parseFloat(i) : i.replace(/(^ ?'?|'? ?$)/g, \"\");\n        }).includes(r);\n  }\n  return !0;\n}, te = (r, t, e) => {\n  const s = {\n    level: null,\n    issues: []\n  };\n  if (!e.enabled || !e.eventMatrix)\n    return s;\n  const { events: i, ...n } = e.eventMatrix, l = i.indexOf(r);\n  if (l === -1)\n    return s.level = \"error\", s.issues.push({\n      level: \"error\",\n      type: \"EVENT_NOT_FOUND\",\n      name: r,\n      message: `'${r}': Event does not exist.`\n    }), s;\n  const a = C(t), d = Object.keys(n), c = a.filter(\n    (g) => !d.includes(g)\n  );\n  c.length > 0 && (e.allowUnknown || G(t, c), c.forEach((g) => {\n    s.level = s.level ?? \"warn\", s.issues.push({\n      level: \"warn\",\n      type: \"PROPERTY_DOES_NOT_EXIST\",\n      name: g,\n      message: `'${g}': Property does not exist in the given Event Matrix.${e.allowUnknown ? \"\" : \" It was omitted from the DataLayer payload.\"}`\n    });\n  }));\n  let h;\n  for (h in n) {\n    const g = n[h], f = typeof g.e[l] < \"u\", p = g.r === 1, E = t ? B(t, h) : void 0, N = typeof E < \"u\";\n    if (f && // Does the event want this property?\n    p && // Is the property mandatory in general?\n    !N && (s.level = \"error\", s.issues.push({\n      level: \"error\",\n      type: \"REQUIRED_PROPERTY_MISSING\",\n      name: h,\n      message: `'${h}': The required property is missing.`\n    }), !e.verbose) || N && !ee(E, g.t) && (s.level = \"error\", s.issues.push({\n      level: \"error\",\n      type: \"WRONG_PROPERTY_TYPE\",\n      name: h,\n      message: `'${h}': Wrong type detected. Expected '${g.t}', got '${typeof E}'.`\n    }), !e.verbose))\n      return s;\n  }\n  return s;\n};\nclass L {\n  constructor(t = \"DataLayerExtension\", e) {\n    /**\n     * A\n     * @protected\n     */\n    o(this, \"_logger\");\n    o(this, \"_className\");\n    o(this, \"_dataLayerInstance\");\n    this._className = t, this._logger = new b(this.className, e);\n  }\n  get dataLayerInstance() {\n    return this._dataLayerInstance;\n  }\n  set dataLayerInstance(t) {\n    this._dataLayerInstance = t;\n  }\n  get className() {\n    return this._className;\n  }\n  set className(t) {\n    this._className = t;\n  }\n  get isRegistered() {\n    return typeof this._dataLayerInstance < \"u\";\n  }\n}\nconst A = {\n  eventName: \"UNKNOWN\",\n  thresholds: {\n    filled: 0.5,\n    visible: 0.3,\n    minValidityPeriod: 1\n  },\n  triggerUpdates: {\n    enabled: !1,\n    eventName: \"VIEWPORT_TRACKER_STATUS_CHANGE\"\n  },\n  tickerSettings: {\n    ticksPerSecond: 10\n  }\n};\nclass se extends Event {\n  constructor(e, s) {\n    super(e);\n    o(this, \"registeredElement\");\n    this.registeredElement = s;\n  }\n}\nclass $ extends L {\n  /**\n   * Creates a new instance of {@link ViewportTrackerExtension} with optional settings of type\n   * {@link TViewportTrackerSettings}.\n   *\n   * @param options The settings to initialize the instance. Will be merged with the defaults.\n   */\n  constructor(e) {\n    var s;\n    super(\"ViewportTrackerExtension\", e == null ? void 0 : e.logger);\n    o(this, \"settings\");\n    o(this, \"observer\", null);\n    o(this, \"frameTicker\");\n    o(this, \"registeredElements\", []);\n    o(this, \"visibleElements\", []);\n    this.settings = e ? u(A, e) : A, this.observer = this.createObserver(), this.frameTicker = new H(\n      this.checkVisibilityOfElements.bind(this),\n      (s = this.settings.tickerSettings) == null ? void 0 : s.ticksPerSecond\n    );\n  }\n  /**\n   * Will create and return the mandatory {@link IntersectionObserver}. The function will log an error if this is not\n   * possible.\n   *\n   * @returns The ready-to-use {@link IntersectionObserver} instance or null.\n   *\n   * @private\n   */\n  createObserver() {\n    return !window || !(\"IntersectionObserver\" in window) ? (this._logger.error(\"The ViewportTrackerExtension will need IntersectionObserver to work.\"), null) : new IntersectionObserver(this.observerHandler.bind(this), {\n      threshold: 0,\n      rootMargin: \"0px 0px\"\n    });\n  }\n  /**\n   * Register an {@link HTMLElement} to be observed.\n   *\n   * @param element The {@link HTMLElement} to register with optional _DataLayer_ properties.\n   */\n  registerElement(e) {\n    var s;\n    this.unregisterElement(e.el), this.registeredElements.push({\n      el: e.el,\n      properties: e.properties,\n      state: {\n        isFilled: !1,\n        isVisible: !1,\n        passedValidityPeriod: !1\n      }\n    }), (s = this.observer) == null || s.observe(e.el);\n  }\n  /**\n   * Register multiple {@link HTMLElement}s to be observed.\n   *\n   * @param elements The {@link HTMLElement}s to register with optional _DataLayer_ properties.\n   */\n  registerElements(e) {\n    for (const s of e)\n      this.registerElement(s);\n  }\n  /**\n   * Unregister an {@link HTMLElement} from observation.\n   *\n   * @param element The {@link HTMLElement} to unregister.\n   */\n  unregisterElement(e) {\n    var i;\n    (i = this.observer) == null || i.unobserve(e);\n    const s = this.getRegisteredElementIndex(e);\n    s < 0 || this.registeredElements.splice(s, 1);\n  }\n  /**\n   * Unregister multiple {@link HTMLElement}s from observation.\n   *\n   * @param elements The {@link HTMLElement}s to unregister.\n   */\n  unregisterElements(e) {\n    for (const s of e)\n      this.unregisterElement(s);\n  }\n  /**\n   * Helper function to retrieve the index of a registered {@link HTMLElement} from the `registeredElements` array.\n   *\n   * @param el The {@link HTMLElement} to find.\n   * @returns The index of the element if found, otherwise `-1`.\n   *\n   * @private\n   */\n  getRegisteredElementIndex(e) {\n    return this.registeredElements.findIndex((s) => s.el === e);\n  }\n  /**\n   * Helper function to retrieve a registered {@link HTMLElement} from the `registeredElements` array.\n   *\n   * @param el The {@link HTMLElement} to find.\n   *\n   * @returns The found element, otherwise `undefined`.\n   *\n   * @private\n   */\n  getRegisteredElement(e) {\n    const s = this.getRegisteredElementIndex(e);\n    if (!(s < 0))\n      return this.registeredElements[s];\n  }\n  /**\n   * The {@link IntersectionObserver} callback function to handle updates to the registered {@link TRegisteredElement}s\n   * {@link HTMLElement}s. Registers or unregisters items based on the given settings and changes their state.\n   *\n   * @param entries Intersection element entries.\n   *\n   * @private\n   */\n  observerHandler(e) {\n    for (const s of e) {\n      const i = s.target, n = this.getRegisteredElement(i);\n      if (n) {\n        if (s.isIntersecting) {\n          this.visibleElements.findIndex((l) => l === n.el) === -1 && this.visibleElements.push(n.el);\n          continue;\n        }\n        this.removeFromVisibleStore(n.el), (n.state.isFilled || n.state.isVisible) && requestAnimationFrame(() => {\n          this.processViewportIntersection(n, {\n            isVisible: !1,\n            isFilled: !1,\n            passedValidityPeriod: !1\n          });\n        });\n      }\n    }\n    this.visibleElements.length > 0 && this.frameTicker.start();\n  }\n  /**\n   * Callback for the {@link FrameTicker} to frequently check the state of all elements which are currently marked as\n   * _in the viewport_.\n   *\n   * @private\n   */\n  checkVisibilityOfElements() {\n    if (this.visibleElements.length === 0)\n      return;\n    const e = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0), s = window.scrollY;\n    for (let i = 0; i < this.visibleElements.length; i++) {\n      const n = this.visibleElements[i], l = this.getRegisteredElement(n);\n      if (!l || !this.settings.triggerUpdates.enabled && l.state.passedValidityPeriod)\n        continue;\n      const { isVisible: a, isFilled: d } = $.percentWithinViewport(n, s, e), c = {\n        isVisible: a >= this.settings.thresholds.visible,\n        isFilled: d >= this.settings.thresholds.filled,\n        passedValidityPeriod: l.state.passedValidityPeriod\n      };\n      this.processViewportIntersection(l, c);\n    }\n  }\n  /**\n   * Get to know how much of the {@link HTMLElement} is visible the viewport.\n   *\n   * @param el The element in the viewport.\n   * @param scrollY The scrollY of the current window.\n   * @param viewportHeight The height of the viewport.\n   *\n   * @returns The % visible of the HTMLElement in the viewport.\n   *\n   * @private\n   */\n  static percentWithinViewport(e, s, i) {\n    const n = { top: s, bottom: s + i }, l = e.getBoundingClientRect(), a = {\n      top: l.y + s,\n      bottom: l.y + l.height + s\n    }, d = l.height;\n    let c = d;\n    a.top < n.top && (c = d - (s - a.top)), a.bottom > n.bottom && (c = c - (a.bottom - n.bottom));\n    let h = c / d, g = c / i;\n    return (n.top > a.bottom || n.bottom < a.top) && (h = 0, g = 0), n.top < a.top && n.bottom > a.bottom && (h = 1), a.top < n.top && a.bottom > n.bottom && (g = 1), {\n      isVisible: h,\n      isFilled: g\n    };\n  }\n  /**\n   * Processes a {@link TRegisteredElement} items intersection. If the element matches the\n   * {@link TViewportTrackerSettings.thresholds `thresholds`}, the {@link IGlobalDataLayer.push} method is called.\n   *\n   * Also dispatches the update event of the {@link TViewportTrackerSettings.triggerUpdates `triggerUpdates`} feature.\n   *\n   * @param registeredElement The registered element to process.\n   * @param isVisible Indicates, if the element is {@link TViewportTrackerSettings.thresholds.visible visible}.\n   * @param isFilled Indicates, if the element is {@link TViewportTrackerSettings.thresholds.filled filled}.\n   *\n   * @private\n   */\n  processViewportIntersection(e, { isVisible: s, isFilled: i }) {\n    const n = e.state || {\n      isVisible: !1,\n      isFilled: !1\n    }, l = Date.now(), a = {\n      isVisible: s,\n      isFilled: i,\n      timeVisible: n.isVisible !== s ? l : n.timeVisible,\n      timeFilled: n.isFilled !== i ? l : n.timeFilled,\n      passedValidityPeriod: n.passedValidityPeriod\n    }, d = (c) => (l - c) / 1e3;\n    if (n.isVisible !== a.isVisible || n.isFilled !== a.isFilled)\n      a.passedValidityPeriod = !1, e.state = a, this.dispatchEvent(e);\n    else if (!a.passedValidityPeriod && (a.isVisible || a.isFilled)) {\n      const c = d(a.timeVisible), h = d(a.timeFilled);\n      (s && c >= this.settings.thresholds.minValidityPeriod || i && h >= this.settings.thresholds.minValidityPeriod) && (a.passedValidityPeriod = !0, e.state = a, this.pushEvent(e), this.dispatchEvent(e));\n    }\n  }\n  /**\n   * Helper function to remove an {@link HTMLElement} from the state of being in the viewport. This will stop the\n   * {@link FrameTicker} checks from being processed for this {@link TRegisteredElement}.\n   *\n   * @param element The HTMLElement to remove.\n   *\n   * @private\n   */\n  removeFromVisibleStore(e) {\n    let s = -1;\n    for (; (s = this.visibleElements.findIndex((i) => i === e)) >= 0; )\n      this.visibleElements.splice(s, 1);\n    this.visibleElements.length === 0 && this.frameTicker.stop();\n  }\n  /**\n   * Will call the {@link IGlobalDataLayer.push} with the given {@link TViewportTrackerSettings.eventName `eventName`},\n   * whenever a {@link TRegisteredElement} matches the given {@link TViewportTrackerSettings.thresholds `thresholds`}.\n   *\n   * @param item The registered {@link HTMLElement} with its {@link TRegisteredElement.properties `properties` payload}.\n   *\n   * @private\n   */\n  pushEvent(e) {\n    if (!this.dataLayerInstance) {\n      this._logger.warn(\"This extension is not registered to a GlobalDataLayer instance.\");\n      return;\n    }\n    const { properties: s } = e, i = typeof s == \"function\" ? s() : s || {};\n    this.dataLayerInstance.push(this.settings.eventName, i);\n  }\n  /**\n   * Dispatches a {@link ViewportTrackerStatusChangeEvent}.\n   *\n   * @param registeredElement The registered {@link HTMLElement} to use as target.\n   *\n   * @private\n   */\n  dispatchEvent(e) {\n    this.settings.triggerUpdates && this.settings.triggerUpdates.enabled && e.el.dispatchEvent(\n      new se(this.settings.triggerUpdates.eventName, e)\n    );\n  }\n}\nconst F = (r) => r.length > 0, O = \"PageNameExtender_unknown_pageName\", I = {\n  initialPageName: O,\n  separator: \"/\"\n};\nclass ae extends L {\n  /**\n   * Constructor of PageNameExtender\n   *\n   * @param options Settings object for this extension.\n   */\n  constructor(e) {\n    super(\"PageNameExtenderExtension\", e == null ? void 0 : e.logger);\n    o(this, \"settings\");\n    /**\n     * Internal page name store. To handle the different levels.\n     */\n    o(this, \"pageName\", []);\n    /**\n     * Internal basic page name length. This is defined in the {@link set} method and used to make sure there is\n     * an option to keep ({@link reduce}) or replace ({@link set}) the basic page name.\n     */\n    o(this, \"basePageNameLength\", 0);\n    this.settings = e ? u(I, e) : I, this.set(this.settings.initialPageName);\n  }\n  /**\n   * Update the complete stored {@link pageName} with a string or an array of strings.\n   *\n   * @param pageName If a simple string is given, it will be separated by the given {@link settings} separator.\n   * @param keepExtensions Keep the parts which were added by {@link extend} method.\n   *\n   * @returns The new {@link pageName} joined with the {@link settings} separator.\n   */\n  set(e, s = !1) {\n    const i = this.basePageNameLength;\n    return typeof e == \"string\" && (e = e.split(this.settings.separator).filter(F)), e.length === 0 ? (this._logger.warn(\"`pageName` must not be empty\"), \"\") : (e[0] === O && this._logger.info(\n      \"No `initialPageName` was provided. Make sure the `pageName` is provided later via the `set` method.\"\n    ), this.basePageNameLength = e.length, s && e.push(...this.pageName.slice(i - 1)), this.pageName = e, this.get());\n  }\n  /**\n   * Get the current {@link pageName}.\n   *\n   * @param basePageNameOnly If you want to ignore the parts which were added by {@link extend}.\n   *\n   * @returns The current {@link pageName} joined with the {@link settings} separator.\n   */\n  get(e = !1) {\n    return (e ? this.pageName.slice(0, this.basePageNameLength) : this.pageName).join(\n      this.settings.separator\n    );\n  }\n  /**\n   * Add (multiple) sub levels to the {@link pageName}.\n   *\n   * @param levels If a simple string is given it will be split by the given {@link settings} separator.\n   *\n   * @returns The new {@link pageName} joined with the given {@link settings} separator.\n   */\n  extend(e) {\n    return Array.isArray(e) && (e = e.join(this.settings.separator)), e = e.split(this.settings.separator).filter(F), e.length === 0 ? this._logger.warn(\"`levels` must not be empty\") : this.pageName.push(...e), this.get();\n  }\n  /**\n   * Remove (multiple) sub levels from the {@link pageName}.\n   *\n   * @param [levelCount='last'] Number of levels that should be removed. You can also use a\n   *   {@link TPageNameExtenderReduceType} to define the \"last\" or \"all\" (except the root).\n   * @param keepBasePageName If the basic page name given by {@link set} should also be reducible. This\n   *   cannot be restored.\n   *\n   * @returns The new {@link pageName} joined with the given {@link settings} separator.\n   */\n  reduce(e = \"last\", s = !0) {\n    let i;\n    return e === \"all\" ? i = this.pageName.length - (s ? this.basePageNameLength : 1) : e === \"last\" ? i = this.pageName.length > (s ? this.basePageNameLength : 1) ? 1 : 0 : (i = e, (this.pageName.length <= e || s && this.pageName.length - this.basePageNameLength < e) && (this._logger.info(\n      `${this.pageName.length - (s ? this.basePageNameLength : 1)} - ${e} must not delete first level or more`\n    ), i = this.pageName.length - (s ? this.basePageNameLength : 1))), this.pageName.splice(i * -1, i), this.basePageNameLength > this.pageName.length && (this.basePageNameLength = this.pageName.length), this.get();\n  }\n  /**\n   * Get a temporary pre-fixed version of the current {@link pageName}.\n   *\n   * @param [prefix=''] The value that should be prepended temporarily.\n   *\n   * @returns The current {@link pageName} joined with the given {@link settings} separator pre-fixed with the given\n   *   string value.\n   */\n  getWithPrefix(e = \"\") {\n    return e + this.get();\n  }\n  /**\n   * Get a temporary post-fixed version of the current {@link pageName}.\n   *\n   * @param [postfix=''] The value that should be appended temporarily.\n   *\n   * @returns The current {@link pageName} joined with the given {@link Settings} separator post-fixed with the given\n   *   string value.\n   */\n  getWithPostfix(e = \"\") {\n    return this.get() + e;\n  }\n}\nclass ie {\n  /**\n   * Create an instance of the GlobalDataLayer library. This constructor has to be overwritten to initialize the needed\n   * factories ({@link _eventNamePayloadFactory} and {@link _webPayloadFactory}).\n   *\n   * @param options All options are merged with the {@link DEFAULT_SETTINGS} of type {@link TSettings}.\n   * @param [dataStore] The array where all the pushes are added to. The default tries to get or generate the\n   *   `window.pagData` array. If this is not possible, it creates an empty array, that is exposed via\n   *   {@link DataLayerStore}.\n   * @param [className] The class name of the library is here, because code can be uglified and/or minified later.\n   *\n   * @protected\n   */\n  constructor(t, e, s = \"GlobalDataLayer\") {\n    /**\n     * The class name of the library. This is needed, because code can be uglified and/or minified later.\n     * @protected\n     */\n    o(this, \"_className\");\n    /**\n     * The merged settings. Also see the options of the {@link constructor} and the {@link DEFAULT_SETTINGS}.\n     * @protected\n     */\n    o(this, \"_settings\");\n    /**\n     * An internal store where all default properties are added to.\n     * @protected\n     */\n    o(this, \"_defaultProperties\");\n    /**\n     * An internal logger, which has to be used for all console logs.\n     * @protected\n     */\n    o(this, \"_logger\");\n    /**\n     * A flag that indicates if the _Web Properties_ feature was already handled.\n     *\n     * @see {@link getWebProperties}\n     *\n     * @protected\n     */\n    o(this, \"_webPropertiesHandled\", !1);\n    /**\n     * the _DataLayer_ store array, that is used to push all the data.\n     *\n     * This can be transferred to the library with the second parameter `dataStore` of the {@link constructor}.\n     *\n     * @protected\n     */\n    o(this, \"_dataLayerStore\");\n    /**\n     * An internal store where all registered extensions are added to.\n     * @protected\n     */\n    o(this, \"_extensions\", /* @__PURE__ */ new Map());\n    const i = u(\n      w,\n      t || {}\n    );\n    this._className = s, this._logger = new b(this._className, i.logging), this._settings = i, e ? this._dataLayerStore = e : typeof window < \"u\" ? (this._dataLayerStore = window.pagData = window.pagData || [], this._logger.info(\"`dataLayerStore` was set to default `window.pagData`\")) : (this._dataLayerStore = [], this._logger.info(\"`dataLayerStore` was set to default `[]`\")), this._defaultProperties = [];\n  }\n  /**\n   * An internal function to set everything up after initialization is done. This has to be called at the end of the\n   * overwritten constructors.\n   * @protected\n   */\n  setup() {\n    this._handleDefaultWebProperties();\n  }\n  /**\n   * The current settings object.\n   * @readonly\n   */\n  get Settings() {\n    return this._settings;\n  }\n  /**\n   * Get the _DataLayer_ store, that is used to push all the data.\n   * @readonly\n   */\n  get DataLayerStore() {\n    return this._dataLayerStore;\n  }\n  /**\n   * Get a registered {@link DataLayerExtension} class instance based of the input type.\n   *\n   * @param TConstructor The class to search for.\n   *\n   * @returns The registered instance of the extension class, `undefined` if not found.\n   */\n  getRegisteredExtension(t) {\n    const e = new t();\n    return this.getRegisteredExtensionByClassName(e.className);\n  }\n  /**\n   * Get a registered {@link DataLayerExtension} class instance based of a classname.\n   *\n   * @param className The name of class instance to compare.\n   *\n   * @returns The registered instance of the extension class, undefined if not found.\n   */\n  getRegisteredExtensionByClassName(t) {\n    return this._extensions.has(t) ? this._extensions.get(t) : void 0;\n  }\n  /**\n   * Get all registered {@link DataLayerExtension}.\n   *\n   * @returns All registered DataLayerExtensions as array.\n   */\n  getRegisteredExtensions() {\n    const t = [];\n    for (const e of this._extensions.values())\n      t.push(e);\n    return t;\n  }\n  /**\n   * Register a new {@link DataLayerExtension} class for this instance.\n   *\n   * @param extension The extension class instance to register.\n   * @param override If there is an existing instance already registered, we override it, otherwise we do nothing.\n   */\n  registerExtension(t, e = !1) {\n    if (!e && this._extensions.has(t.className)) {\n      this._logger.warn(`Tried to register extension class <${t.className}> which already exists.`);\n      return;\n    }\n    t.dataLayerInstance = this, this._extensions.set(t.className, t), e ? this._logger.info(`Overriden registration for extension class <${t.className}>.`) : this._logger.info(`Registered extension class <${t.className}>.`);\n  }\n  /**\n   * Remove a registered {@link DataLayerExtension} instance.\n   *\n   * @param TConstructor The class to search for.\n   */\n  removeExtension(t) {\n    const e = new t();\n    if (this._extensions.has(e.className)) {\n      this._extensions.delete(e.className);\n      return;\n    }\n    this._logger.warn(`Tried to remove not existing extension class <${e.className}>.`);\n  }\n  /**\n   * Remove a registered {@link DataLayerExtension} instance by class name.\n   *\n   * @param className the name of the class\n   */\n  removeExtensionByClassName(t) {\n    if (this._extensions.has(t)) {\n      this._extensions.delete(t);\n      return;\n    }\n    this._logger.warn(`Tried to remove not existing extension class <${t}>.`);\n  }\n  /**\n   * Push a GlobalDataLayer Event with payload to the given data layer store. The method can fail and return `false`\n   *   because ...\n   *\n   *   - the given `eventName` was invalid\n   *   - the validation failed\n   *\n   * A settings object can be added as the third parameter to every call. This will then temporary override the provided\n   * settings for the time of the push action.\n   *\n   * @param eventName The name of the event that should be pushed.\n   * @param [payload] The _DataLayer_ properties to be merged and added to the data layer.\n   * @param [options] Temporary override the settings.\n   *\n   * @returns A boolean to indicate, if the push was successful.\n   */\n  push(t, e = [{}], s) {\n    var d, c;\n    if (t.length === 0)\n      return !1;\n    const i = s && !m(s) ? u(this._settings, s) : this._settings;\n    Array.isArray(e) || (e = [e]), e.forEach(k);\n    const n = this._eventNamePayloadFactory.create({ event: t }), l = k(this.getDefaultProperties(t));\n    i.clean.enabled && i.clean.executionPlace === y.BEFORE_MERGE && [l || {}, ...e].forEach(\n      (h) => P(h, i.clean.values)\n    );\n    const a = u(\n      n,\n      l || {},\n      ...e\n    );\n    if (i.clean.enabled && i.clean.executionPlace === y.AFTER_MERGE && P(a, i.clean.values), (d = i == null ? void 0 : i.validation) != null && d.enabled && ((c = i == null ? void 0 : i.validation) != null && c.eventMatrix)) {\n      const h = te(t, a, i.validation), g = h.issues.sort((f, p) => f.level !== p.level && p.level === \"warn\" ? -1 : 0).map((f) => `- [${f.level}]: ${f.message}`).join(`\n`);\n      switch (h.level) {\n        case \"error\":\n          return this._logger.error(\n            `Validation failed for event '${t}' with errors/warnings: \n${g}`,\n            i.logging\n          ), !1;\n        case \"warn\":\n          this._logger.warn(\n            `Validation success for event '${t}' with warnings: \n${g}`,\n            i.logging\n          );\n          break;\n        default:\n          this._logger.info(`Validation success for event '${t}'.`, i.logging);\n          break;\n      }\n    }\n    return this._dataLayerStore.push(a), !0;\n  }\n  /**\n   * Return the default properties for the given identifier.\n   *\n   * @param identifier The identifier to get the default properties for.\n   *\n   * @returns The found default properties for the identifier, otherwise `undefined`.\n   */\n  getDefaultProperties(t) {\n    const e = {\n      byName: [],\n      byArray: [],\n      byRegex: []\n    };\n    this._defaultProperties.forEach((i) => {\n      if (i.identifier === t)\n        return e.byName.push(i.data);\n      if (Array.isArray(i.identifier) && i.identifier.includes(t))\n        return e.byArray.push(i.data);\n      if (i.identifier instanceof RegExp && i.identifier.test(t))\n        return e.byRegex.push(i.data);\n    });\n    const s = [...e.byRegex, ...e.byArray, ...e.byName];\n    if (s.length)\n      return u(...s);\n  }\n  /**\n   * Set default properties, which will later be merged with the payload of a {@link push}, when the provided identifier\n   * matches the `eventName`.\n   *\n   * @param identifier The identifier to use the default properties for.\n   * @param data The default properties which will be used with the provided identifier to merge those properties with the payload.\n   */\n  setDefaultProperties(t, e) {\n    const s = this._defaultProperties.find((i) => i.identifier === t);\n    if (s) {\n      s.data = u(s.data, e);\n      return;\n    }\n    this._defaultProperties.push({\n      identifier: t,\n      data: e\n    });\n  }\n  /**\n   * Checks if the web properties feature ({@link getWebProperties}) is already handled or does the setup with the\n   * current settings.\n   *\n   * @private\n   */\n  _handleDefaultWebProperties() {\n    if (this._webPropertiesHandled || !this._settings.webProperties.enabled)\n      return;\n    const t = Z(\n      this._settings.webProperties,\n      this._webPayloadFactory\n    );\n    this.setDefaultProperties(this._settings.webProperties.eventNamePattern, t), this._webPropertiesHandled = !0;\n  }\n}\nclass oe extends ie {\n  /**\n   * Create an instance of the GlobalDataLayer library.\n   *\n   * @param options All options are merged with the {@link DEFAULT_SETTINGS} of type {@link TSettings}.\n   * @param [dataStore] The array where all the pushes are added to. The default tries to get or generate the\n   *   `window.pagData` array. If this is not possible, it creates an empty array, that is exposed via\n   *   {@link DataLayerStore}.\n   * @param [className] The class name of the library is here, because code can be uglified and/or minified later.\n   *\n   * @protected\n   */\n  constructor(e, s, i = \"GlobalDataLayer\") {\n    super(e, s, i);\n    o(this, \"_eventNamePayloadFactory\");\n    o(this, \"_webPayloadFactory\");\n    this._eventNamePayloadFactory = new U(), this._webPayloadFactory = new q(), this.setup();\n  }\n  setup() {\n    super.setup();\n  }\n}\nexport {\n  y as CleanExecutionPlace,\n  w as DEFAULT_SETTINGS,\n  L as DataLayerExtension,\n  U as EventNameFactory,\n  H as FrameTicker,\n  oe as GlobalDataLayer,\n  ie as GlobalDataLayerBaseClass,\n  b as Logger,\n  ae as PageNameExtenderExtension,\n  $ as ViewportTrackerExtension,\n  se as ViewportTrackerStatusChangeEvent,\n  q as WebPropertiesFactory,\n  P as clean,\n  G as cleanByDataLayerPaths,\n  _ as each,\n  S as eachFirstLevel,\n  k as executeEachFunction,\n  B as get,\n  C as getDataLayerPaths,\n  Z as getWebProperties,\n  m as isEmpty,\n  ne as isEmptyDataLayer,\n  u as merge,\n  te as validate\n};\n","import { GlobalDataLayer } from '@porsche/globaldatalayer';\nimport { TContextEnvironment, TDataLayer } from '@porsche/globaldatalayer-events/projects/pcom/all/types';\nimport { Environment, Environments } from '../../entities/environment';\nimport { splitLocale } from '../../entities/locale';\nimport { DATA_LAYER_APPLICATION_NAME, DATA_LAYER_APP_ID, EventAction } from '../../utility/constants';\nimport { isString } from '../../utility/helper';\n\nfunction getEnvironmentAbbreviation(env: Environment): TContextEnvironment {\n  switch (env) {\n    case Environments.PRODUCTION:\n      return 'P';\n    case Environments.PREVIEW:\n      return 'PP';\n    default:\n      return 'K';\n  }\n}\n\nclass GlobalDataLayerService {\n  homeNavEventId = /^PAGHomeNav_/;\n  gdl!: GlobalDataLayer<TDataLayer>;\n\n  constructor() {\n    this.initialise();\n  }\n\n  initialise() {\n    this.gdl = new GlobalDataLayer();\n  }\n\n  pushDataLayerEvent(eventAction: EventAction, eventData?: TDataLayer): void {\n    if (eventData) {\n      this.gdl.push(eventAction, eventData);\n    } else {\n      this.gdl.push(eventAction);\n    }\n  }\n\n  setEnvironment(env: Environment) {\n    this.gdl.setDefaultProperties(this.homeNavEventId, {\n      context: { environment: getEnvironmentAbbreviation(env) }\n    });\n  }\n\n  setPageName(pageName?: string) {\n    this.gdl.setDefaultProperties(this.homeNavEventId, {\n      pageExperience: {\n        pageName: pageName\n      }\n    });\n  }\n\n  setUser(userId: string, loginStatus: boolean) {\n    this.gdl.setDefaultProperties(this.homeNavEventId, {\n      ids: { userId },\n      visitor: { loginStatus }\n    });\n  }\n\n  setLocale(locale: string) {\n    try {\n      const { country, language } = splitLocale(locale);\n\n      this.gdl.setDefaultProperties(this.homeNavEventId, {\n        context: { country: country, language: language }\n      });\n    } catch (err) {\n      // throw the error away\n    }\n  }\n\n  setDefaultProperties(locale: string, pageName?: string): void {\n    let defaultGDLProperties: TDataLayer = {\n      context: { applicationId: DATA_LAYER_APP_ID },\n      visitor: { loginStatus: false }\n    };\n\n    try {\n      const { country, language } = splitLocale(locale);\n\n      defaultGDLProperties = {\n        ...defaultGDLProperties,\n        context: { ...defaultGDLProperties.context, country, language, applicationName: DATA_LAYER_APPLICATION_NAME }\n      };\n    } catch (err) {\n      // throw the error away\n    }\n\n    if (isString(pageName)) {\n      defaultGDLProperties = { ...defaultGDLProperties, pageExperience: { pageName: pageName } };\n    }\n\n    this.gdl.setDefaultProperties(this.homeNavEventId, defaultGDLProperties);\n  }\n}\n\nexport default new GlobalDataLayerService();\n","import { FOCUSABLE_ELEMENTS_SELECTOR } from '../../utility/constants';\nimport { getHTMLElement } from '../../utility/helper';\n\nexport function getAllFocusableElements(element: Element | null): HTMLElement[] {\n  const htmlElements: HTMLElement[] = [];\n\n  element?.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR).forEach((element) => {\n    const htmlElement = getHTMLElement(element);\n\n    if (htmlElement !== null) {\n      htmlElements.push(htmlElement);\n    }\n  });\n\n  return htmlElements;\n}\n","import { h, JSX } from '@stencil/core';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { isString } from '../../utility/helper';\n\nexport const MainDrawerContent = ({\n  activeRoutingKey,\n  locale,\n  breakpoint,\n  backButtonText,\n  onClickBack,\n  receivedContent\n}: {\n  activeRoutingKey: string;\n  locale: string;\n  breakpoint: number;\n  backButtonText: string;\n  onClickBack: () => void;\n  receivedContent: boolean;\n}): JSX.Element => (\n  <div class=\"drawer-content\">\n    <div class=\"main-drawer-header\">\n      {isString(backButtonText) ? (\n        <phn-back-button\n          class=\"back-button\"\n          onClick={onClickBack}\n          text={backButtonText}\n          analyticsId={navContentStore.state.menu.id}\n          activeRoutingKey={activeRoutingKey}\n        />\n      ) : null}\n    </div>\n\n    <phn-router\n      activeRoutingKey={activeRoutingKey}\n      breakpoint={breakpoint}\n      locale={locale}\n      receivedContent={receivedContent}\n    />\n  </div>\n);\n","import { h, JSX } from '@stencil/core';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { isString } from '../../utility/helper';\n\nexport const SideDrawerContent = ({\n  activeRoutingKey,\n  locale,\n  backButtonText,\n  onClickBack\n}: {\n  activeRoutingKey: string;\n  locale: string;\n  backButtonText: string;\n  onClickBack: () => void;\n}): JSX.Element => {\n  return (\n    <div class=\"drawer-content\">\n      <span class=\"first-focus\" tabIndex={-1} aria-hidden=\"true\" />\n\n      <div class=\"side-drawer-header\">\n        {isString(backButtonText) ? (\n          <phn-back-button\n            class=\"back-button\"\n            onClick={onClickBack}\n            text={backButtonText}\n            analyticsId={navContentStore.state.menu.id}\n            activeRoutingKey={activeRoutingKey}\n          />\n        ) : null}\n      </div>\n\n      <phn-side-drawer activeRoutingKey={activeRoutingKey} locale={locale} />\n    </div>\n  );\n};\n","import { Component, Element, Event, EventEmitter, Fragment, h, Host, Listen, Prop, State, Watch } from '@stencil/core';\nimport { findTopLevelRoutingKey, RoutingKeyPointers, RoutingKeys } from '../../entities/routing-key';\nimport analyticsManager from '../../services/analytics/analytics-manager';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport animationManager from '../../services/animations/animation-manager';\nimport { getBackButtonText } from '../../services/menu-items-service';\nimport { navContentStore } from '../../state/nav-content-store';\nimport {\n  ClickElementTypes,\n  DisplayElementTypes,\n  ElementTypes,\n  EventActions,\n  FOCUSABLE_ELEMENTS_SELECTOR\n} from '../../utility/constants';\nimport { focusOnElement, getHTMLElement, isString } from '../../utility/helper';\nimport {\n  registerBackToPreviousMenuSequence,\n  registerCloseDoubleDrawerSequence,\n  registerForwardToNextMenuSequence,\n  registerOpenDoubleDrawerSequence,\n  registerTransitionSequence,\n  RouteChangeCallbacks\n} from './double-drawer-animation-sequences';\nimport { getAllFocusableElements } from './helper';\nimport { MainDrawerContent } from './main-drawer-content';\nimport { SideDrawerContent } from './side-drawer-content';\nimport { DrawerStatusTypes, DrawerStatusValues } from '../../utility/constants/app';\n\n@Component({\n  tag: 'phn-double-drawer',\n  styleUrl: 'double-drawer.scss',\n  scoped: true\n})\nexport class DoubleDrawer {\n  @Prop() breakpoint!: number;\n  @Prop() locale!: string;\n  @Prop() initialUsingKeyboard = false;\n  @Prop() routingKeyHistory: string[] = [];\n  @Prop() routingKeyPointer: number = RoutingKeyPointers.LEVEL_ZERO;\n  @Prop() receivedContent!: boolean;\n\n  @Event() clickDrawerHeaderClose!: EventEmitter<void>;\n  @Event() clickDrawerHeaderBack!: EventEmitter<void>;\n  @Event() drawerClosed!: EventEmitter<void>;\n  @Event() drawerChanged!: EventEmitter<boolean>;\n  @Event() backdropClosed!: EventEmitter<void>;\n  @Event({ composed: true, bubbles: true }) phnDrawerStatus!: EventEmitter<{\n    status: DrawerStatusTypes;\n  }>;\n\n  @Element() el!: HTMLPhnDoubleDrawerElement;\n\n  @State() usingKeyboard = false;\n  @State() animatingRoutingKeyPointer = RoutingKeyPointers.LEVEL_ZERO;\n  @State() isAnimating = true;\n  @State() animatingRoutingKey = '';\n\n  @Watch('routingKeyPointer')\n  watchRoutingKeyPointer(newPointer: number, oldPointer: number): void {\n    if (oldPointer < newPointer) {\n      const topLevelRoutingKey = findTopLevelRoutingKey(this.routingKeyHistory[this.routingKeyPointer]);\n      if (topLevelRoutingKey === RoutingKeys.DEALER_SEARCH) {\n        animationManager.play('transitionSameLevelDoubleDrawer');\n      } else {\n        animationManager.play('transitionNextLevelDoubleDrawer');\n      }\n    }\n  }\n\n  @Watch('routingKeyHistory')\n  watchRoutingKeyHistory(newHistory: string[], oldHistory: string[]): void {\n    if (newHistory.length < oldHistory.length || this.animateIfSameLength(newHistory, oldHistory)) {\n      animationManager.play('transitionSameLevelDoubleDrawer');\n    }\n  }\n\n  @Listen('resize', { target: 'window' })\n  onResizeWindow(): void {\n    if (this.animatingRoutingKeyPointer !== this.routingKeyPointer) {\n      this.animatingRoutingKey = this.routingKeyHistory[this.routingKeyPointer];\n      this.animatingRoutingKeyPointer = this.routingKeyPointer;\n    }\n  }\n\n  @Listen('keydown', { passive: false })\n  handleKeyDown(e: KeyboardEvent): void {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    let activeRoutingKey = this.routingKeyHistory[this.routingKeyPointer];\n    if (activeRoutingKey.startsWith(RoutingKeys.DEALER_SEARCH)) {\n      activeRoutingKey = activeRoutingKey.split('/')[0];\n    }\n\n    const eventSourceElement = getHTMLElement(e.target);\n    if (eventSourceElement === null) {\n      return;\n    }\n\n    const focusableSideDrawerElements = getAllFocusableElements(this.el.querySelector('#side-drawer'));\n    let focusableMainDrawerElements = getAllFocusableElements(this.el.querySelector('#main-drawer'));\n\n    if (focusableSideDrawerElements.length === 0 || focusableMainDrawerElements.length === 0) {\n      return;\n    }\n\n    const highlightedSideDrawerElementIndex = focusableSideDrawerElements.findIndex(\n      (el) => el.getAttribute('data-id') === activeRoutingKey\n    );\n    const highlightedSideDrawerElement = focusableSideDrawerElements[highlightedSideDrawerElementIndex];\n\n    if (activeRoutingKey === RoutingKeys.DEALER_SEARCH) {\n      focusableMainDrawerElements = focusableMainDrawerElements.filter(\n        (element) => element.nodeName !== 'BUTTON' && element.nodeName !== 'A'\n      );\n    }\n\n    const lastSideDrawerElement = focusableSideDrawerElements[focusableSideDrawerElements.length - 1];\n    const lastMainDrawerElement = focusableMainDrawerElements[focusableMainDrawerElements.length - 1];\n\n    const closeButton = this.el.querySelector('.close-button');\n\n    if (!e.shiftKey) {\n      if (eventSourceElement === highlightedSideDrawerElement) {\n        e.preventDefault();\n        focusOnElement(focusableMainDrawerElements[0]);\n        return;\n      }\n\n      if (eventSourceElement === lastSideDrawerElement) {\n        e.preventDefault();\n        if (closeButton !== null) {\n          focusOnElement(closeButton);\n        }\n      }\n\n      if (eventSourceElement === lastMainDrawerElement) {\n        e.preventDefault();\n\n        const nextSideDrawerElementIndex =\n          highlightedSideDrawerElementIndex + 1 >= focusableSideDrawerElements.length\n            ? 0\n            : highlightedSideDrawerElementIndex + 1;\n\n        const nextSideDrawerElement = getHTMLElement(focusableSideDrawerElements[nextSideDrawerElementIndex]);\n\n        focusOnElement(nextSideDrawerElement);\n      }\n\n      if (eventSourceElement === closeButton) {\n        e.preventDefault();\n        focusOnElement(focusableSideDrawerElements[0]);\n      }\n    } else if (e.shiftKey) {\n      if (eventSourceElement === focusableMainDrawerElements[0]) {\n        e.preventDefault();\n        if (highlightedSideDrawerElement !== null) {\n          focusOnElement(highlightedSideDrawerElement);\n        }\n      }\n\n      if (eventSourceElement === closeButton) {\n        e.preventDefault();\n        focusOnElement(lastSideDrawerElement);\n      }\n    }\n  }\n\n  @Listen('mobileMenuItemClick')\n  handleMobileMenuItemClick(event: CustomEvent<string[]>): void {\n    if (animationManager.isPlaying('transitionNextLevelDoubleDrawer')) {\n      event.stopPropagation();\n    }\n  }\n\n  @Listen('sideDrawerItemClick')\n  handleSideDrawerItemClick(event: CustomEvent<string[]>): void {\n    if (animationManager.isPlaying('transitionSameLevelDoubleDrawer')) {\n      event.stopPropagation();\n    }\n  }\n\n  private focusOnInitialElement(): void {\n    const isNavigatingBackwards = this.routingKeyPointer < this.routingKeyHistory.length - 1;\n\n    let focusedRoutingKey = isNavigatingBackwards\n      ? this.routingKeyHistory[this.routingKeyPointer + 1]\n      : this.routingKeyHistory[this.routingKeyPointer];\n    if (focusedRoutingKey.startsWith(RoutingKeys.DEALER_SEARCH)) {\n      focusedRoutingKey = focusedRoutingKey.split('/')[0];\n    }\n\n    const autoFocusElement = getHTMLElement(this.el.querySelector('.autofocus'));\n    if (autoFocusElement !== null) {\n      focusOnElement(autoFocusElement);\n      return;\n    }\n\n    if (this.usingKeyboard) {\n      let focusableElement: HTMLElement | null = null;\n\n      if (isString(focusedRoutingKey)) {\n        focusableElement = getHTMLElement(this.el.querySelector(`[data-id=\"${focusedRoutingKey}\"]`));\n      }\n\n      if (focusableElement === null) {\n        focusableElement = getHTMLElement(this.el.querySelector(`${FOCUSABLE_ELEMENTS_SELECTOR}`));\n      }\n\n      if (focusableElement !== null) {\n        focusOnElement(focusableElement);\n      }\n\n      return;\n    }\n\n    const firstFocus = getHTMLElement(this.el.querySelector('.first-focus'));\n    if (firstFocus !== null) {\n      focusOnElement(firstFocus);\n    }\n  }\n\n  private async goBackToPreviousMenu(): Promise<void> {\n    if (this.routingKeyPointer === this.animatingRoutingKeyPointer) {\n      this.clickDrawerHeaderBack.emit();\n\n      const topLevelRoutingKey = findTopLevelRoutingKey(this.routingKeyHistory[this.routingKeyPointer]);\n      if (topLevelRoutingKey === RoutingKeys.DEALER_SEARCH) {\n        animationManager.play('transitionSameLevelDoubleDrawerReverse');\n      } else {\n        animationManager.play('transitionPreviousLevelDoubleDrawer');\n      }\n    }\n  }\n\n  private async updateRouting(): Promise<void> {\n    this.animatingRoutingKey = this.routingKeyHistory[this.routingKeyPointer];\n    this.animatingRoutingKeyPointer = this.routingKeyPointer;\n\n    const isNavigatingBackwards = this.routingKeyPointer < this.routingKeyHistory.length - 1;\n    this.drawerChanged.emit(isNavigatingBackwards);\n\n    this.sendDoubleDrawerLoadDataEvent();\n  }\n\n  private sendDoubleDrawerLoadDataEvent() {\n    analyticsManager.setDrawerType(DisplayElementTypes.DoubleDrawer);\n    const activeRoutingKey: string = this.animatingRoutingKey || '';\n\n    globalDataLayerService.pushDataLayerEvent(EventActions.DRAWER_LOAD, {\n      componentDisplay: {\n        displayElementType: analyticsManager.calculateDisplayElementType(activeRoutingKey, ElementTypes.doubleDrawer),\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementName: 'Double Drawer'\n      }\n    });\n  }\n\n  private sendDataEventOfCloseButtonClick() {\n    const activeRoutingKey: string = this.animatingRoutingKey || '';\n    globalDataLayerService.pushDataLayerEvent(EventActions.MENU_CLOSE_CLICK, {\n      componentClick: {\n        clickElementId: 'mainmenu.drawer.close',\n        clickElementName: 'X',\n        clickElementType: ClickElementTypes.Button,\n        targetElement: 'level-0'\n      },\n      componentDisplay: {\n        displayElementType: analyticsManager.calculateDisplayElementType(activeRoutingKey, ElementTypes.closeButton),\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementName: 'Double Drawer'\n      }\n    });\n  }\n\n  private animateIfSameLength(newHistory: string[], oldHistory: string[]): boolean {\n    return (\n      newHistory.length === oldHistory.length &&\n      this.routingKeyPointer === newHistory.length - 1 &&\n      newHistory[newHistory.length - 1] !== oldHistory[oldHistory.length - 1]\n    );\n  }\n\n  componentWillLoad(): void {\n    this.animatingRoutingKey = this.routingKeyHistory[this.routingKeyPointer];\n    this.animatingRoutingKeyPointer = this.routingKeyPointer;\n    this.usingKeyboard = this.initialUsingKeyboard;\n  }\n\n  componentDidLoad(): void {\n    const routeChangeCallbacks: RouteChangeCallbacks = {\n      onSlideMainDrawerOutEnd: async () => this.updateRouting(),\n      onGrowHighlightEnd: async () => this.focusOnInitialElement()\n    };\n\n    registerOpenDoubleDrawerSequence({\n      onAnimationStarts: () => {\n        this.phnDrawerStatus.emit({ status: DrawerStatusValues.startOpening });\n      },\n      onAnimationEnds: () => {\n        this.phnDrawerStatus.emit({ status: DrawerStatusValues.finishOpening });\n        this.focusOnInitialElement();\n      }\n    });\n    registerCloseDoubleDrawerSequence({\n      onBackdropFadeOutEnd: async () => {\n        this.backdropClosed.emit();\n      },\n      onAnimationStarts: () => {\n        this.phnDrawerStatus.emit({ status: DrawerStatusValues.startClosing });\n      },\n      onAnimationEnds: () => {\n        this.phnDrawerStatus.emit({ status: DrawerStatusValues.finishClosing });\n      }\n    });\n    registerBackToPreviousMenuSequence(routeChangeCallbacks);\n    registerForwardToNextMenuSequence(routeChangeCallbacks);\n    registerTransitionSequence(routeChangeCallbacks);\n    registerTransitionSequence(routeChangeCallbacks, 'reverse');\n\n    this.sendDoubleDrawerLoadDataEvent();\n  }\n\n  render(): HTMLPhnDoubleDrawerElement {\n    const previousRoutingKey = this.routingKeyHistory[this.animatingRoutingKeyPointer - 1];\n    const backButtonText = getBackButtonText(navContentStore.state, previousRoutingKey);\n    const topLevelRoutingKey = findTopLevelRoutingKey(this.animatingRoutingKey);\n    const wasPreviouslyOnDealerSearch = findTopLevelRoutingKey(previousRoutingKey) === RoutingKeys.DEALER_SEARCH;\n    const isOnDealerDetails =\n      topLevelRoutingKey === RoutingKeys.DEALER_SEARCH && this.animatingRoutingKey !== topLevelRoutingKey;\n    return (\n      <Host role=\"dialog\" aria-modal=\"true\" aria-label=\"navigation modal dialog\" style={{ left: '-1000px' }}>\n        <phn-p-button\n          variant=\"secondary\"\n          class=\"close-button\"\n          theme=\"dark\"\n          hide-label=\"true\"\n          icon={'close'}\n          aria=\"{ 'aria-label': 'close modal dialog' }\"\n          data-test-id=\"close-button\"\n          onClick={() => {\n            this.sendDataEventOfCloseButtonClick();\n            this.clickDrawerHeaderClose.emit();\n          }}\n        />\n        {isString(this.animatingRoutingKey) ? (\n          <Fragment>\n            <div class=\"drawer\" id=\"side-drawer\">\n              <SideDrawerContent\n                activeRoutingKey={this.animatingRoutingKey}\n                locale={this.locale}\n                backButtonText={wasPreviouslyOnDealerSearch ? '' : backButtonText}\n                onClickBack={() => this.goBackToPreviousMenu()}\n              />\n            </div>\n\n            <div class=\"drawer\" id=\"main-drawer\">\n              <MainDrawerContent\n                activeRoutingKey={this.animatingRoutingKey}\n                breakpoint={this.breakpoint}\n                locale={this.locale}\n                backButtonText={isOnDealerDetails ? backButtonText : ''}\n                receivedContent={this.receivedContent}\n                onClickBack={() => this.goBackToPreviousMenu()}\n              />\n              <div class=\"bottom-gradient\" />\n            </div>\n          </Fragment>\n        ) : null}\n      </Host>\n    );\n  }\n}\n","@import '../../scss';\n\n$drawer-width: (\n  'm':  p-px-to-rem(336px),\n  'l':  p-px-to-rem(405px),\n  'xxl':  p-px-to-rem(606px),\n  'default': p-px-to-rem(330px)\n);\n$drawer-paddings: (\n  'm':  p-px-to-rem(36px),\n  'l':  p-px-to-rem(48px),\n  'xxl':  p-px-to-rem(84px),\n  'default': p-px-to-rem(28px)\n);\n\n:host {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: fit-content;\n  z-index: $phn-z-index-mega-flyout + 1;\n\n  .close-button {\n    $button-width: 48px;\n    $button-margin: 28px;\n    position: absolute;\n    right: p-px-to-rem(-($button-width + $button-margin));\n    z-index: $phn-z-index-mega-flyout + 1;\n    width: p-px-to-rem($button-width);\n    height: p-px-to-rem($button-width);\n    margin-top: p-px-to-rem($button-margin);\n    cursor: pointer;\n  }\n\n  .drawer {\n    overflow-y: auto;\n    overflow-x: hidden;\n    position: relative;\n    background-color: $pds-theme-light-background-base;\n    height: 100vh;\n\n    &#side-drawer {\n      z-index: $phn-z-index-mega-flyout + 2;\n      float: left;\n      width: calc(map-get($drawer-width, 'default') - calc(map-get($drawer-paddings, 'default') +  map-get($drawer-paddings, 'default')));\n      padding-left: map-get($drawer-paddings, 'default');\n      padding-right: map-get($drawer-paddings, 'default');\n\n      @include pds-media-query-min('m') {\n        width: calc(map-get($drawer-width, 'm') - calc(map-get($drawer-paddings, 'm') +  map-get($drawer-paddings, 'm')));\n        padding-left: map-get($drawer-paddings, 'm');\n        padding-right: map-get($drawer-paddings, 'm');\n      }\n      @include pds-media-query-min('l') {\n        width: calc(map-get($drawer-width, 'l') - calc(map-get($drawer-paddings, 'l') +  map-get($drawer-paddings, 'l')));\n        padding-left: map-get($drawer-paddings, 'l');\n        padding-right: map-get($drawer-paddings, 'l');\n      }\n      @include pds-media-query-min('xxl') {\n        width: calc(map-get($drawer-width, 'xxl') - calc(map-get($drawer-paddings, 'xxl') +  map-get($drawer-paddings, 'xxl')));\n        padding-left: map-get($drawer-paddings, 'xxl');\n        padding-right: map-get($drawer-paddings, 'xxl');\n      }\n\n      phn-side-drawer {\n        padding-bottom: 6rem;\n      }\n\n      .side-drawer-header {\n        box-sizing: border-box;\n        height: p-px-to-rem(92px);\n        padding-top: p-px-to-rem(42px);\n\n        @include pds-media-query-min('l') {\n          height: p-px-to-rem(96px);\n        }\n\n        @include pds-media-query-min('xxl') {\n          height: p-px-to-rem(128px);\n          padding-top: p-px-to-rem(60px);\n        }\n\n        phn-back-button {\n          margin-left: p-px-to-rem(-8px); // to make it look like the icon starts with the side-drawer-item\n          height: p-px-to-rem(24px);\n        }\n      }\n    }\n\n    &#main-drawer {\n      z-index: $phn-z-index-mega-flyout + 1;\n      float: right;\n      border-radius: 0 4px 4px 0;\n      background-color: $main-drawer-background-color;\n      box-sizing: border-box;\n      position: static;\n      width: map-get($drawer-width, 'default');\n      padding-left: map-get($drawer-paddings, 'default');\n      padding-right: map-get($drawer-paddings, 'default');\n\n      @include pds-media-query-min('m') {\n        width: map-get($drawer-width, 'm');\n        padding-left: map-get($drawer-paddings, 'm');\n        padding-right: map-get($drawer-paddings, 'm');\n      }\n      @include pds-media-query-min('l') {\n        width: map-get($drawer-width, 'l');\n        padding-left: map-get($drawer-paddings, 'l');\n        padding-right: map-get($drawer-paddings, 'l');\n      }\n      @include pds-media-query-min('xxl') {\n        width: map-get($drawer-width, 'xxl');\n        padding-left: map-get($drawer-paddings, 'xxl');\n        padding-right: map-get($drawer-paddings, 'xxl');\n      }\n\n      phn-router {\n        padding-bottom: 6rem;\n      }\n\n      .main-drawer-header {\n        box-sizing: border-box;\n        height: p-px-to-rem(66px);\n        padding-top: p-px-to-rem(40px);\n        margin-bottom: p-px-to-rem(26px);\n\n        @include pds-media-query-min('l') {\n          margin-bottom: p-px-to-rem(30px);\n        }\n\n        @include pds-media-query-min('xxl') {\n          height: p-px-to-rem(84px);\n          margin-bottom: p-px-to-rem(44px);\n          padding-top: p-px-to-rem(40px);\n        }\n\n        phn-back-button {\n          // to make it look like the icon aligns with the left border of the main drawer\n          margin-left: p-px-to-rem(-8px);\n          height: p-px-to-rem(24px);\n        }\n      }\n\n      .bottom-gradient {\n        @include drawer-gradient(rgba(255, 255, 255, 0), $main-drawer-background-color);\n        width: map-get($drawer-width, 'default');\n        margin-left: - map-get($drawer-paddings, 'default');\n        border-radius: 0 0 4px 0;\n\n        @include pds-media-query-min('m') {\n          width: map-get($drawer-width, 'm');\n          margin-left: - map-get($drawer-paddings, 'm')\n        }\n\n        @include pds-media-query-min('l') {\n          width: map-get($drawer-width, 'l');\n          margin-left: - map-get($drawer-paddings, 'l')\n        }\n\n        @include pds-media-query-min('xxl') {\n          width: map-get($drawer-width, 'xxl');\n          margin-left: - map-get($drawer-paddings, 'xxl')\n        }\n      }\n    }\n  }\n}\n","import { createStore } from '@stencil/store';\n\ninterface RouterStore {\n  routingKeyHistory: string[];\n  routingKeyPointer: number;\n  initialRoutingKeyHistory: string[] | null;\n  initialRoutingKeyPointer: number | null;\n}\n\nexport const routerStore = createStore<RouterStore>({\n  routingKeyHistory: [],\n  routingKeyPointer: -1,\n  initialRoutingKeyHistory: null,\n  initialRoutingKeyPointer: null\n});\n"],"names":["state","calculateDisplayElementId","e","t","drawerType","r","isString","getPreviousRoutingKey","routerStore","routingKeyHistory","routingKeyPointer","a","getLastRoutingSegment","n","determineMainDrawerLevel","l","i","concat","o","getSideDrawerRoutingKey","calculateDisplayElementType","getDrawerType","analyticsManager","setDrawerType","getDealerResultsLoadDisplayElementId","getDealerResultsLoadDisplayElementType","DEALER_SEARCH_ELEMENT_TYPE","ElementTypes","dealerSearchForm","getModelName","link","split","length","undefined","join","getModelTargetElement","includes","toLowerCase","M","Object","defineProperty","enumerable","configurable","writable","value","W","y","w","clean","enabled","executionPlace","values","logging","level","validation","allowUnknown","verbose","webProperties","eventNamePattern","reactiveUrl","reactiveDimensions","U","prototype","create","event","context","eventAction","_","S","m","P","k","B","j","x","error","warn","log","v","this","prefix","settings","__assign","_getMergedSettings","_isAllowed","isAvailable","_log","console","dir","debug","info","b","u","arguments","forEach","Array","isArray","q","timestamp","server","hostname","pageExperience","pageId","url","visitor","deviceBrowserBreakpoint","breakpoint","deviceBrowserHeight","height","deviceBrowserOrientation","orientation","deviceBrowserWidth","width","deviceType","useragent","userAgent","K","V","window","location","href","replace","R","innerHeight","toString","D","innerWidth","T","J","breakpoints","ee","keys","indexOf","map","trim","test","Number","parseFloat","te","issues","eventMatrix","events","__rest","s","push","type","name","message","f","c","C","filter","G","p","g","d","h","ie","Map","_className","_logger","_settings","_dataLayerStore","pagData","_defaultProperties","setup","_handleDefaultWebProperties","getRegisteredExtension","getRegisteredExtensionByClassName","className","_extensions","has","get","getRegisteredExtensions","registerExtension","dataLayerInstance","set","removeExtension","delete","removeExtensionByClassName","_eventNamePayloadFactory","getDefaultProperties","__spreadArray","apply","sort","byName","byArray","byRegex","identifier","data","RegExp","setDefaultProperties","find","_webPropertiesHandled","Date","toISOString","matchMedia","matches","navigator","Z","_webPayloadFactory","oe","call","__extends","getEnvironmentAbbreviation","Environments","PRODUCTION","PREVIEW","GlobalDataLayerService","homeNavEventId","initialise","gdl","pushDataLayerEvent","setEnvironment","environment","setPageName","pageName","setUser","ids","userId","loginStatus","setLocale","splitLocale","country","language","applicationId","DATA_LAYER_APP_ID","assign","applicationName","DATA_LAYER_APPLICATION_NAME","globalDataLayerService","getAllFocusableElements","querySelectorAll","FOCUSABLE_ELEMENTS_SELECTOR","E","getHTMLElement","MainDrawerContent","activeRoutingKey","locale","backButtonText","onClickBack","receivedContent","class","onClick","text","analyticsId","navContentStore","menu","id","SideDrawerContent","tabIndex","DoubleDrawer","RoutingKeyPointers","LEVEL_ZERO","watchRoutingKeyPointer","findTopLevelRoutingKey","RoutingKeys","DEALER_SEARCH","animationManager","play","watchRoutingKeyHistory","animateIfSameLength","onResizeWindow","animatingRoutingKeyPointer","animatingRoutingKey","handleKeyDown","key","startsWith","target","el","querySelector","findIndex","getAttribute","nodeName","shiftKey","preventDefault","focusOnElement","handleMobileMenuItemClick","isPlaying","stopPropagation","handleSideDrawerItemClick","focusOnInitialElement","usingKeyboard","goBackToPreviousMenu","clickDrawerHeaderBack","emit","updateRouting","drawerChanged","sendDoubleDrawerLoadDataEvent","DisplayElementTypes","EventActions","DRAWER_LOAD","componentDisplay","displayElementType","doubleDrawer","displayElementId","displayElementName","sendDataEventOfCloseButtonClick","MENU_CLOSE_CLICK","componentClick","clickElementId","clickElementName","clickElementType","ClickElementTypes","Button","targetElement","closeButton","componentWillLoad","initialUsingKeyboard","componentDidLoad","onSlideMainDrawerOutEnd","__awaiter","__generator","onGrowHighlightEnd","registerOpenDoubleDrawerSequence","onAnimationStarts","phnDrawerStatus","status","DrawerStatusValues","startOpening","onAnimationEnds","finishOpening","registerCloseDoubleDrawerSequence","onBackdropFadeOutEnd","backdropClosed","startClosing","finishClosing","registerBackToPreviousMenuSequence","registerForwardToNextMenuSequence","registerTransitionSequence","render","getBackButtonText","Host","role","style","left","variant","theme","icon","aria","clickDrawerHeaderClose","Fragment","createStore","initialRoutingKeyHistory","initialRoutingKeyPointer"],"sourceRoot":""}