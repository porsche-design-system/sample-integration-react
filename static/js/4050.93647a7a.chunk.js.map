{"version":3,"file":"static/js/4050.93647a7a.chunk.js","mappings":"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","sources":["../node_modules/@porschehn/navigation/dist/esm-es5/src/services/analytics/analytics-manager.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/utility/helpers/dealer-search-helper.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/state/finder-state-store.ts","../node_modules/@porschehn/navigation/dist/esm-es5/node_modules/@porsche/globaldatalayer/dist/GlobalDataLayer.es.js","../node_modules/@porschehn/navigation/dist/esm-es5/src/services/analytics/global-data-layer-service.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/car-body-types-drawer/car-body-types-drawer.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/car-body-types-drawer/car-body-types-drawer.scss?tag=phn-car-body-types-drawer&encapsulation=scoped","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/dealer-search-form/dealer-search-form.scss?tag=phn-dealer-search-form&encapsulation=scoped","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/dealer-search-form/dealer-search-form.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/level-1/level-1.scss?tag=phn-level-1&encapsulation=scoped","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/level-1/level-1.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/menu/saved-vehicles/menu-item-count-indicator.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/menu/saved-vehicles/menu-item-link.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/menu/menu.scss?tag=phn-menu&encapsulation=scoped","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/menu/menu.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/models/models.scss?tag=phn-models&encapsulation=scoped","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/models/models.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/myporsche-drawer/myporsche-drawer-links.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/myporsche-drawer/myporsche-drawer-login.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/myporsche-drawer/myporsche-drawer.scss?tag=phn-myporsche-drawer&encapsulation=scoped","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/myporsche-drawer/myporsche-drawer.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/utility/helpers/string-helper.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/router/sections/shop.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/router/sections/vehiclePurchase.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/router/router.scss?tag=phn-router&encapsulation=scoped","../node_modules/@porschehn/navigation/dist/esm-es5/src/components/router/router.tsx","../node_modules/@porschehn/navigation/dist/esm-es5/src/utility/ready.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/state/router-store.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/state/shop-state-store.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/utility/helpers/shop-helper.ts","../node_modules/@porschehn/navigation/dist/esm-es5/src/utility/timeout.ts"],"sourcesContent":["import { BodyType } from '../../entities/content';\nimport { determineMainDrawerLevel, getLastRoutingSegment, getPreviousRoutingKey } from '../../entities/routing-key';\nimport { routerStore } from '../../state/router-store';\nimport { DEALER_SEARCH_ELEMENT_TYPE, DisplayElementType, ElementType, ElementTypes } from '../../utility/constants';\nimport { isString } from '../../utility/helper';\nimport { getSideDrawerRoutingKey } from '../menu-items-service';\n\nconst state: {\n  drawerType?: DisplayElementType;\n  elementType?: ElementType;\n} = {};\n\nfunction setDrawerType(drawerType: DisplayElementType): void {\n  state.drawerType = drawerType;\n}\n\nfunction calculateDisplayElementId(routingKeyForNavigatingForward?: string): string {\n  const { drawerType } = state;\n  const mainDrawerRoutingKey =\n    (isString(routingKeyForNavigatingForward)\n      ? getPreviousRoutingKey(routingKeyForNavigatingForward)\n      : routerStore.state.routingKeyHistory[routerStore.state.routingKeyPointer]) || '';\n  const lastMainDrawerRoutingKey = getLastRoutingSegment(mainDrawerRoutingKey);\n  const mainDrawerLevel = determineMainDrawerLevel(mainDrawerRoutingKey);\n  const sideDrawerLevel = mainDrawerLevel - 1;\n\n  if (!isString(mainDrawerRoutingKey)) {\n    return 'level0';\n  }\n\n  const mainDrawerDisplayElementId = isString(mainDrawerRoutingKey)\n    ? `level${mainDrawerLevel}-${lastMainDrawerRoutingKey}`\n    : `level${mainDrawerLevel - 1}-unknown`;\n\n  if (drawerType === 'doubleDrawer') {\n    if (mainDrawerRoutingKey === '') {\n      return `level${sideDrawerLevel}-unknown_level${mainDrawerLevel}-unknown`;\n    }\n    const sideDrawerRoutingKey = getSideDrawerRoutingKey(mainDrawerRoutingKey);\n    return `level${sideDrawerLevel}-${sideDrawerRoutingKey}_${mainDrawerDisplayElementId}`;\n  }\n\n  return mainDrawerDisplayElementId;\n}\n\nfunction calculateDisplayElementType(\n  activeRoutingKey: string,\n  elementType: ElementType,\n  isSideDrawer?: boolean\n): string {\n  const { drawerType } = state;\n  const mainDrawerLevel = determineMainDrawerLevel(activeRoutingKey);\n\n  if (drawerType === 'doubleDrawer') {\n    let sideDrawerLevel = mainDrawerLevel;\n    if (isSideDrawer) {\n      sideDrawerLevel = sideDrawerLevel - 1;\n    }\n    return `level${sideDrawerLevel}_${elementType}`;\n  } else {\n    return isString(activeRoutingKey)\n      ? `level${mainDrawerLevel}_${elementType}`\n      : `level${mainDrawerLevel - 1}_${elementType}`;\n  }\n}\n\nfunction getModelName(bodyType: BodyType): string {\n  const urlSplitIntoPieces: string[] = bodyType.link.split('/');\n  const lastElementInUrlSplit: string = urlSplitIntoPieces[urlSplitIntoPieces.length - 1];\n  let modelName: string;\n\n  if (lastElementInUrlSplit === '') {\n    if (urlSplitIntoPieces[urlSplitIntoPieces.length - 2] === undefined) {\n      modelName = '';\n    } else {\n      modelName = urlSplitIntoPieces[urlSplitIntoPieces.length - 2].split('-').join(' ');\n    }\n  } else {\n    modelName = lastElementInUrlSplit.split('-').join(' ');\n  }\n\n  return modelName;\n}\n\nfunction getModelTargetElement(elementId: string, text: string): string | undefined {\n  if (elementId.includes('models')) {\n    const mainDrawerLevel = determineMainDrawerLevel(elementId);\n\n    return `level${mainDrawerLevel}_${text.toLowerCase()}`;\n  }\n\n  return;\n}\n\nfunction getDrawerType() {\n  return state.drawerType;\n}\n\nfunction getDealerResultsLoadDisplayElementId(elementId: string): string {\n  if (getDrawerType() === 'doubleDrawer') {\n    return elementId;\n  } else {\n    return calculateDisplayElementId();\n  }\n}\n\nfunction getDealerResultsLoadDisplayElementType(): string {\n  if (getDrawerType() === 'doubleDrawer') {\n    return DEALER_SEARCH_ELEMENT_TYPE;\n  } else {\n    return calculateDisplayElementType('', ElementTypes.dealerSearchForm);\n  }\n}\n\nexport default {\n  setDrawerType,\n  getDealerResultsLoadDisplayElementId,\n  calculateDisplayElementId,\n  getDealerResultsLoadDisplayElementType,\n  calculateDisplayElementType,\n  getModelName,\n  getModelTargetElement\n};\n","import { OpenHours } from '../../entities/dealer-response';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { OpeningHours } from '../../entities/content';\nimport { isString } from '../helper';\n\nexport function showDealerSearchDropdown(country: string): boolean {\n  const countriesWithDropdown = ['CN'];\n\n  return countriesWithDropdown.includes(country);\n}\n\nexport function getRegionSpecificCountry(country: string): string {\n  return country.includes('-') ? country.split('-')[0] : country;\n}\n\nexport function sanitizeDealerHomepage(originalUrl: string): string {\n  if (!originalUrl.startsWith('https://')) {\n    return `http://${originalUrl}`;\n  }\n\n  return originalUrl;\n}\n\nexport function getOpeningHours(openingHoursData: OpenHours[]): string {\n  const { openingHours } = navContentStore.state.dealer;\n\n  if (!openingHours) {\n    return '';\n  }\n\n  const WEEK_DAYS = [\n    openingHours.monday,\n    openingHours.tuesday,\n    openingHours.wednesday,\n    openingHours.thursday,\n    openingHours.friday,\n    openingHours.saturday,\n    openingHours.sunday\n  ];\n\n  const openingHoursMap = getOpeningHoursMap(openingHours, openingHoursData);\n  const result: string[] = [];\n  let previousOpeningHours = '';\n  let previousDayIndex = -1;\n  let consecutiveDays: string[] = [];\n\n  for (const day of WEEK_DAYS) {\n    const currentDayIndex = WEEK_DAYS.indexOf(day);\n    const openHours = openingHoursMap.get(day);\n    const openingHoursString = getOpeningHoursString(openHours);\n\n    if (openingHoursString !== '') {\n      if (previousOpeningHours === '') {\n        previousOpeningHours = openingHoursString;\n        consecutiveDays.push(day);\n      } else if (previousOpeningHours !== openingHoursString || previousDayIndex !== currentDayIndex - 1) {\n        result.push(getDayRange(consecutiveDays, previousOpeningHours));\n        consecutiveDays = [day];\n        previousOpeningHours = openingHoursString;\n      } else {\n        consecutiveDays.push(day);\n      }\n      previousDayIndex = currentDayIndex;\n    }\n  }\n\n  if (previousOpeningHours !== '') {\n    result.push(getDayRange(consecutiveDays, previousOpeningHours));\n  }\n\n  const dailyLunchOpenHours = openingHoursMap.get(openingHours.daily_lunch);\n  const dailyLunchTime = getOpeningHoursString(dailyLunchOpenHours);\n  if (dailyLunchTime !== '') {\n    result.push(getDayRange([openingHours.daily_lunch], dailyLunchTime));\n  }\n\n  return result.join('\\n');\n}\n\nfunction getDayRange(days: string[], openingHoursString: string) {\n  if (days.length === 1) {\n    return `${days[0]}: ${openingHoursString}`;\n  }\n  return `${days[0]} - ${days[days.length - 1]}: ${openingHoursString}`;\n}\n\nfunction getOpeningHoursMap(openingHours: OpeningHours, openingHoursData: OpenHours[]) {\n  const openingHoursMap: Map<string, { open: string; close: string }> = new Map();\n\n  for (const item of openingHoursData) {\n    const day = openingHours[item.day.toLowerCase() as keyof OpeningHours];\n\n    if (isString(day)) {\n      openingHoursMap.set(day, { open: item.open, close: item.close });\n    }\n  }\n\n  return openingHoursMap;\n}\n\nfunction getOpeningHoursString(openHours: { open: string; close: string } | undefined): string {\n  return openHours && openHours.open !== '' && openHours.close !== '' ? getTimeFormat(openHours) : '';\n}\n\nfunction getTimeFormat(openHours: { open: string; close: string }): string {\n  const { openingHours } = navContentStore.state.dealer;\n\n  const timeFormat = openingHours?.timeFormat === 12;\n\n  return `${convertToLocalTime(openHours.open, timeFormat)} - ${convertToLocalTime(openHours.close, timeFormat)}`;\n}\n\nfunction convertToLocalTime(time: string, timeFormat = false) {\n  const [hour, minute] = time.split(':').map(Number);\n  const date = new Date(0, 0, 0, hour, minute);\n\n  return date\n    .toLocaleString(undefined, {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: timeFormat\n    })\n    .toUpperCase();\n}\n","import { createStore } from '@stencil/store';\n\nexport interface FinderStateStoreTypes {\n  savedSearchesCount: number;\n  savedVehiclesCount: number;\n}\n\nexport const finderStateStore = createStore<FinderStateStoreTypes>({\n  savedSearchesCount: 0,\n  savedVehiclesCount: 0\n});\n","var M = Object.defineProperty;\nvar W = (r, t, e) => t in r ? M(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e;\nvar o = (r, t, e) => (W(r, typeof t != \"symbol\" ? t + \"\" : t, e), e);\nconst y = {\n  BEFORE_MERGE: \"BEFORE_MERGE\",\n  AFTER_MERGE: \"AFTER_MERGE\"\n}, w = {\n  clean: {\n    enabled: !1,\n    executionPlace: y.AFTER_MERGE,\n    values: [\"\", void 0, null]\n  },\n  logging: {\n    enabled: !0,\n    level: \"warn\"\n  },\n  validation: {\n    enabled: !1,\n    allowUnknown: !1,\n    verbose: !0\n  },\n  webProperties: {\n    enabled: !0,\n    eventNamePattern: /.*/,\n    reactiveUrl: !0,\n    reactiveDimensions: !0\n  }\n};\nclass U {\n  /**\n   * Creates a PCOM (default) data layer schema specific object, that contains the given event name.\n   *\n   * @param data - Contains the event name in a standardized {@link IFactoryData} like way.\n   *\n   * @returns The event name in the PCOM (default) data layer schema specific object.\n   *\n   * @example\n   * myEventNameFactory.create({ event: 'MY_EVENT_NAME' });\n   * // returns:\n   * // {\n   * //   context: {\n   * //     eventAction: 'MY_EVENT_NAME'\n   * //   }\n   * // }\n   */\n  create(t) {\n    return typeof t.event != \"string\" || t.event.length === 0 ? {} : {\n      context: {\n        eventAction: t.event\n      }\n    };\n  }\n}\nconst S = (r, t) => {\n  let e;\n  for (e in r)\n    if (!(!r || !r[e]) && t(r[e], e) === !1)\n      return !1;\n  return !0;\n}, _ = (r, t) => S(r, (e, s) => {\n  for (const i in r[s])\n    if (t(e[i], i, e, s) === !1)\n      return !1;\n  return !0;\n}), ne = (r) => {\n  if (m(r))\n    return !0;\n  let t = 0, e = 0;\n  return S(r, (s) => {\n    t++, m(s) && e++;\n  }), t === e;\n}, m = (r) => {\n  for (const t in r)\n    return !1;\n  return !0;\n}, P = (r, t = ((e) => (e = w.clean) == null ? void 0 : e.values)() || []) => (_(\n  r,\n  (s, i, n, l) => {\n    t.includes(s) && (delete n[i], m(n) && delete r[l]);\n  }\n), r), G = (r, t) => r && (_(\n  r,\n  (e, s, i, n) => {\n    t.includes(`${n.toString()}.${s.toString()}`) && (delete i[s], m(i) && delete r[n]);\n  }\n), r), k = (r) => (_(\n  r,\n  (t, e, s) => (typeof t != \"function\" || (s[e] = t()), !0)\n), r);\nclass H {\n  /**\n   * Creates a new instance of {@link FrameTicker}.\n   *\n   * @param callback The functionality that should be called\n   * @param ticksPerSecond How many times should the functionality been called in one second\n   */\n  constructor(t, e = 10) {\n    o(this, \"tickInterval\");\n    o(this, \"callback\");\n    o(this, \"_tickTime\", Date.now());\n    o(this, \"_tickActive\", !1);\n    this.callback = t, this.tickInterval = 1e3 / e;\n  }\n  /**\n   * Start the {@link FrameTicker}.\n   */\n  start() {\n    this._tickActive || (this._tickActive = !0, this.run());\n  }\n  /**\n   * Stop the {@link FrameTicker}.\n   */\n  stop() {\n    this._tickActive = !1;\n  }\n  /**\n   * Internal function executed on each _tick_.\n   *\n   * @private\n   */\n  run() {\n    if (!this._tickActive)\n      return;\n    requestAnimationFrame(this.run.bind(this));\n    const t = Date.now(), e = t - this._tickTime;\n    e < this.tickInterval || (this._tickTime = t - e % this.tickInterval, this.callback());\n  }\n}\nconst B = (r, t) => {\n  const e = t.split(\".\");\n  if (e.length !== 2)\n    return;\n  const s = r[e[0]];\n  if (s)\n    return s[e[1]];\n}, C = (r) => {\n  if (!r)\n    return [];\n  const t = [];\n  return _(\n    r,\n    (e, s, i, n) => {\n      t.push(`${n.toString()}.${s.toString()}`);\n    }\n  ), t;\n}, j = w.logging;\nvar x = /* @__PURE__ */ ((r) => (r[r.error = 0] = \"error\", r[r.warn = 1] = \"warn\", r[r.log = 2] = \"log\", r))(x || {});\nconst v = class v {\n  /**\n   * Creates an instance of the {@link Logger} class.\n   *\n   * @param prefix A prefix that is used in all logs\n   *   (`[PREFIX] MESSAGE`, i.e. `[GlobalDataLayer] This is a serious message`).\n   * @param options Options to be merged as settings with the {@link DEFAULT_SETTINGS.logging}.\n   */\n  constructor(t, e) {\n    /**\n     * The prefix that is used in all logs.\n     * @private\n     */\n    o(this, \"prefix\");\n    /**\n     * The merged settings. Also see the options of the {@link constructor} and the {@link DEFAULT_SETTINGS.logging}.\n     *\n     * @see {@link TLoggerSettings}\n     *\n     * @private\n     */\n    o(this, \"settings\");\n    this.prefix = t, this.settings = {\n      ...j,\n      ...e\n    };\n  }\n  /**\n   * Helper function to merge the options of a log method call with the current {@link settings}.\n   *\n   * @param options  Options to be merged with the available {@link settings}\n   *\n   * @returns The merged temporary settings.\n   *\n   * @private\n   */\n  _getMergedSettings(t) {\n    return t ? {\n      ...this.settings,\n      ...t\n    } : this.settings;\n  }\n  /**\n   * Check, if this log message is allowed.\n   *\n   * @see {@link TLoggerSettings.enabled} and {@link TLoggerSettings.level} and {@link isAvailable}\n   *\n   * @param type Type of the current log message.\n   * @param settings The current (temporary) settings.\n   *\n   * @returns `true`if the log message is allowed.\n   *\n   * @private\n   */\n  _isAllowed(t, e) {\n    if (!v.isAvailable || !e.enabled)\n      return !1;\n    const s = x[e.level];\n    switch (t) {\n      case \"error\":\n      case \"warn\":\n        return s >= x[t];\n      case \"info\":\n      case \"log\":\n      case \"debug\":\n      case \"dir\":\n        return s >= 2;\n      default:\n        return !1;\n    }\n  }\n  /**\n   * A helper method to execute the log messages of all different types.\n   *\n   * @param msg The message text.\n   * @param type The type of the message.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   *\n   * @private\n   */\n  _log(t, e = \"log\", s) {\n    const i = this._getMergedSettings(s);\n    if (this._isAllowed(e, i))\n      switch (e) {\n        case \"dir\":\n          console.log(`[${this.prefix}] ${e}:`), console[e](t);\n          break;\n        default:\n          console[e](`[${this.prefix}] ${t}`);\n      }\n  }\n  /**\n   * Write a normal log message.\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  log(t, e) {\n    this._log(t, \"log\", e);\n  }\n  /**\n   * Write a log message of type `dir`.\n   *\n   * This message will be split in two messages, the prefix with \" dir:\" and the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/console/dir dir} output as interactive list.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/dir console.dir()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  dir(t, e) {\n    this._log(t, \"dir\", e);\n  }\n  /**\n   * Write a log message of type `debug`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/debug console.debug()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  debug(t, e) {\n    this._log(t, \"debug\", e);\n  }\n  /**\n   * Write a log message of type `error`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/error console.error()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  error(t, e) {\n    this._log(t, \"error\", e);\n  }\n  /**\n   * Write a log message of type `info`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/info console.info()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  info(t, e) {\n    this._log(t, \"info\", e);\n  }\n  /**\n   * Write a log message of type `warn`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/warn console.warn()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  warn(t, e) {\n    this._log(t, \"warn\", e);\n  }\n};\n/**\n * Check if there is a console available that makes logging possible.\n */\no(v, \"isAvailable\", (() => typeof console < \"u\")());\nlet b = v;\nconst u = (...r) => {\n  const t = {};\n  return r.forEach((e) => {\n    if (m(e))\n      return;\n    const s = {\n      ...t,\n      ...e\n    };\n    let i;\n    for (i in s)\n      typeof s[i] == \"object\" && !Array.isArray(s[i]) ? t[i] = {\n        ...t[i],\n        ...e[i]\n      } : t[i] = s[i];\n  }), t;\n};\nclass q {\n  /**\n   * Creates a PCOM (default) data layer schema specific object, that contains the given web properties.\n   *\n   * @param data - Contains the web properties in a standardized {@link IFactoryData} like way.\n   *\n   * @returns The given web properties in the PCOM (default) data layer schema specific object.\n   *\n   * @example\n   * myWebPropertiesFactory.create({ userAgent: 'MY_USE_AGENT' });\n   * // returns:\n   * // {\n   * //   visitor: {\n   * //     userAgent: 'MY_USE_AGENT'\n   * //   }\n   * // }\n   */\n  create(t) {\n    return P(\n      {\n        context: {\n          timestamp: t.timestamp,\n          server: t.hostname\n        },\n        pageExperience: {\n          pageId: t.url\n        },\n        visitor: {\n          deviceBrowserBreakpoint: t.breakpoint,\n          deviceBrowserHeight: t.height,\n          deviceBrowserOrientation: t.orientation,\n          deviceBrowserWidth: t.width,\n          deviceType: t.deviceType,\n          useragent: t.userAgent\n        }\n      },\n      [void 0]\n    );\n  }\n}\nconst K = w.webProperties, V = () => window.location.href.replace(/[?#].*/, \"\"), Y = () => (/* @__PURE__ */ new Date()).toISOString(), Q = () => window.location.hostname, R = () => window.innerHeight.toString(), D = () => window.innerHeight > window.innerWidth ? \"p\" : \"l\", T = () => window.innerWidth.toString(), X = () => window.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? \"mobile\" : \"desktop\", z = () => window.navigator.userAgent, J = (r) => {\n  if (!r.breakpoints || r.breakpoints.length < 1)\n    return;\n  const { breakpoints: t } = r, e = () => {\n    const s = window.innerWidth;\n    let i = 0, n = 0;\n    for (; n < t.length && s >= t[n]; )\n      i = t[n], n++;\n    return i.toString();\n  };\n  return r.reactiveDimensions ? e : e();\n}, Z = (r, t) => {\n  const e = {\n    ...K,\n    ...r\n  }, i = {\n    breakpoint: J(e),\n    timestamp: Y(),\n    hostname: Q(),\n    url: e.reactiveUrl ? V : V(),\n    height: e.reactiveDimensions ? R : R(),\n    orientation: e.reactiveDimensions ? D : D(),\n    width: e.reactiveDimensions ? T : T(),\n    deviceType: X(),\n    userAgent: z()\n  };\n  return t ? t.create(i) : i;\n}, ee = (r, t) => {\n  switch (t) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n      return typeof r === t;\n    case \"any[]\":\n      return Array.isArray(r) && r.length > 0;\n    case \"Record<string, any>\":\n      return typeof r == \"object\" && !Array.isArray(r) && Object.keys(r).length > 0;\n    case \"any\":\n      return !0;\n    default:\n      if ((typeof r == \"boolean\" || typeof r == \"number\" || typeof r == \"string\") && t.indexOf(\"|\") > 0)\n        return t.split(\"|\").map((s) => {\n          const i = s.trim();\n          return /^'.*'$/.test(i) ? i.replace(/(^ ?'?|'? ?$)/g, \"\") : /^(true|false)$/.test(i) ? i === \"true\" : /^-?(\\d*\\.)?\\d+$/.test(i) ? Number.parseFloat(i) : i.replace(/(^ ?'?|'? ?$)/g, \"\");\n        }).includes(r);\n  }\n  return !0;\n}, te = (r, t, e) => {\n  const s = {\n    level: null,\n    issues: []\n  };\n  if (!e.enabled || !e.eventMatrix)\n    return s;\n  const { events: i, ...n } = e.eventMatrix, l = i.indexOf(r);\n  if (l === -1)\n    return s.level = \"error\", s.issues.push({\n      level: \"error\",\n      type: \"EVENT_NOT_FOUND\",\n      name: r,\n      message: `'${r}': Event does not exist.`\n    }), s;\n  const a = C(t), d = Object.keys(n), c = a.filter(\n    (g) => !d.includes(g)\n  );\n  c.length > 0 && (e.allowUnknown || G(t, c), c.forEach((g) => {\n    s.level = s.level ?? \"warn\", s.issues.push({\n      level: \"warn\",\n      type: \"PROPERTY_DOES_NOT_EXIST\",\n      name: g,\n      message: `'${g}': Property does not exist in the given Event Matrix.${e.allowUnknown ? \"\" : \" It was omitted from the DataLayer payload.\"}`\n    });\n  }));\n  let h;\n  for (h in n) {\n    const g = n[h], f = typeof g.e[l] < \"u\", p = g.r === 1, E = t ? B(t, h) : void 0, N = typeof E < \"u\";\n    if (f && // Does the event want this property?\n    p && // Is the property mandatory in general?\n    !N && (s.level = \"error\", s.issues.push({\n      level: \"error\",\n      type: \"REQUIRED_PROPERTY_MISSING\",\n      name: h,\n      message: `'${h}': The required property is missing.`\n    }), !e.verbose) || N && !ee(E, g.t) && (s.level = \"error\", s.issues.push({\n      level: \"error\",\n      type: \"WRONG_PROPERTY_TYPE\",\n      name: h,\n      message: `'${h}': Wrong type detected. Expected '${g.t}', got '${typeof E}'.`\n    }), !e.verbose))\n      return s;\n  }\n  return s;\n};\nclass L {\n  constructor(t = \"DataLayerExtension\", e) {\n    /**\n     * A\n     * @protected\n     */\n    o(this, \"_logger\");\n    o(this, \"_className\");\n    o(this, \"_dataLayerInstance\");\n    this._className = t, this._logger = new b(this.className, e);\n  }\n  get dataLayerInstance() {\n    return this._dataLayerInstance;\n  }\n  set dataLayerInstance(t) {\n    this._dataLayerInstance = t;\n  }\n  get className() {\n    return this._className;\n  }\n  set className(t) {\n    this._className = t;\n  }\n  get isRegistered() {\n    return typeof this._dataLayerInstance < \"u\";\n  }\n}\nconst A = {\n  eventName: \"UNKNOWN\",\n  thresholds: {\n    filled: 0.5,\n    visible: 0.3,\n    minValidityPeriod: 1\n  },\n  triggerUpdates: {\n    enabled: !1,\n    eventName: \"VIEWPORT_TRACKER_STATUS_CHANGE\"\n  },\n  tickerSettings: {\n    ticksPerSecond: 10\n  }\n};\nclass se extends Event {\n  constructor(e, s) {\n    super(e);\n    o(this, \"registeredElement\");\n    this.registeredElement = s;\n  }\n}\nclass $ extends L {\n  /**\n   * Creates a new instance of {@link ViewportTrackerExtension} with optional settings of type\n   * {@link TViewportTrackerSettings}.\n   *\n   * @param options The settings to initialize the instance. Will be merged with the defaults.\n   */\n  constructor(e) {\n    var s;\n    super(\"ViewportTrackerExtension\", e == null ? void 0 : e.logger);\n    o(this, \"settings\");\n    o(this, \"observer\", null);\n    o(this, \"frameTicker\");\n    o(this, \"registeredElements\", []);\n    o(this, \"visibleElements\", []);\n    this.settings = e ? u(A, e) : A, this.observer = this.createObserver(), this.frameTicker = new H(\n      this.checkVisibilityOfElements.bind(this),\n      (s = this.settings.tickerSettings) == null ? void 0 : s.ticksPerSecond\n    );\n  }\n  /**\n   * Will create and return the mandatory {@link IntersectionObserver}. The function will log an error if this is not\n   * possible.\n   *\n   * @returns The ready-to-use {@link IntersectionObserver} instance or null.\n   *\n   * @private\n   */\n  createObserver() {\n    return !window || !(\"IntersectionObserver\" in window) ? (this._logger.error(\"The ViewportTrackerExtension will need IntersectionObserver to work.\"), null) : new IntersectionObserver(this.observerHandler.bind(this), {\n      threshold: 0,\n      rootMargin: \"0px 0px\"\n    });\n  }\n  /**\n   * Register an {@link HTMLElement} to be observed.\n   *\n   * @param element The {@link HTMLElement} to register with optional _DataLayer_ properties.\n   */\n  registerElement(e) {\n    var s;\n    this.unregisterElement(e.el), this.registeredElements.push({\n      el: e.el,\n      properties: e.properties,\n      state: {\n        isFilled: !1,\n        isVisible: !1,\n        passedValidityPeriod: !1\n      }\n    }), (s = this.observer) == null || s.observe(e.el);\n  }\n  /**\n   * Register multiple {@link HTMLElement}s to be observed.\n   *\n   * @param elements The {@link HTMLElement}s to register with optional _DataLayer_ properties.\n   */\n  registerElements(e) {\n    for (const s of e)\n      this.registerElement(s);\n  }\n  /**\n   * Unregister an {@link HTMLElement} from observation.\n   *\n   * @param element The {@link HTMLElement} to unregister.\n   */\n  unregisterElement(e) {\n    var i;\n    (i = this.observer) == null || i.unobserve(e);\n    const s = this.getRegisteredElementIndex(e);\n    s < 0 || this.registeredElements.splice(s, 1);\n  }\n  /**\n   * Unregister multiple {@link HTMLElement}s from observation.\n   *\n   * @param elements The {@link HTMLElement}s to unregister.\n   */\n  unregisterElements(e) {\n    for (const s of e)\n      this.unregisterElement(s);\n  }\n  /**\n   * Helper function to retrieve the index of a registered {@link HTMLElement} from the `registeredElements` array.\n   *\n   * @param el The {@link HTMLElement} to find.\n   * @returns The index of the element if found, otherwise `-1`.\n   *\n   * @private\n   */\n  getRegisteredElementIndex(e) {\n    return this.registeredElements.findIndex((s) => s.el === e);\n  }\n  /**\n   * Helper function to retrieve a registered {@link HTMLElement} from the `registeredElements` array.\n   *\n   * @param el The {@link HTMLElement} to find.\n   *\n   * @returns The found element, otherwise `undefined`.\n   *\n   * @private\n   */\n  getRegisteredElement(e) {\n    const s = this.getRegisteredElementIndex(e);\n    if (!(s < 0))\n      return this.registeredElements[s];\n  }\n  /**\n   * The {@link IntersectionObserver} callback function to handle updates to the registered {@link TRegisteredElement}s\n   * {@link HTMLElement}s. Registers or unregisters items based on the given settings and changes their state.\n   *\n   * @param entries Intersection element entries.\n   *\n   * @private\n   */\n  observerHandler(e) {\n    for (const s of e) {\n      const i = s.target, n = this.getRegisteredElement(i);\n      if (n) {\n        if (s.isIntersecting) {\n          this.visibleElements.findIndex((l) => l === n.el) === -1 && this.visibleElements.push(n.el);\n          continue;\n        }\n        this.removeFromVisibleStore(n.el), (n.state.isFilled || n.state.isVisible) && requestAnimationFrame(() => {\n          this.processViewportIntersection(n, {\n            isVisible: !1,\n            isFilled: !1,\n            passedValidityPeriod: !1\n          });\n        });\n      }\n    }\n    this.visibleElements.length > 0 && this.frameTicker.start();\n  }\n  /**\n   * Callback for the {@link FrameTicker} to frequently check the state of all elements which are currently marked as\n   * _in the viewport_.\n   *\n   * @private\n   */\n  checkVisibilityOfElements() {\n    if (this.visibleElements.length === 0)\n      return;\n    const e = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0), s = window.scrollY;\n    for (let i = 0; i < this.visibleElements.length; i++) {\n      const n = this.visibleElements[i], l = this.getRegisteredElement(n);\n      if (!l || !this.settings.triggerUpdates.enabled && l.state.passedValidityPeriod)\n        continue;\n      const { isVisible: a, isFilled: d } = $.percentWithinViewport(n, s, e), c = {\n        isVisible: a >= this.settings.thresholds.visible,\n        isFilled: d >= this.settings.thresholds.filled,\n        passedValidityPeriod: l.state.passedValidityPeriod\n      };\n      this.processViewportIntersection(l, c);\n    }\n  }\n  /**\n   * Get to know how much of the {@link HTMLElement} is visible the viewport.\n   *\n   * @param el The element in the viewport.\n   * @param scrollY The scrollY of the current window.\n   * @param viewportHeight The height of the viewport.\n   *\n   * @returns The % visible of the HTMLElement in the viewport.\n   *\n   * @private\n   */\n  static percentWithinViewport(e, s, i) {\n    const n = { top: s, bottom: s + i }, l = e.getBoundingClientRect(), a = {\n      top: l.y + s,\n      bottom: l.y + l.height + s\n    }, d = l.height;\n    let c = d;\n    a.top < n.top && (c = d - (s - a.top)), a.bottom > n.bottom && (c = c - (a.bottom - n.bottom));\n    let h = c / d, g = c / i;\n    return (n.top > a.bottom || n.bottom < a.top) && (h = 0, g = 0), n.top < a.top && n.bottom > a.bottom && (h = 1), a.top < n.top && a.bottom > n.bottom && (g = 1), {\n      isVisible: h,\n      isFilled: g\n    };\n  }\n  /**\n   * Processes a {@link TRegisteredElement} items intersection. If the element matches the\n   * {@link TViewportTrackerSettings.thresholds `thresholds`}, the {@link IGlobalDataLayer.push} method is called.\n   *\n   * Also dispatches the update event of the {@link TViewportTrackerSettings.triggerUpdates `triggerUpdates`} feature.\n   *\n   * @param registeredElement The registered element to process.\n   * @param isVisible Indicates, if the element is {@link TViewportTrackerSettings.thresholds.visible visible}.\n   * @param isFilled Indicates, if the element is {@link TViewportTrackerSettings.thresholds.filled filled}.\n   *\n   * @private\n   */\n  processViewportIntersection(e, { isVisible: s, isFilled: i }) {\n    const n = e.state || {\n      isVisible: !1,\n      isFilled: !1\n    }, l = Date.now(), a = {\n      isVisible: s,\n      isFilled: i,\n      timeVisible: n.isVisible !== s ? l : n.timeVisible,\n      timeFilled: n.isFilled !== i ? l : n.timeFilled,\n      passedValidityPeriod: n.passedValidityPeriod\n    }, d = (c) => (l - c) / 1e3;\n    if (n.isVisible !== a.isVisible || n.isFilled !== a.isFilled)\n      a.passedValidityPeriod = !1, e.state = a, this.dispatchEvent(e);\n    else if (!a.passedValidityPeriod && (a.isVisible || a.isFilled)) {\n      const c = d(a.timeVisible), h = d(a.timeFilled);\n      (s && c >= this.settings.thresholds.minValidityPeriod || i && h >= this.settings.thresholds.minValidityPeriod) && (a.passedValidityPeriod = !0, e.state = a, this.pushEvent(e), this.dispatchEvent(e));\n    }\n  }\n  /**\n   * Helper function to remove an {@link HTMLElement} from the state of being in the viewport. This will stop the\n   * {@link FrameTicker} checks from being processed for this {@link TRegisteredElement}.\n   *\n   * @param element The HTMLElement to remove.\n   *\n   * @private\n   */\n  removeFromVisibleStore(e) {\n    let s = -1;\n    for (; (s = this.visibleElements.findIndex((i) => i === e)) >= 0; )\n      this.visibleElements.splice(s, 1);\n    this.visibleElements.length === 0 && this.frameTicker.stop();\n  }\n  /**\n   * Will call the {@link IGlobalDataLayer.push} with the given {@link TViewportTrackerSettings.eventName `eventName`},\n   * whenever a {@link TRegisteredElement} matches the given {@link TViewportTrackerSettings.thresholds `thresholds`}.\n   *\n   * @param item The registered {@link HTMLElement} with its {@link TRegisteredElement.properties `properties` payload}.\n   *\n   * @private\n   */\n  pushEvent(e) {\n    if (!this.dataLayerInstance) {\n      this._logger.warn(\"This extension is not registered to a GlobalDataLayer instance.\");\n      return;\n    }\n    const { properties: s } = e, i = typeof s == \"function\" ? s() : s || {};\n    this.dataLayerInstance.push(this.settings.eventName, i);\n  }\n  /**\n   * Dispatches a {@link ViewportTrackerStatusChangeEvent}.\n   *\n   * @param registeredElement The registered {@link HTMLElement} to use as target.\n   *\n   * @private\n   */\n  dispatchEvent(e) {\n    this.settings.triggerUpdates && this.settings.triggerUpdates.enabled && e.el.dispatchEvent(\n      new se(this.settings.triggerUpdates.eventName, e)\n    );\n  }\n}\nconst F = (r) => r.length > 0, O = \"PageNameExtender_unknown_pageName\", I = {\n  initialPageName: O,\n  separator: \"/\"\n};\nclass ae extends L {\n  /**\n   * Constructor of PageNameExtender\n   *\n   * @param options Settings object for this extension.\n   */\n  constructor(e) {\n    super(\"PageNameExtenderExtension\", e == null ? void 0 : e.logger);\n    o(this, \"settings\");\n    /**\n     * Internal page name store. To handle the different levels.\n     */\n    o(this, \"pageName\", []);\n    /**\n     * Internal basic page name length. This is defined in the {@link set} method and used to make sure there is\n     * an option to keep ({@link reduce}) or replace ({@link set}) the basic page name.\n     */\n    o(this, \"basePageNameLength\", 0);\n    this.settings = e ? u(I, e) : I, this.set(this.settings.initialPageName);\n  }\n  /**\n   * Update the complete stored {@link pageName} with a string or an array of strings.\n   *\n   * @param pageName If a simple string is given, it will be separated by the given {@link settings} separator.\n   * @param keepExtensions Keep the parts which were added by {@link extend} method.\n   *\n   * @returns The new {@link pageName} joined with the {@link settings} separator.\n   */\n  set(e, s = !1) {\n    const i = this.basePageNameLength;\n    return typeof e == \"string\" && (e = e.split(this.settings.separator).filter(F)), e.length === 0 ? (this._logger.warn(\"`pageName` must not be empty\"), \"\") : (e[0] === O && this._logger.info(\n      \"No `initialPageName` was provided. Make sure the `pageName` is provided later via the `set` method.\"\n    ), this.basePageNameLength = e.length, s && e.push(...this.pageName.slice(i - 1)), this.pageName = e, this.get());\n  }\n  /**\n   * Get the current {@link pageName}.\n   *\n   * @param basePageNameOnly If you want to ignore the parts which were added by {@link extend}.\n   *\n   * @returns The current {@link pageName} joined with the {@link settings} separator.\n   */\n  get(e = !1) {\n    return (e ? this.pageName.slice(0, this.basePageNameLength) : this.pageName).join(\n      this.settings.separator\n    );\n  }\n  /**\n   * Add (multiple) sub levels to the {@link pageName}.\n   *\n   * @param levels If a simple string is given it will be split by the given {@link settings} separator.\n   *\n   * @returns The new {@link pageName} joined with the given {@link settings} separator.\n   */\n  extend(e) {\n    return Array.isArray(e) && (e = e.join(this.settings.separator)), e = e.split(this.settings.separator).filter(F), e.length === 0 ? this._logger.warn(\"`levels` must not be empty\") : this.pageName.push(...e), this.get();\n  }\n  /**\n   * Remove (multiple) sub levels from the {@link pageName}.\n   *\n   * @param [levelCount='last'] Number of levels that should be removed. You can also use a\n   *   {@link TPageNameExtenderReduceType} to define the \"last\" or \"all\" (except the root).\n   * @param keepBasePageName If the basic page name given by {@link set} should also be reducible. This\n   *   cannot be restored.\n   *\n   * @returns The new {@link pageName} joined with the given {@link settings} separator.\n   */\n  reduce(e = \"last\", s = !0) {\n    let i;\n    return e === \"all\" ? i = this.pageName.length - (s ? this.basePageNameLength : 1) : e === \"last\" ? i = this.pageName.length > (s ? this.basePageNameLength : 1) ? 1 : 0 : (i = e, (this.pageName.length <= e || s && this.pageName.length - this.basePageNameLength < e) && (this._logger.info(\n      `${this.pageName.length - (s ? this.basePageNameLength : 1)} - ${e} must not delete first level or more`\n    ), i = this.pageName.length - (s ? this.basePageNameLength : 1))), this.pageName.splice(i * -1, i), this.basePageNameLength > this.pageName.length && (this.basePageNameLength = this.pageName.length), this.get();\n  }\n  /**\n   * Get a temporary pre-fixed version of the current {@link pageName}.\n   *\n   * @param [prefix=''] The value that should be prepended temporarily.\n   *\n   * @returns The current {@link pageName} joined with the given {@link settings} separator pre-fixed with the given\n   *   string value.\n   */\n  getWithPrefix(e = \"\") {\n    return e + this.get();\n  }\n  /**\n   * Get a temporary post-fixed version of the current {@link pageName}.\n   *\n   * @param [postfix=''] The value that should be appended temporarily.\n   *\n   * @returns The current {@link pageName} joined with the given {@link Settings} separator post-fixed with the given\n   *   string value.\n   */\n  getWithPostfix(e = \"\") {\n    return this.get() + e;\n  }\n}\nclass ie {\n  /**\n   * Create an instance of the GlobalDataLayer library. This constructor has to be overwritten to initialize the needed\n   * factories ({@link _eventNamePayloadFactory} and {@link _webPayloadFactory}).\n   *\n   * @param options All options are merged with the {@link DEFAULT_SETTINGS} of type {@link TSettings}.\n   * @param [dataStore] The array where all the pushes are added to. The default tries to get or generate the\n   *   `window.pagData` array. If this is not possible, it creates an empty array, that is exposed via\n   *   {@link DataLayerStore}.\n   * @param [className] The class name of the library is here, because code can be uglified and/or minified later.\n   *\n   * @protected\n   */\n  constructor(t, e, s = \"GlobalDataLayer\") {\n    /**\n     * The class name of the library. This is needed, because code can be uglified and/or minified later.\n     * @protected\n     */\n    o(this, \"_className\");\n    /**\n     * The merged settings. Also see the options of the {@link constructor} and the {@link DEFAULT_SETTINGS}.\n     * @protected\n     */\n    o(this, \"_settings\");\n    /**\n     * An internal store where all default properties are added to.\n     * @protected\n     */\n    o(this, \"_defaultProperties\");\n    /**\n     * An internal logger, which has to be used for all console logs.\n     * @protected\n     */\n    o(this, \"_logger\");\n    /**\n     * A flag that indicates if the _Web Properties_ feature was already handled.\n     *\n     * @see {@link getWebProperties}\n     *\n     * @protected\n     */\n    o(this, \"_webPropertiesHandled\", !1);\n    /**\n     * the _DataLayer_ store array, that is used to push all the data.\n     *\n     * This can be transferred to the library with the second parameter `dataStore` of the {@link constructor}.\n     *\n     * @protected\n     */\n    o(this, \"_dataLayerStore\");\n    /**\n     * An internal store where all registered extensions are added to.\n     * @protected\n     */\n    o(this, \"_extensions\", /* @__PURE__ */ new Map());\n    const i = u(\n      w,\n      t || {}\n    );\n    this._className = s, this._logger = new b(this._className, i.logging), this._settings = i, e ? this._dataLayerStore = e : typeof window < \"u\" ? (this._dataLayerStore = window.pagData = window.pagData || [], this._logger.info(\"`dataLayerStore` was set to default `window.pagData`\")) : (this._dataLayerStore = [], this._logger.info(\"`dataLayerStore` was set to default `[]`\")), this._defaultProperties = [];\n  }\n  /**\n   * An internal function to set everything up after initialization is done. This has to be called at the end of the\n   * overwritten constructors.\n   * @protected\n   */\n  setup() {\n    this._handleDefaultWebProperties();\n  }\n  /**\n   * The current settings object.\n   * @readonly\n   */\n  get Settings() {\n    return this._settings;\n  }\n  /**\n   * Get the _DataLayer_ store, that is used to push all the data.\n   * @readonly\n   */\n  get DataLayerStore() {\n    return this._dataLayerStore;\n  }\n  /**\n   * Get a registered {@link DataLayerExtension} class instance based of the input type.\n   *\n   * @param TConstructor The class to search for.\n   *\n   * @returns The registered instance of the extension class, `undefined` if not found.\n   */\n  getRegisteredExtension(t) {\n    const e = new t();\n    return this.getRegisteredExtensionByClassName(e.className);\n  }\n  /**\n   * Get a registered {@link DataLayerExtension} class instance based of a classname.\n   *\n   * @param className The name of class instance to compare.\n   *\n   * @returns The registered instance of the extension class, undefined if not found.\n   */\n  getRegisteredExtensionByClassName(t) {\n    return this._extensions.has(t) ? this._extensions.get(t) : void 0;\n  }\n  /**\n   * Get all registered {@link DataLayerExtension}.\n   *\n   * @returns All registered DataLayerExtensions as array.\n   */\n  getRegisteredExtensions() {\n    const t = [];\n    for (const e of this._extensions.values())\n      t.push(e);\n    return t;\n  }\n  /**\n   * Register a new {@link DataLayerExtension} class for this instance.\n   *\n   * @param extension The extension class instance to register.\n   * @param override If there is an existing instance already registered, we override it, otherwise we do nothing.\n   */\n  registerExtension(t, e = !1) {\n    if (!e && this._extensions.has(t.className)) {\n      this._logger.warn(`Tried to register extension class <${t.className}> which already exists.`);\n      return;\n    }\n    t.dataLayerInstance = this, this._extensions.set(t.className, t), e ? this._logger.info(`Overriden registration for extension class <${t.className}>.`) : this._logger.info(`Registered extension class <${t.className}>.`);\n  }\n  /**\n   * Remove a registered {@link DataLayerExtension} instance.\n   *\n   * @param TConstructor The class to search for.\n   */\n  removeExtension(t) {\n    const e = new t();\n    if (this._extensions.has(e.className)) {\n      this._extensions.delete(e.className);\n      return;\n    }\n    this._logger.warn(`Tried to remove not existing extension class <${e.className}>.`);\n  }\n  /**\n   * Remove a registered {@link DataLayerExtension} instance by class name.\n   *\n   * @param className the name of the class\n   */\n  removeExtensionByClassName(t) {\n    if (this._extensions.has(t)) {\n      this._extensions.delete(t);\n      return;\n    }\n    this._logger.warn(`Tried to remove not existing extension class <${t}>.`);\n  }\n  /**\n   * Push a GlobalDataLayer Event with payload to the given data layer store. The method can fail and return `false`\n   *   because ...\n   *\n   *   - the given `eventName` was invalid\n   *   - the validation failed\n   *\n   * A settings object can be added as the third parameter to every call. This will then temporary override the provided\n   * settings for the time of the push action.\n   *\n   * @param eventName The name of the event that should be pushed.\n   * @param [payload] The _DataLayer_ properties to be merged and added to the data layer.\n   * @param [options] Temporary override the settings.\n   *\n   * @returns A boolean to indicate, if the push was successful.\n   */\n  push(t, e = [{}], s) {\n    var d, c;\n    if (t.length === 0)\n      return !1;\n    const i = s && !m(s) ? u(this._settings, s) : this._settings;\n    Array.isArray(e) || (e = [e]), e.forEach(k);\n    const n = this._eventNamePayloadFactory.create({ event: t }), l = k(this.getDefaultProperties(t));\n    i.clean.enabled && i.clean.executionPlace === y.BEFORE_MERGE && [l || {}, ...e].forEach(\n      (h) => P(h, i.clean.values)\n    );\n    const a = u(\n      n,\n      l || {},\n      ...e\n    );\n    if (i.clean.enabled && i.clean.executionPlace === y.AFTER_MERGE && P(a, i.clean.values), (d = i == null ? void 0 : i.validation) != null && d.enabled && ((c = i == null ? void 0 : i.validation) != null && c.eventMatrix)) {\n      const h = te(t, a, i.validation), g = h.issues.sort((f, p) => f.level !== p.level && p.level === \"warn\" ? -1 : 0).map((f) => `- [${f.level}]: ${f.message}`).join(`\n`);\n      switch (h.level) {\n        case \"error\":\n          return this._logger.error(\n            `Validation failed for event '${t}' with errors/warnings: \n${g}`,\n            i.logging\n          ), !1;\n        case \"warn\":\n          this._logger.warn(\n            `Validation success for event '${t}' with warnings: \n${g}`,\n            i.logging\n          );\n          break;\n        default:\n          this._logger.info(`Validation success for event '${t}'.`, i.logging);\n          break;\n      }\n    }\n    return this._dataLayerStore.push(a), !0;\n  }\n  /**\n   * Return the default properties for the given identifier.\n   *\n   * @param identifier The identifier to get the default properties for.\n   *\n   * @returns The found default properties for the identifier, otherwise `undefined`.\n   */\n  getDefaultProperties(t) {\n    const e = {\n      byName: [],\n      byArray: [],\n      byRegex: []\n    };\n    this._defaultProperties.forEach((i) => {\n      if (i.identifier === t)\n        return e.byName.push(i.data);\n      if (Array.isArray(i.identifier) && i.identifier.includes(t))\n        return e.byArray.push(i.data);\n      if (i.identifier instanceof RegExp && i.identifier.test(t))\n        return e.byRegex.push(i.data);\n    });\n    const s = [...e.byRegex, ...e.byArray, ...e.byName];\n    if (s.length)\n      return u(...s);\n  }\n  /**\n   * Set default properties, which will later be merged with the payload of a {@link push}, when the provided identifier\n   * matches the `eventName`.\n   *\n   * @param identifier The identifier to use the default properties for.\n   * @param data The default properties which will be used with the provided identifier to merge those properties with the payload.\n   */\n  setDefaultProperties(t, e) {\n    const s = this._defaultProperties.find((i) => i.identifier === t);\n    if (s) {\n      s.data = u(s.data, e);\n      return;\n    }\n    this._defaultProperties.push({\n      identifier: t,\n      data: e\n    });\n  }\n  /**\n   * Checks if the web properties feature ({@link getWebProperties}) is already handled or does the setup with the\n   * current settings.\n   *\n   * @private\n   */\n  _handleDefaultWebProperties() {\n    if (this._webPropertiesHandled || !this._settings.webProperties.enabled)\n      return;\n    const t = Z(\n      this._settings.webProperties,\n      this._webPayloadFactory\n    );\n    this.setDefaultProperties(this._settings.webProperties.eventNamePattern, t), this._webPropertiesHandled = !0;\n  }\n}\nclass oe extends ie {\n  /**\n   * Create an instance of the GlobalDataLayer library.\n   *\n   * @param options All options are merged with the {@link DEFAULT_SETTINGS} of type {@link TSettings}.\n   * @param [dataStore] The array where all the pushes are added to. The default tries to get or generate the\n   *   `window.pagData` array. If this is not possible, it creates an empty array, that is exposed via\n   *   {@link DataLayerStore}.\n   * @param [className] The class name of the library is here, because code can be uglified and/or minified later.\n   *\n   * @protected\n   */\n  constructor(e, s, i = \"GlobalDataLayer\") {\n    super(e, s, i);\n    o(this, \"_eventNamePayloadFactory\");\n    o(this, \"_webPayloadFactory\");\n    this._eventNamePayloadFactory = new U(), this._webPayloadFactory = new q(), this.setup();\n  }\n  setup() {\n    super.setup();\n  }\n}\nexport {\n  y as CleanExecutionPlace,\n  w as DEFAULT_SETTINGS,\n  L as DataLayerExtension,\n  U as EventNameFactory,\n  H as FrameTicker,\n  oe as GlobalDataLayer,\n  ie as GlobalDataLayerBaseClass,\n  b as Logger,\n  ae as PageNameExtenderExtension,\n  $ as ViewportTrackerExtension,\n  se as ViewportTrackerStatusChangeEvent,\n  q as WebPropertiesFactory,\n  P as clean,\n  G as cleanByDataLayerPaths,\n  _ as each,\n  S as eachFirstLevel,\n  k as executeEachFunction,\n  B as get,\n  C as getDataLayerPaths,\n  Z as getWebProperties,\n  m as isEmpty,\n  ne as isEmptyDataLayer,\n  u as merge,\n  te as validate\n};\n","import { GlobalDataLayer } from '@porsche/globaldatalayer';\nimport { TContextEnvironment, TDataLayer } from '@porsche/globaldatalayer-events/projects/pcom/all/types';\nimport { Environment, Environments } from '../../entities/environment';\nimport { splitLocale } from '../../entities/locale';\nimport { DATA_LAYER_APPLICATION_NAME, DATA_LAYER_APP_ID, EventAction } from '../../utility/constants';\nimport { isString } from '../../utility/helper';\n\nfunction getEnvironmentAbbreviation(env: Environment): TContextEnvironment {\n  switch (env) {\n    case Environments.PRODUCTION:\n      return 'P';\n    case Environments.PREVIEW:\n      return 'PP';\n    default:\n      return 'K';\n  }\n}\n\nclass GlobalDataLayerService {\n  homeNavEventId = /^PAGHomeNav_/;\n  gdl!: GlobalDataLayer<TDataLayer>;\n\n  constructor() {\n    this.initialise();\n  }\n\n  initialise() {\n    this.gdl = new GlobalDataLayer();\n  }\n\n  pushDataLayerEvent(eventAction: EventAction, eventData?: TDataLayer): void {\n    if (eventData) {\n      this.gdl.push(eventAction, eventData);\n    } else {\n      this.gdl.push(eventAction);\n    }\n  }\n\n  setEnvironment(env: Environment) {\n    this.gdl.setDefaultProperties(this.homeNavEventId, {\n      context: { environment: getEnvironmentAbbreviation(env) }\n    });\n  }\n\n  setPageName(pageName?: string) {\n    this.gdl.setDefaultProperties(this.homeNavEventId, {\n      pageExperience: {\n        pageName: pageName\n      }\n    });\n  }\n\n  setUser(userId: string, loginStatus: boolean) {\n    this.gdl.setDefaultProperties(this.homeNavEventId, {\n      ids: { userId },\n      visitor: { loginStatus }\n    });\n  }\n\n  setLocale(locale: string) {\n    try {\n      const { country, language } = splitLocale(locale);\n\n      this.gdl.setDefaultProperties(this.homeNavEventId, {\n        context: { country: country, language: language }\n      });\n    } catch (err) {\n      // throw the error away\n    }\n  }\n\n  setDefaultProperties(locale: string, pageName?: string): void {\n    let defaultGDLProperties: TDataLayer = {\n      context: { applicationId: DATA_LAYER_APP_ID },\n      visitor: { loginStatus: false }\n    };\n\n    try {\n      const { country, language } = splitLocale(locale);\n\n      defaultGDLProperties = {\n        ...defaultGDLProperties,\n        context: { ...defaultGDLProperties.context, country, language, applicationName: DATA_LAYER_APPLICATION_NAME }\n      };\n    } catch (err) {\n      // throw the error away\n    }\n\n    if (isString(pageName)) {\n      defaultGDLProperties = { ...defaultGDLProperties, pageExperience: { pageName: pageName } };\n    }\n\n    this.gdl.setDefaultProperties(this.homeNavEventId, defaultGDLProperties);\n  }\n}\n\nexport default new GlobalDataLayerService();\n","import { breakpoint } from '@porsche-design-system/components-js/styles';\nimport { Component, Element, Fragment, getAssetPath, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { BodyType, Series, TLink } from '../../entities/content';\nimport globalDataLayerService from '../../services/analytics/global-data-layer-service';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { ClickElementTypes, ElementTypes, EventActions } from '../../utility/constants';\nimport { getConfig, getHTMLElement, isString } from '../../utility/helper';\nimport { componentsOnReady } from '../../utility/ready';\nimport { Timeout } from '../../utility/timeout';\nimport analyticsManager from '../../services/analytics/analytics-manager';\n\n@Component({\n  tag: 'phn-car-body-types-drawer',\n  styleUrl: 'car-body-types-drawer.scss',\n  assetsDirs: ['model-assets'],\n  scoped: true\n})\nexport class CarBodyTypeDrawer {\n  @Prop() series!: Series;\n  @Prop() breakpoint!: number;\n  @Prop() activeRoutingKey!: string;\n\n  @State() seriesLoaded = false;\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnCarBodyTypesDrawerElement;\n\n  @Watch('series')\n  seriesWatcher(): void {\n    this.seriesLoaded = false;\n    this.showSkeleton = true;\n  }\n\n  private bodyTypesImagesLoaded = new Set<string>();\n  private bodyTypesImagesNotLoaded = new Set<string>();\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.showSkeleton = !this.seriesLoaded;\n  }\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad();\n  }\n\n  componentDidRender(): void {\n    this.showSkeleton = !this.seriesLoaded;\n  }\n\n  private handleImageLoad(seriesId: string) {\n    this.bodyTypesImagesLoaded.add(seriesId);\n\n    if (this.series.bodyTypes.every(({ id }) => this.bodyTypesImagesLoaded.has(id))) {\n      this.seriesLoaded = true;\n    }\n  }\n\n  private handleImageLoadError(seriesId: string) {\n    this.handleImageLoad(seriesId);\n    this.bodyTypesImagesNotLoaded.add(seriesId);\n  }\n\n  private sendMetaFunctionDataLayerEvent(link: TLink): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.MODEL_CTA_CLICK, {\n      componentClick: {\n        clickElementId: link.id,\n        clickElementName: link.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: link.link\n      },\n      componentDisplay: {\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementType: analyticsManager.calculateDisplayElementType(\n          this.activeRoutingKey,\n          ElementTypes.bodyTypeButton\n        ),\n        displayElementName: link.text\n      },\n      car: {\n        modelRangeName: link.id.split('.')[1]\n      }\n    });\n  }\n\n  private sendBodyTypeClickDataLayerEvent(bodyType: BodyType, tagName: string): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.MODEL_CLICK, {\n      componentClick: {\n        clickElementId: bodyType.id,\n        clickElementName: bodyType.name,\n        clickElementType: tagName === 'IMG' ? ClickElementTypes.Image : ClickElementTypes.Link,\n        targetUrl: bodyType.link\n      },\n      componentDisplay: {\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementType: analyticsManager.calculateDisplayElementType(\n          this.activeRoutingKey,\n          ElementTypes.bodyTypeButton\n        ),\n        displayElementName: bodyType.name\n      },\n      car: {\n        modelRangeName: bodyType.id.split('.')[1],\n        modelName: analyticsManager.getModelName(bodyType)\n      }\n    });\n  }\n\n  private sendNavigationDataLayerEvent(): void {\n    globalDataLayerService.pushDataLayerEvent(EventActions.MODEL_CLICK, {\n      componentClick: {\n        clickElementId: this.series.all.id,\n        clickElementName: this.series.all.text,\n        clickElementType: ClickElementTypes.Link,\n        targetUrl: this.series.all.link\n      },\n      componentDisplay: {\n        displayElementId: analyticsManager.calculateDisplayElementId(),\n        displayElementType: analyticsManager.calculateDisplayElementType(\n          this.activeRoutingKey,\n          ElementTypes.bodyTypeButton\n        ),\n        displayElementName: this.series.all.text\n      }\n    });\n  }\n\n  private getImageSize(currentBreakpoint: number): number {\n    switch (currentBreakpoint) {\n      case breakpoint.xxl:\n        return 1920;\n      case breakpoint.xl:\n      case breakpoint.l:\n        return 1360;\n      case breakpoint.m:\n        return 1024;\n      case breakpoint.s:\n        return 760;\n      case breakpoint.xs:\n      case breakpoint.base:\n      default:\n        return 320;\n    }\n  }\n\n  private getImageSource(image: string): string {\n    const assetPath = getAssetPath(`${getConfig(navStateStore.state.env).ASSETS_URL}/model-assets`);\n    const imageSize = this.getImageSize(this.breakpoint);\n    const imagePath = `${assetPath}/${imageSize}`;\n\n    return `${imagePath}/${image}.webp, ${imagePath}/${image}@2x.webp 2x`;\n  }\n\n  render(): HTMLPhnCarBodyTypesDrawerElement {\n    return (\n      <Host class={`${this.showSkeleton ? 'skeleton' : ''}`}>\n        <Fragment>\n          <ul class=\"links\">\n            {this.series.links.map((link) => (\n              <Fragment>\n                {this.showSkeleton ? <div class=\"skeleton-link\" /> : null}\n                <phn-p-link\n                  key={link.id}\n                  variant=\"tertiary\"\n                  href={link.link}\n                  icon={link.icon}\n                  size=\"inherit\"\n                  class=\"link\"\n                  style={{ display: this.showSkeleton ? 'none' : '' }}\n                  onClick={() => {\n                    this.sendMetaFunctionDataLayerEvent(link);\n                  }}\n                  role=\"listitem\"\n                >\n                  {link.text}\n                </phn-p-link>\n              </Fragment>\n            ))}\n          </ul>\n          <ul>\n            {this.series.bodyTypes.map((bodyType) => {\n              return (\n                <Fragment>\n                  {this.showSkeleton ? (\n                    <Fragment>\n                      <div class=\"skeleton-image\" />\n                    </Fragment>\n                  ) : null}\n                  <div\n                    class=\"series-body-type\"\n                    key={bodyType.id}\n                    style={{ display: this.showSkeleton ? 'none' : '' }}\n                    role=\"listitem\"\n                  >\n                    <phn-p-link-pure\n                      icon=\"none\"\n                      onClick={(e: MouseEvent) => {\n                        const clickedElement = getHTMLElement(e.target);\n                        if (clickedElement !== null) {\n                          this.sendBodyTypeClickDataLayerEvent(bodyType, clickedElement.tagName);\n                        }\n                      }}\n                    >\n                      <a href={bodyType.link}>\n                        {this.bodyTypesImagesNotLoaded.has(bodyType.id) ? (\n                          <Fragment>\n                            <div class=\"skeleton-bodytype\" />\n                          </Fragment>\n                        ) : (\n                          <div class=\"model-link-content\">\n                            <img\n                              srcSet={this.getImageSource(bodyType.image)}\n                              alt={`${bodyType.name} Sideshot`}\n                              onLoad={() => this.handleImageLoad(bodyType.id)}\n                              onError={() => this.handleImageLoadError(bodyType.id)}\n                            />\n\n                            <phn-p-text size=\"inherit\" color=\"inherit\" align=\"center\">\n                              {bodyType.name}\n                            </phn-p-text>\n\n                            {isString(bodyType.description) ? (\n                              <phn-p-text className=\"model-description\" size=\"x-small\" align=\"center\">\n                                {bodyType.description}\n                              </phn-p-text>\n                            ) : null}\n                          </div>\n                        )}\n                      </a>\n                    </phn-p-link-pure>\n                  </div>\n                </Fragment>\n              );\n            })}\n          </ul>\n          {this.showSkeleton ? null : (\n            <phn-p-link\n              variant=\"tertiary\"\n              href={this.series.all.link}\n              size=\"inherit\"\n              class=\"further\"\n              data-test-id=\"car-body-types-drawer-further-links-button\"\n              onClick={() => {\n                this.sendNavigationDataLayerEvent();\n              }}\n            >\n              {this.series.all.text}\n            </phn-p-link>\n          )}\n        </Fragment>\n      </Host>\n    );\n  }\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  phn-p-headline {\n    font-size: p-px-to-rem(28px);\n  }\n\n  .model-link-content {\n    @include hoverZoom();\n    padding-bottom: 5px;\n  }\n\n  .skeleton-bodytype {\n    height: p-px-to-rem(135px);\n    width: p-px-to-rem(260px);\n    margin: p-px-to-rem(24px) 0 0 0 ;\n    background: $pds-theme-light-contrast-low;\n    border-radius: 4px;\n\n    @include pds-media-query-min('xs') {\n      height: p-px-to-rem(110px);\n    }\n\n    @include pds-media-query-min('s') {\n      height: p-px-to-rem(120px);\n      width: p-px-to-rem(260px);\n    }\n  }\n\n  &.skeleton {\n    pointer-events: none;\n    user-select: none;\n    opacity: 60%;\n\n    & .skeleton-headline {\n      width: auto;\n      height: p-px-to-rem(38px);\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n    }\n\n    & .skeleton-link {\n      width: auto;\n      height: p-px-to-rem(48px);\n      margin: p-px-to-rem(16px) 0;\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n    }\n\n    & .skeleton-image {\n      width: auto;\n      height: p-px-to-rem(135px);\n      margin: p-px-to-rem(24px) 0;\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n\n      @include pds-media-query-min('xs') {\n        height: p-px-to-rem(145px);\n      }\n\n      @include pds-media-query-min('s') {\n        height: p-px-to-rem(120px);\n      }\n\n      @include pds-media-query-min('m') {\n        height: p-px-to-rem(137px);\n      }\n\n      @include pds-media-query-min('l') {\n        height: p-px-to-rem(133px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        height: p-px-to-rem(145px);\n      }\n    }\n  }\n\n  .links {\n    .link {\n      width: 100%;\n      padding-top: p-px-to-rem(16px);\n    }\n  }\n\n  .series-body-type {\n    text-align: center;\n    padding: p-px-to-rem(2px);\n    margin-top: p-px-to-rem(2px);\n  }\n\n  .further {\n    width: 100%;\n    padding-top: p-px-to-rem(64px);\n  }\n\n  .car-models {\n    phn-p-text {\n      font-size: p-px-to-rem(16px);\n\n      @include pds-media-query-min('xs') {\n        font-size: p-px-to-rem(18px);\n      }\n\n      @include pds-media-query-min('s') {\n        font-size: p-px-to-rem(16px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        font-size: p-px-to-rem(18px);\n      }\n    }\n  }\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n\n  &.skeleton {\n    pointer-events: none;\n    user-select: none;\n\n    & .skeleton-headline {\n      width: auto;\n      height: p-px-to-rem(50px);\n      background: $pds-theme-light-contrast-low;\n      margin-bottom: p-px-to-rem(28px);\n      border-radius: 4px;\n    }\n  }\n\n  phn-headline {\n    margin-bottom: p-px-to-rem(36px);\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport { Component, Element, h, Host, Listen, Prop, State } from '@stencil/core';\nimport { Dealer } from '../../entities/content';\nimport { showDealerSearchDropdown } from '../../utility/helpers/dealer-search-helper';\nimport { splitLocale } from '../../entities/locale';\nimport { navContentStore } from '../../state/nav-content-store';\n\ntype DealerSearchFormStrategy = 'geolocation' | 'dropdown' | 'byNumberOfDealers';\n\n@Component({\n  tag: 'phn-dealer-search-form',\n  styleUrl: 'dealer-search-form.scss',\n  scoped: true,\n  assetsDirs: ['./assets']\n})\nexport class DealerSearchForm {\n  @Prop() dealer!: Dealer;\n  @Prop() locale!: string;\n  @Prop() showHeadline = true;\n  @Prop() breakpoint!: number;\n\n  @State() showOverlay = false;\n  @State() formErrorMessage: string | null = null;\n  @State() showSkeleton = true;\n\n  @Listen('predictionsToggle')\n  toggleOverlay(e: CustomEvent<boolean>): void {\n    this.showOverlay = e.detail;\n  }\n\n  @State() animateResults = false;\n\n  @Element() el!: HTMLPhnDealerSearchFormElement;\n\n  @Listen('removeSkeletonOnDealerSearchForm')\n  loadedAutoCompleteListener(_event: Event): void {\n    this.showSkeleton = false;\n  }\n\n  private getDealerFormStrategy(): DealerSearchFormStrategy {\n    const { dealer } = navContentStore.state;\n    if (dealer.numberOfDealers <= 5) {\n      return 'byNumberOfDealers';\n    }\n\n    if (showDealerSearchDropdown(splitLocale(this.locale).country)) return 'dropdown';\n\n    return 'geolocation';\n  }\n\n  private formComponent(): HTMLElement {\n    const dealerSearchFormStrategies: Record<DealerSearchFormStrategy, () => HTMLElement> = {\n      geolocation: () => <phn-dealer-search-form-geolocation locale={this.locale} />,\n      dropdown: () => <phn-dealer-search-form-dropdown locale={this.locale} breakpoint={this.breakpoint} />,\n      byNumberOfDealers: () => <phn-dealer-search-by-number-of-dealers locale={this.locale} />\n    };\n\n    const formStrategy = this.getDealerFormStrategy();\n    return dealerSearchFormStrategies[formStrategy]();\n  }\n\n  render(): HTMLPhnDealerSearchFormElement {\n    return (\n      <Host class={this.showSkeleton ? 'skeleton' : ''}>\n        {this.formComponent()}\n\n        <phn-dealer-search-results locale={this.locale} breakpoint={this.breakpoint} showOverlay={this.showOverlay} />\n      </Host>\n    );\n  }\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n\n  phn-menu-item {\n    margin-top: p-px-to-rem(36px);\n\n    &:first-of-type {\n      margin-top: 0;\n    }\n  }\n}\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { getLevel1Items } from '../../services/menu-items-service';\nimport { dealerSearchResultsStore } from '../../state/dealer-search-results-store';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { MenuItemVariant } from '../../utility/constants';\nimport { isDesktop } from '../../utility/helper';\nimport { isShopAvailable } from '../../utility/helpers/shop-helper';\n\n@Component({\n  tag: 'phn-level-1',\n  styleUrl: 'level-1.scss',\n  scoped: true\n})\nexport class Level1 {\n  @Prop() locale!: string;\n\n  @Prop() breakpoint!: number;\n\n  @Event({ bubbles: true }) mobileMenuItemClick!: EventEmitter<string[]>;\n\n  private showRightIconRight(iconRight: string | undefined): string | undefined {\n    const { app } = navStateStore.state;\n    const isOneUiMobileShop = isShopAvailable(this.locale, app) && !isDesktop(this.breakpoint);\n\n    if (iconRight !== undefined && isOneUiMobileShop) {\n      iconRight = 'arrow-head-right';\n    }\n    return iconRight;\n  }\n\n  render(): HTMLPhnLevel1Element {\n    const { loggedInState, unreadMessagesCount, userConsent } = navStateStore.state;\n    const level1Items = getLevel1Items(\n      navContentStore.state,\n      dealerSearchResultsStore.state,\n      this.locale,\n      loggedInState,\n      unreadMessagesCount,\n      userConsent\n    );\n\n    return (\n      <nav>\n        {level1Items.map(({ routingKeys, elementId, iconRight, showIconModifier, ...level1Item }) => (\n          <phn-menu-item\n            key={elementId}\n            elementId={elementId}\n            onClick={() => {\n              if (level1Item.link === undefined) {\n                this.mobileMenuItemClick.emit(routingKeys);\n              }\n            }}\n            iconRight={iconRight !== undefined ? this.showRightIconRight(iconRight) : 'arrow-head-right'}\n            variant={MenuItemVariant.Level1}\n            {...level1Item}\n          >\n            {showIconModifier ? (\n              <span\n                slot=\"icon-modifier\"\n                aria-hidden=\"true\"\n                class=\"myporsche-unread-messages-indicator\"\n                data-test-id=\"unread-messages-indicator\"\n              />\n            ) : null}\n          </phn-menu-item>\n        ))}\n      </nav>\n    );\n  }\n}\n","import { h, JSX } from '@stencil/core';\n\nexport default function MenuItemCountIndicator({ count }: { count: number }): JSX.Element | null {\n  if (count <= 0) return null;\n\n  return (\n    <phn-p-tag slot=\"suffix\" class=\"menu-item-count\" color=\"notification-info-soft\">\n      {count}\n    </phn-p-tag>\n  );\n}\n","import { Fragment, JSX, h } from '@stencil/core';\nimport { getVehiclePurchaseRoutingKey } from '../../../entities/routing-key';\nimport { TLink } from '../../../components';\nimport { EventActions } from '../../../utility/constants';\nimport MenuItemCountIndicator from './menu-item-count-indicator';\n\nexport default function MenuItemLink({\n  content,\n  count,\n  showSkeleton\n}: {\n  content: TLink | null;\n  count: number;\n  showSkeleton: boolean;\n}): JSX.Element | null {\n  return content ? (\n    <Fragment>\n      <phn-menu-item\n        elementId={getVehiclePurchaseRoutingKey(content.id)}\n        key={content.id}\n        class={`${showSkeleton ? 'skeleton' : 'vehiclepurchase-link'}`}\n        analyticsId={content.id}\n        text={content.text}\n        link={content.link}\n        datalayerEventAction={EventActions.NAVIGATION_LINK_CLICK}\n        role=\"listitem\"\n      >\n        <MenuItemCountIndicator count={count} />\n      </phn-menu-item>\n    </Fragment>\n  ) : null;\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n\n  .skeleton {\n    width: auto;\n    height: p-px-to-rem(24px);\n    background: $pds-theme-light-contrast-low;\n    border-radius: 4px;\n  }\n\n  .skeleton-headline {\n    width: auto;\n    height: p-px-to-rem(50px);\n    background: $pds-theme-light-contrast-low;\n    border-radius: 4px;\n  }\n\n  ul {\n    padding: 0;\n    margin: 0;\n  }\n\n  phn-headline {\n    margin-bottom: p-px-to-rem(36px);\n  }\n\n  phn-menu-item {\n    margin-top: p-px-to-rem(24px);\n\n    @include pds-media-query-min('xs') {\n      margin-top: p-px-to-rem(20px);\n\n      &:first-of-type {\n        margin: 0;\n      }\n    }\n\n    @include pds-media-query-min('l') {\n      margin-top: p-px-to-rem(32px);\n    }\n\n    .vehiclepurchase-link {\n      margin-top: p-px-to-rem(24px);\n\n      @include pds-media-query-min('xs') {\n        margin-top: p-px-to-rem(20px);\n      }\n\n      @include pds-media-query-min('l') {\n        margin-top: p-px-to-rem(30px);\n      }\n\n      .menu-item-count {\n        margin-left: p-px-to-rem(16px);\n      }\n    }\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Host, JSX, Prop, State } from '@stencil/core';\nimport { TLink, TMenu, TVehiclePurchaseMenu } from '../../entities/content';\nimport { constructRoutingKey } from '../../entities/routing-key';\nimport { EventActions } from '../../utility/constants';\nimport { isString } from '../../utility/helper';\nimport { componentsOnReady } from '../../utility/ready';\nimport { Timeout } from '../../utility/timeout';\nimport { finderStateStore } from '../../state/finder-state-store';\nimport MenuItemLink from './saved-vehicles/menu-item-link';\n\n@Component({\n  tag: 'phn-menu',\n  styleUrl: 'menu.scss',\n  scoped: true\n})\nexport class Menu {\n  @Prop() routingKey!: string;\n  @Prop() item!: TMenu | TVehiclePurchaseMenu;\n  @Prop() showHeadline = true;\n  @Prop() receivedContent = false;\n\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnMenuElement;\n\n  @Event({ bubbles: true, cancelable: false }) mobileMenuItemClick!: EventEmitter<string[]>;\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad();\n  }\n\n  private savedVehiclesPosition = 3;\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.showSkeleton = !this.receivedContent;\n  }\n\n  private showMenu(childItem: TMenu): void {\n    if (!isString(childItem.link)) {\n      this.mobileMenuItemClick.emit([constructRoutingKey(this.routingKey, childItem.id)]);\n    }\n  }\n\n  private getSavedVehiclesContent(content: TMenu | TVehiclePurchaseMenu): TLink | null {\n    const savedVehicles = (content as TVehiclePurchaseMenu).savedVehicles;\n    if (savedVehicles !== undefined) {\n      return savedVehicles;\n    }\n    return null;\n  }\n\n  render(): JSX.Element {\n    const displayedItem = this.item.children.length === 1 ? this.item.children[0] : this.item;\n    const savedVehicles = this.getSavedVehiclesContent(this.item);\n    const { savedVehiclesCount } = finderStateStore.state;\n\n    const menuItems = displayedItem.children.map((childItem) => (\n      <phn-menu-item\n        key={childItem.id}\n        class={`${this.showSkeleton ? 'skeleton' : ''}`}\n        elementId={constructRoutingKey(this.routingKey, childItem.id)}\n        iconRight={childItem.children.length > 0 && !this.showSkeleton ? 'arrow-head-right' : ''}\n        analyticsId={childItem.id}\n        text={childItem.text}\n        link={childItem.link}\n        datalayerEventAction={\n          isString(childItem.link) ? EventActions.NAVIGATION_LINK_CLICK : EventActions.NAVIGATION_CLICK\n        }\n        onClick={() => this.showMenu(childItem)}\n        role=\"listitem\"\n      />\n    ));\n\n    return (\n      <Host role=\"list\">\n        <ul>\n          {menuItems}\n\n          {savedVehicles\n            ? menuItems.splice(\n                this.savedVehiclesPosition,\n                0,\n                <MenuItemLink content={savedVehicles} count={savedVehiclesCount} showSkeleton={this.showSkeleton} />\n              )\n            : null}\n        </ul>\n      </Host>\n    );\n  }\n}\n","@import '../../scss';\n\n:host {\n  display: block;\n\n  @include pds-media-query-min('s') {\n    margin-top: p-px-to-rem(-28px);\n  }\n\n  @include pds-media-query-min('xl') {\n    margin-top: p-px-to-rem(-36px);\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  .skeleton-headline {\n    width: auto;\n    height: p-px-to-rem(50px);\n    background: $pds-theme-light-contrast-low;\n    border-radius: 4px;\n  }\n\n  .series {\n    justify-content: center;\n\n    margin: 0 0 p-px-to-rem(8px) 0;\n\n    @include pds-media-query-min('s') {\n      margin: 0 0 p-px-to-rem(8px) 0;\n    }\n\n    @include pds-media-query-min('m') {\n      margin: 0 0 p-px-to-rem(4px) 0;\n    }\n\n    @include pds-media-query-min('xl') {\n      margin: 0 0 p-px-to-rem(8px)  0;\n    }\n\n    .image {\n      @include hoverZoom();\n\n      @include pds-media-query-min('base') {\n        width: p-px-to-rem(174px);\n      }\n\n      @include pds-media-query-min('xs') {\n        width: p-px-to-rem(239px);\n      }\n\n      @include pds-media-query-min('s') {\n        width: p-px-to-rem(174px);\n      }\n\n      @include pds-media-query-min('l') {\n        width: p-px-to-rem(196px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        width: p-px-to-rem(239px);\n      }\n    }\n\n    &.skeleton {\n      margin: 0 0 p-px-to-rem(8px) 0;\n\n      @include pds-media-query-min('xs') {\n        margin: 0 0 p-px-to-rem(16px);\n      }\n\n      @include pds-media-query-min('xxl') {\n        margin: 0 0 p-px-to-rem(24px) 0;\n      }\n    }\n  }\n}\n","import { Component, Element, Event, EventEmitter, getAssetPath, h, Host, JSX, Prop, State } from '@stencil/core';\nimport { Series } from '../../entities/content';\nimport { getModelsRoutingKey } from '../../entities/routing-key';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { EventActions, MenuItemVariant } from '../../utility/constants';\nimport { getConfig, getImageSize } from '../../utility/helper';\n\n@Component({\n  tag: 'phn-models',\n  styleUrl: 'models.scss',\n  assetsDirs: ['series-assets'],\n  scoped: true\n})\nexport class Models {\n  @Prop() breakpoint!: number;\n  @Prop() showHeadline = false;\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnModelsElement;\n\n  private seriesImagesLoaded = new Set<string>();\n  private seriesImagesNotLoaded = new Set<string>();\n\n  @Event({ bubbles: true }) mobileMenuItemClick!: EventEmitter<string[]>;\n\n  private showMenuWithModels(series: Series): void {\n    const modelsSeriesRoutingKey = getModelsRoutingKey(series.id);\n    this.mobileMenuItemClick.emit([modelsSeriesRoutingKey]);\n  }\n\n  private handleImageLoad(seriesId: string) {\n    const { models } = navContentStore.state;\n\n    this.seriesImagesLoaded.add(seriesId);\n\n    if (models.series.every(({ id }) => this.seriesImagesLoaded.has(id))) {\n      this.showSkeleton = false;\n    }\n  }\n\n  private handleImageLoadError(seriesId: string) {\n    this.handleImageLoad(seriesId);\n    this.seriesImagesNotLoaded.add(seriesId);\n  }\n\n  private getImageSource(image: string): string {\n    const assetPath = getAssetPath(`${getConfig(navStateStore.state.env).ASSETS_URL}/series-assets`);\n    const imageSize = getImageSize(this.breakpoint);\n    const imagePath = `${assetPath}/${imageSize}`;\n\n    return `${imagePath}/${image}.webp, ${imagePath}/${image}@2x.webp 2x`;\n  }\n\n  render(): JSX.Element {\n    const { models } = navContentStore.state;\n\n    return (\n      <Host>\n        <ul>\n          {models.series.map((modelsSeries) => (\n            <phn-menu-item\n              key={modelsSeries.id}\n              class={`series ${this.seriesImagesNotLoaded.has(modelsSeries.id) || this.showSkeleton ? 'skeleton' : ''}`}\n              elementId={getModelsRoutingKey(modelsSeries.id)}\n              analyticsId={modelsSeries.id}\n              text={modelsSeries.name}\n              subtext={modelsSeries.tags.map((tag) => tag.text).join(' | ')}\n              onClick={() => this.showMenuWithModels(modelsSeries)}\n              variant={MenuItemVariant.Model}\n              isModels={true}\n              datalayerEventAction={EventActions.MODEL_RANGE_CLICK}\n              role=\"listitem\"\n            >\n              <img\n                slot=\"media\"\n                class=\"image\"\n                srcSet={this.getImageSource(modelsSeries.image)}\n                alt={`${modelsSeries.name} Frontshot`}\n                onLoad={() => this.handleImageLoad(modelsSeries.id)}\n                onError={() => this.handleImageLoadError(modelsSeries.id)}\n              />\n            </phn-menu-item>\n          ))}\n        </ul>\n      </Host>\n    );\n  }\n}\n","import { h, JSX } from '@stencil/core';\nimport { MyPorsche, TLink } from '../../entities/content';\nimport { getMyPorscheRoutingKey } from '../../entities/routing-key';\nimport featureToggles from '../../services/feature-toggles';\nimport { EventActions } from '../../utility/constants';\nimport { IsLoggedIn } from '../../utility/helper';\nimport { finderStateStore } from '../../state/finder-state-store';\nimport { navStateStore } from '../../state/nav-state-store';\n\nexport default function Links({\n  content,\n  onLogoutClick,\n  showSkeleton\n}: {\n  content: MyPorsche;\n  showSkeleton: boolean;\n  onLogoutClick: () => void;\n}): JSX.Element {\n  const messagesPosition = 1,\n    savedSearchesPosition = 2,\n    savedVehiclesPosition = 3;\n  const { loggedInState, unreadMessagesCount } = navStateStore.state;\n  const isLoggedIn = IsLoggedIn(loggedInState);\n  const { links, messages, savedSearches, savedVehicles } = content;\n  const { savedSearchesCount, savedVehiclesCount } = finderStateStore.state;\n\n  const convertedLinks = links.map<JSX.Element>((link) => (\n    <div class=\"myporsche-link-item\" key={link.id}>\n      <phn-menu-item\n        elementId={getMyPorscheRoutingKey(link.id)}\n        class={`${showSkeleton ? 'skeleton' : ''}`}\n        analyticsId={link.id}\n        text={link.text}\n        link={link.link}\n        datalayerEventAction={EventActions.NAVIGATION_LINK_CLICK}\n      />\n    </div>\n  ));\n\n  convertedLinks.splice(\n    messagesPosition,\n    0,\n    <MenuItemCountLink content={messages} count={unreadMessagesCount} showSkeleton={showSkeleton} />\n  );\n\n  if (savedSearches && savedSearches.text !== '' && featureToggles.isSavedItemsToggleActive()) {\n    convertedLinks.splice(\n      savedSearchesPosition,\n      0,\n      <MenuItemCountLink content={savedSearches} count={savedSearchesCount} showSkeleton={showSkeleton} />\n    );\n  }\n  if (savedVehicles && savedVehicles.text !== '' && featureToggles.isSavedItemsToggleActive()) {\n    convertedLinks.splice(\n      savedVehiclesPosition,\n      0,\n      <MenuItemCountLink content={savedVehicles} count={savedVehiclesCount} showSkeleton={showSkeleton} />\n    );\n  }\n\n  if (isLoggedIn) {\n    convertedLinks.push(<LogoutLink content={content} onLogoutClick={onLogoutClick} showSkeleton={showSkeleton} />);\n  }\n  return (\n    <div class=\"myporsche-links\">\n      {showSkeleton ? (\n        <div class=\"skeleton-menu\">\n          {convertedLinks.map(() => (\n            <div class=\"skeleton-menu-item\" />\n          ))}\n        </div>\n      ) : null}\n      <div style={{ display: showSkeleton ? 'none' : '', width: '100%' }}>\n        <div class={`${isLoggedIn ? 'logged-in' : ''} myporsche-links-container`}>{convertedLinks}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction MenuItemCountLink({\n  content,\n  count,\n  showSkeleton\n}: {\n  content: TLink | null;\n  count: number;\n  showSkeleton: boolean;\n}): JSX.Element | null {\n  return content ? (\n    <div class=\"myporsche-link-item\" key={content.id}>\n      <phn-menu-item\n        elementId={getMyPorscheRoutingKey(content.id)}\n        class={`${showSkeleton ? 'skeleton' : ''}`}\n        analyticsId={content.id}\n        text={content.text}\n        link={content.link}\n        datalayerEventAction={EventActions.NAVIGATION_LINK_CLICK}\n      >\n        <MenuItemCountIndicator count={count} />\n      </phn-menu-item>\n    </div>\n  ) : null;\n}\n\nfunction LogoutLink({\n  content,\n  onLogoutClick,\n  showSkeleton\n}: {\n  content: MyPorsche;\n  showSkeleton: boolean;\n  onLogoutClick: () => void;\n}): JSX.Element {\n  const { logout } = content;\n\n  return (\n    <div class=\"myporsche-link-item\" key={logout.id}>\n      <phn-menu-item\n        elementId={getMyPorscheRoutingKey(logout.id)}\n        class={`myporsche-menu-item logout${showSkeleton ? 'skeleton' : ''}`}\n        analyticsId={logout.id}\n        text={logout.text}\n        onClick={onLogoutClick}\n        datalayerEventAction={EventActions.NAVIGATION_LINK_CLICK}\n      />\n    </div>\n  );\n}\n\nfunction MenuItemCountIndicator({ count }: { count: number }): JSX.Element | null {\n  if (count <= 0) return null;\n\n  return (\n    <phn-p-tag slot=\"suffix\" class=\"menu-item-count\" color=\"notification-info-soft\">\n      {count}\n    </phn-p-tag>\n  );\n}\n","import { Fragment, h, JSX } from '@stencil/core';\nimport { MyPorsche } from '../../entities/content';\nimport { IsLoggedIn } from '../../utility/helper';\nimport { navStateStore } from '../../state/nav-state-store';\n\nexport default function Login({\n  content,\n  showSkeleton\n}: {\n  content: MyPorsche;\n  showSkeleton: boolean;\n}): JSX.Element | null {\n  const { login, more, signup, signupText } = content;\n  const { loggedInState } = navStateStore.state;\n  const isLoggedIn = IsLoggedIn(loggedInState);\n\n  if (isLoggedIn) {\n    return null;\n  }\n  return (\n    <div class=\"myporsche-login\">\n      {showSkeleton ? (\n        <Fragment>\n          <div class=\"skeleton-login-container\">\n            <div class=\"skeleton-login\" />\n            <div class=\"skeleton-more\" />\n          </div>\n\n          <div class=\"skeleton-signup-container\">\n            <div class=\"skeleton-signup\">{content.signupText}</div>\n          </div>\n        </Fragment>\n      ) : null}\n      <phn-myporsche-login\n        login={login}\n        more={more}\n        signup={signup}\n        signupText={signupText}\n        style={{ display: showSkeleton ? 'none' : '' }}\n      />\n    </div>\n  );\n}\n","@import '../../scss';\n\n@mixin set-skeleton {\n  &.skeleton {\n    pointer-events: none;\n    user-select: none;\n\n    & .skeleton-headline {\n      width: 100%;\n      height: p-px-to-rem(40px);\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n      font-size: p-px-to-rem(28px);\n      line-height: p-px-to-rem(40px);\n      margin-bottom: p-px-to-rem(8px);\n\n      @include pds-media-query-min('s') {\n        margin-bottom: 0;\n        font-size: p-px-to-rem(30px);\n        line-height: p-px-to-rem(40px);\n      }\n\n      @include pds-media-query-min('m') {\n        font-size: p-px-to-rem(28px);\n        line-height: p-px-to-rem(40px);\n      }\n\n      @include pds-media-query-min('l') {\n        @include pds-heading-medium;\n      }\n    }\n\n    & .skeleton-login-container {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n      flex-direction: column;\n      border-radius: 4px;\n\n      @include pds-media-query-min('xs') {\n        flex-direction: row;\n      }\n\n      @include pds-media-query-min('s') {\n        flex-direction: column;\n      }\n\n      @include pds-media-query-min('xxl') {\n        flex-direction: row;\n      }\n\n      .skeleton-login {\n        height: p-px-to-rem(48px);\n        width: 100%;\n        margin: p-px-to-rem(36px) 0 p-px-to-rem(16px) 0;\n        border-radius: 4px;\n        background: $pds-theme-light-contrast-low;\n\n        @include pds-media-query-min('xs') {\n          margin: p-px-to-rem(36px) p-px-to-rem(8px) p-px-to-rem(16px) 0;\n        }\n\n        @include pds-media-query-min('s') {\n          margin: 0 p-px-to-rem(16px) p-px-to-rem(16px) 0;\n        }\n\n        @include pds-media-query-min('xl') {\n          margin: 0 p-px-to-rem(16px) p-px-to-rem(23px) 0;\n        }\n      }\n\n      .skeleton-more {\n        height: p-px-to-rem(48px);\n        margin: 0 0 p-px-to-rem(16px) 0;\n        width: 100%;\n        background: $pds-theme-light-contrast-low;\n        border-radius: 4px;\n\n        @include pds-media-query-min('xs') {\n          margin: p-px-to-rem(36px) 0 p-px-to-rem(16px) p-px-to-rem(8px);\n        }\n\n        @include pds-media-query-min('s') {\n          margin: 0 0 p-px-to-rem(23px) 0;\n        }\n\n        @include pds-media-query-min('xl') {\n          margin: 0 p-px-to-rem(16px) p-px-to-rem(23px) 0;\n        }\n      }\n    }\n\n    & .skeleton-signup-container {\n      padding-bottom: p-px-to-rem(24px);\n      border-radius: 4px;\n    }\n\n    & .skeleton-signup {\n      color: transparent;\n      background: $pds-theme-light-contrast-low;\n      border-radius: 4px;\n    }\n\n    & .skeleton-menu {\n      width: 100%;\n      height: p-px-to-rem(48px);\n      border-radius: 4px;\n    }\n\n    & .skeleton-menu-item {\n      width: 100%;\n      height: p-px-to-rem(24px);\n      background: $pds-theme-light-contrast-low;\n      margin-top: p-px-to-rem(24px);\n      border-radius: 4px;\n    }\n\n    & .skeleton-menu-item:first-of-type {\n      margin-top: p-px-to-rem(12px);\n    }\n  }\n}\n\n:host {\n  display: block;\n  margin-top: 0;\n\n  @include set-skeleton;\n\n  .myporsche-links {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    .myporsche-links-container {\n      &.logged-in > .myporsche-link-item:first-child > phn-menu-item {\n        padding-top: 0;\n      }\n\n      .myporsche-link-item > phn-menu-item {\n        padding: p-px-to-rem(10px) 0 p-px-to-rem(10px) 0;\n\n        @include pds-media-query-min('xxl') {\n          padding: p-px-to-rem(16px) 0 p-px-to-rem(16px) 0;\n        }\n      }\n    }\n\n    .menu-item-count {\n      margin-left: p-px-to-rem(16px);\n    }\n  }\n\n  .headline-container {\n    border-bottom: 2px solid $pds-theme-dark-background-base;\n\n    @include pds-media-query-min('xs') {\n      padding-bottom: p-px-to-rem(2px);\n      display: flex;\n      align-items: center;\n    }\n\n    @include pds-media-query-min('s') {\n      padding-bottom: p-px-to-rem(16px);\n    }\n\n    @include pds-media-query-min('xxl') {\n      padding-bottom: p-px-to-rem(24px);\n    }\n\n    .myporsche-headline {\n      font-size: p-px-to-rem(28px);\n      line-height: p-px-to-rem(40px);\n      padding-bottom: p-px-to-rem(8px);\n\n      @include pds-media-query-min('s') {\n        padding-bottom: 0;\n        font-size: p-px-to-rem(30px);\n        line-height: p-px-to-rem(40px);\n      }\n\n      @include pds-media-query-min('m') {\n        font-size: p-px-to-rem(28px);\n        line-height: p-px-to-rem(40px);\n      }\n\n      @include pds-media-query-min('l') {\n        @include pds-heading-medium;\n      }\n    }\n\n    .headline-divider {\n      padding: 0 p-px-to-rem(18px) 0 p-px-to-rem(16px);\n      height: p-px-to-rem(32px);\n    }\n\n    .user-container {\n      padding-bottom: p-px-to-rem(17px);\n      display: inline-flex;\n      align-items: center;\n\n      @include pds-media-query-min('xs') {\n        padding-bottom: 0;\n      }\n\n      phn-p-icon {\n        padding-right: p-px-to-rem(7px);\n        width: p-px-to-rem(20px);\n        height: p-px-to-rem(20px);\n      }\n\n      phn-p-text {\n        font-size: p-px-to-rem(12px);\n\n        @include pds-media-query-min('xs') {\n          padding: 0;\n        }\n      }\n    }\n  }\n\n  phn-p-divider {\n    display: block;\n    height: 100%;\n    align-self: center;\n    padding: 0 p-px-to-rem(119px);\n\n    @include pds-media-query-min('xl') {\n      padding: 0 p-px-to-rem(150px);\n    }\n  }\n\n}\n","import { Component, Element, Event, EventEmitter, h, Host, JSX, State } from '@stencil/core';\nimport { componentsOnReady } from '../../utility/ready';\nimport { Timeout } from '../../utility/timeout';\nimport Links from './myporsche-drawer-links';\nimport Login from './myporsche-drawer-login';\nimport { navContentStore } from '../../state/nav-content-store';\n\n@Component({\n  tag: 'phn-myporsche-drawer',\n  styleUrl: 'myporsche-drawer.scss',\n  scoped: true\n})\nexport class MyPorscheDrawer {\n  @State() showSkeleton = true;\n\n  @Element() el!: HTMLPhnMyporscheDrawerElement;\n\n  @Event() logoutEvent!: EventEmitter<void>;\n\n  private async waitForComponentsToLoad() {\n    await componentsOnReady(this.el, new Timeout(5000));\n    this.showSkeleton = false;\n  }\n\n  componentWillLoad(): void {\n    this.waitForComponentsToLoad();\n  }\n\n  render(): JSX.Element | null {\n    const { myPorsche } = navContentStore.state;\n\n    if (!myPorsche) return null;\n\n    return (\n      <Host class={this.showSkeleton ? 'skeleton' : ''}>\n        <div class=\"phn-flex-col phn-justify-around\">\n          <Login content={myPorsche} showSkeleton={this.showSkeleton} />\n          <Links content={myPorsche} onLogoutClick={() => this.logoutEvent.emit()} showSkeleton={this.showSkeleton} />\n        </div>\n      </Host>\n    );\n  }\n}\n","export function replaceVariables(template: string, data: Record<string, string | number>): string {\n  const regex = /{(.*?)}/g;\n  return (\n    template?.replace(regex, (_match: string, variable: string): string => {\n      const value = data[variable.trim()];\n      return value !== undefined ? String(value) : '';\n    }) || ''\n  );\n}\n","import { getMenuContent } from '../../../services/menu-items-service';\nimport { navContentStore } from '../../../state/nav-content-store';\nimport { EventEmitter, Fragment, h } from '@stencil/core';\nimport { constructRoutingKey, RoutingKeys } from '../../../entities/routing-key';\nimport { isDesktop, IsLoggedIn, isString } from '../../../utility/helper';\nimport { EventActions } from '../../../utility/constants';\nimport { TShopAuthStatus, TShopMenu } from '../../../entities/content';\nimport { navStateStore } from '../../../state/nav-state-store';\nimport {\n  filterWishlistItemsByAuthStatus,\n  getAvailableShopVariables,\n  getIconNameByMenuItemId\n} from '../../../utility/helpers/shop-helper';\nimport { replaceVariables } from '../../../utility/helpers/string-helper';\n\ntype ShopSectionTypes = {\n  activeRoutingKey: string;\n  breakpoint: number;\n  receivedContent: boolean;\n  loginEvent: EventEmitter<void>;\n};\n\nexport default function ShopSection({\n  activeRoutingKey,\n  breakpoint,\n  receivedContent,\n  loginEvent\n}: ShopSectionTypes): HTMLElement {\n  const showHeadline = !isDesktop(breakpoint);\n  const displayedContent = getMenuContent(navContentStore.state, activeRoutingKey, RoutingKeys.SHOP) as TShopMenu;\n\n  if (displayedContent === null) {\n    return <div></div>;\n  }\n\n  const wishListAuthStatusList: TShopAuthStatus[] = IsLoggedIn(navStateStore.state.loggedInState)\n    ? ['loggedIn', null]\n    : ['loggedOut', null];\n\n  const wishListItems = filterWishlistItemsByAuthStatus(displayedContent.additionalContent, wishListAuthStatusList);\n\n  function emitLogin(id: string) {\n    if (id === 'login') loginEvent.emit();\n  }\n\n  return (\n    <Fragment>\n      <phn-menu\n        item={displayedContent}\n        routingKey={activeRoutingKey}\n        showHeadline={showHeadline}\n        receivedContent={receivedContent}\n      />\n      {activeRoutingKey === RoutingKeys.SHOP ? (\n        <div class=\"wishlist-container\" role=\"list\">\n          {wishListItems.map((childItem) => {\n            return (\n              <phn-menu-item\n                key={childItem.id}\n                data-id={childItem.id}\n                size={'x-small'}\n                class={!(isString(childItem.iconUrl) || isString(childItem.icon)) ? 'no-icon' : ''}\n                iconLeft={\n                  (isString(childItem.id) && getIconNameByMenuItemId(childItem.id)) ||\n                  childItem.icon ||\n                  childItem.iconUrl\n                }\n                elementId={constructRoutingKey(activeRoutingKey, childItem.id)}\n                analyticsId={childItem.id}\n                text={replaceVariables(childItem.text, getAvailableShopVariables())}\n                link={childItem.link}\n                datalayerEventAction={\n                  isString(childItem.link) ? EventActions.NAVIGATION_LINK_CLICK : EventActions.NAVIGATION_CLICK\n                }\n                onClick={() => {\n                  emitLogin(childItem.id);\n                }}\n                role=\"listitem\"\n              />\n            );\n          })}\n        </div>\n      ) : null}\n    </Fragment>\n  );\n}\n","import { getMenuContent } from '../../../services/menu-items-service';\nimport { navContentStore } from '../../../state/nav-content-store';\nimport { h } from '@stencil/core';\nimport { isDesktop } from '../../../utility/helper';\nimport { TVehiclePurchaseMenu } from '../../../entities/content';\n\ntype VehiclePurchaseSectionTypes = {\n  activeRoutingKey: string;\n  topLevelRoutingKey: string;\n  breakpoint: number;\n  receivedContent: boolean;\n};\n\nexport default function VehiclePurchaseSection({\n  activeRoutingKey,\n  topLevelRoutingKey,\n  breakpoint,\n  receivedContent\n}: VehiclePurchaseSectionTypes): HTMLElement {\n  const showHeadline = !isDesktop(breakpoint);\n  const displayedContent = getMenuContent(\n    navContentStore.state,\n    activeRoutingKey,\n    topLevelRoutingKey\n  ) as TVehiclePurchaseMenu;\n\n  /* istanbul ignore if */\n  if (displayedContent === null) {\n    return <div></div>;\n  }\n\n  return (\n    <phn-menu\n      item={displayedContent}\n      routingKey={activeRoutingKey}\n      showHeadline={showHeadline}\n      receivedContent={receivedContent}\n    />\n  );\n}\n","@import '../../scss';\n\n@mixin shopSection(){\n  .wishlist-container{\n    padding: p-px-to-rem(16px) ;\n    background-color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n    border-radius: p-px-to-rem(12px);\n    margin-top: p-px-to-rem(48px);\n\n    @include pds-media-query-max('s') {\n      background-color: #EEEFF2;\n    }\n\n    .no-icon {\n      padding-left: p-px-to-rem(28px);\n    }\n  }\n\n}\n\n:host {\n  display: block;\n  box-sizing: border-box;\n\n  @include shopSection()\n\n}\n","import { Component, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { findTopLevelRoutingKey, getLastRoutingSegment, RoutingKeys } from '../../entities/routing-key';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { isDesktop, isString } from '../../utility/helper';\nimport ShopSection from './sections/shop';\nimport VehiclePurchaseSection from './sections/vehiclePurchase';\n\n@Component({\n  tag: 'phn-router',\n  scoped: true,\n  styleUrl: 'router.scss'\n})\nexport class Router {\n  @Prop() activeRoutingKey!: string;\n  @Prop() breakpoint!: number;\n  @Prop() locale!: string;\n  @Prop() receivedContent = false;\n\n  @Event() loginEvent!: EventEmitter<void>;\n\n  render(): HTMLPhnRouterElement {\n    const { models, myPorsche, dealer } = navContentStore.state;\n    const topLevelRoutingKey = findTopLevelRoutingKey(this.activeRoutingKey);\n    const showHeadline = !isDesktop(this.breakpoint);\n\n    switch (topLevelRoutingKey) {\n      case RoutingKeys.DEALER_SEARCH: {\n        const routingId = getLastRoutingSegment(this.activeRoutingKey);\n        const dealerId = routingId !== topLevelRoutingKey ? routingId : '';\n\n        if (isString(dealerId)) {\n          return <phn-dealer-details-drawer breakpoint={this.breakpoint} dealerId={dealerId} locale={this.locale} />;\n        }\n\n        return (\n          <phn-dealer-search-form\n            breakpoint={this.breakpoint}\n            dealer={dealer}\n            locale={this.locale}\n            showHeadline={showHeadline}\n          />\n        );\n      }\n\n      case RoutingKeys.MY_PORSCHE: {\n        if (myPorsche !== null) {\n          return <phn-myporsche-drawer class=\"overlay-content\" />;\n        }\n\n        return <div></div>;\n      }\n\n      case RoutingKeys.SERIES:\n      case RoutingKeys.MODELS: {\n        const routingId = getLastRoutingSegment(this.activeRoutingKey);\n        const activeModelsSeries = models.series.find((modelsSeries) => routingId === modelsSeries.id);\n\n        if (activeModelsSeries !== undefined) {\n          return (\n            <phn-car-body-types-drawer\n              series={activeModelsSeries}\n              breakpoint={this.breakpoint}\n              activeRoutingKey={this.activeRoutingKey}\n            />\n          );\n        }\n\n        return <phn-models showHeadline={showHeadline} breakpoint={this.breakpoint} />;\n      }\n\n      case RoutingKeys.MORE:\n      case RoutingKeys.EXPERIENCE:\n      case RoutingKeys.SERVICES:\n      case RoutingKeys.VEHICLE_PURCHASE: {\n        return (\n          <VehiclePurchaseSection\n            activeRoutingKey={this.activeRoutingKey}\n            topLevelRoutingKey={topLevelRoutingKey}\n            receivedContent={this.receivedContent}\n            breakpoint={this.breakpoint}\n          />\n        );\n      }\n\n      case RoutingKeys.SHOP:\n        return (\n          <ShopSection\n            activeRoutingKey={this.activeRoutingKey}\n            receivedContent={this.receivedContent}\n            breakpoint={this.breakpoint}\n            loginEvent={this.loginEvent}\n          />\n        );\n\n      default: {\n        return <phn-level-1 locale={this.locale} breakpoint={this.breakpoint} />;\n      }\n    }\n  }\n}\n","import { HTMLStencilElement } from '@stencil/core/internal';\nimport windowService from '../services/window-service';\nimport { Timeout } from './timeout';\n\nexport async function componentsOnReady(\n  parent: HTMLElement | null,\n  timeout: Timeout,\n  ...selectors: string[]\n): Promise<HTMLElement[] | null> {\n  if (parent === null) {\n    return null;\n  }\n  const waitForElement = async (selector?: string) => {\n    const el = await windowService.waitForElement(parent, selector);\n\n    if (typeof (el as HTMLStencilElement)?.componentOnReady === 'function') {\n      await (el as HTMLStencilElement).componentOnReady();\n    }\n\n    return el;\n  };\n\n  const waitForElements = selectors.length > 0 ? selectors.map(waitForElement) : [waitForElement()];\n\n  const timer = new Promise<null>((resolve) => timeout.set(async () => resolve(null)));\n  return Promise.race([Promise.all(waitForElements), timer]);\n}\n","import { createStore } from '@stencil/store';\n\ninterface RouterStore {\n  routingKeyHistory: string[];\n  routingKeyPointer: number;\n  initialRoutingKeyHistory: string[] | null;\n  initialRoutingKeyPointer: number | null;\n}\n\nexport const routerStore = createStore<RouterStore>({\n  routingKeyHistory: [],\n  routingKeyPointer: -1,\n  initialRoutingKeyHistory: null,\n  initialRoutingKeyPointer: null\n});\n","import { createStore } from '@stencil/store';\n\nexport interface ShopInformation {\n  numberOfShoppingItems: number;\n  wishlistItemsNumber: number;\n  subTotal: string;\n}\n\nexport interface ShopStateStoreTypes {\n  wishlistItemsNumber: number;\n  numberOfShoppingItems: number;\n  shopInformation: ShopInformation;\n}\n\nexport const shopStateStore = createStore<ShopStateStoreTypes>({\n  wishlistItemsNumber: 0,\n  numberOfShoppingItems: 0,\n  shopInformation: { numberOfShoppingItems: 0, wishlistItemsNumber: 0, subTotal: '0' }\n});\n","import { Application, ApplicationType } from '../constants/app';\nimport { Content, TLink, TShopAdditionalContentMenu, TShopAuthStatus, TShopMenu } from '../../entities/content';\nimport { getUsername } from '../helper';\nimport { navStateStore } from '../../state/nav-state-store';\nimport { navContentStore } from '../../state/nav-content-store';\nimport { shopStateStore, ShopStateStoreTypes } from '../../state/shop-state-store';\n\nexport function isShopAvailable(locale: string, app: ApplicationType): boolean {\n  const shopList = navContentStore.state.shop?.availableLocales;\n  return shopList !== undefined && shopList.includes(locale) && app === Application.shop;\n}\n\nfunction logoLinksToShop(locale: string): boolean {\n  return navContentStore.state.shop?.logoLinksToShopLocales?.includes(locale) || false;\n}\n\nexport function isShopAvailableAndLogoLinksToShop(\n  locale: string,\n  app: ApplicationType,\n  shop: TShopMenu | null\n): shop is TShopMenu {\n  return isShopAvailable(locale, app) && logoLinksToShop(locale) && shop !== null;\n}\n\nexport function modifyShopItemDependingOnMarket(\n  locale: string,\n  app: ApplicationType | undefined,\n  content: Content\n): Content {\n  const { shop, externalShop } = content;\n\n  if (shop === null) return content;\n\n  if (externalShop && app !== Application.shop) {\n    return replaceShopWithExternalShop(content, shop, externalShop);\n  }\n\n  if (shopNotAvailableOnGlobalPages(shop, locale, app)) {\n    return removeShopItemFromContent(content, shop);\n  }\n\n  return content;\n}\n\nfunction replaceShopWithExternalShop(content: Content, shop: TShopMenu, externalShop: TLink): Content {\n  return {\n    ...content,\n    shop: {\n      ...shop,\n      ...externalShop\n    }\n  };\n}\n\nfunction shopNotAvailableOnGlobalPages(shop: TShopMenu, locale: string, app: ApplicationType | undefined) {\n  return (\n    !shop?.availableLocales.includes(locale) ||\n    (shop?.availableLocalesOnlyForShop.includes(locale) && app !== Application.shop)\n  );\n}\n\nfunction removeShopItemFromContent(content: Content, shop: TShopMenu) {\n  return {\n    ...content,\n    shop: {\n      ...shop,\n      text: ''\n    }\n  };\n}\n\nexport function filterWishlistItemsByAuthStatus(\n  menuItems: TShopAdditionalContentMenu[],\n  authStatusList: TShopAuthStatus[]\n): TShopAdditionalContentMenu[] {\n  return menuItems?.filter((item) => {\n    if (item.authStatus === null || item.authStatus === undefined) {\n      return authStatusList.includes(null);\n    }\n\n    return authStatusList.includes(item.authStatus);\n  });\n}\n\nexport function getAvailableShopVariables(): { wishlistItemsNumber: number; username: string } {\n  const { myPorsche } = navContentStore.state;\n  const { loggedInState } = navStateStore.state;\n  let { wishlistItemsNumber } = shopStateStore.state.shopInformation;\n\n  if (wishlistItemsNumber === 0) {\n    wishlistItemsNumber = shopStateStore.state.wishlistItemsNumber;\n  }\n\n  const username = getUsername(loggedInState, myPorsche?.loggedInFallback || '');\n\n  return { wishlistItemsNumber, username };\n}\n\nexport function loadsShopPropsOnStore(props: ShopStateStoreTypes): void {\n  shopStateStore.set('wishlistItemsNumber', props.wishlistItemsNumber);\n  shopStateStore.set('numberOfShoppingItems', props.numberOfShoppingItems);\n  shopStateStore.set('shopInformation', props.shopInformation);\n}\n\nfunction getWishlistIconName(): string {\n  const { shopInformation } = shopStateStore.state;\n  const { wishlistItemsNumber } = shopStateStore.state;\n  const wishlistNumber =\n    shopInformation.wishlistItemsNumber > 0 ? shopInformation.wishlistItemsNumber : wishlistItemsNumber;\n\n  return wishlistNumber > 0 ? 'heart-filled' : 'heart';\n}\n\nexport function getIconNameByMenuItemId(id: string): string | null {\n  const iconsGetterFunctions: Record<string, () => string> = {\n    wishlist: getWishlistIconName\n  };\n\n  const getIconName = iconsGetterFunctions[id];\n\n  if (typeof getIconName !== 'function') return null;\n\n  return getIconName();\n}\n","export class Timeout {\n  private timer: NodeJS.Timeout | null = null;\n\n  constructor(private delay: number) {}\n\n  set<T>(cb: () => Promise<T>): void {\n    this.cancel();\n\n    this.timer = setTimeout(async () => {\n      await cb();\n      this.cancel();\n    }, this.delay);\n  }\n\n  cancel(): void {\n    if (this.timer !== null) {\n      clearTimeout(this.timer);\n\n      if (typeof this.timer.unref === 'function') {\n        this.timer.unref();\n      }\n\n      this.timer = null;\n    }\n  }\n}\n"],"names":["state","calculateDisplayElementId","e","t","drawerType","r","isString","getPreviousRoutingKey","routerStore","routingKeyHistory","routingKeyPointer","a","getLastRoutingSegment","n","determineMainDrawerLevel","l","i","concat","o","getSideDrawerRoutingKey","calculateDisplayElementType","getDrawerType","analyticsManager","setDrawerType","getDealerResultsLoadDisplayElementId","getDealerResultsLoadDisplayElementType","DEALER_SEARCH_ELEMENT_TYPE","ElementTypes","dealerSearchForm","getModelName","link","split","length","undefined","join","getModelTargetElement","includes","toLowerCase","showDealerSearchDropdown","getRegionSpecificCountry","sanitizeDealerHomepage","startsWith","getOpeningHours","navContentStore","dealer","openingHours","monday","tuesday","wednesday","thursday","friday","saturday","sunday","Map","day","set","open","close","getOpeningHoursMap","s","u","c","g","p","indexOf","getOpeningHoursString","get","push","getDayRange","d","daily_lunch","timeFormat","convertToLocalTime","getTimeFormat","map","Number","Date","toLocaleString","hour","minute","hour12","toUpperCase","finderStateStore","createStore","savedSearchesCount","savedVehiclesCount","M","Object","defineProperty","enumerable","configurable","writable","value","W","y","w","clean","enabled","executionPlace","values","logging","level","validation","allowUnknown","verbose","webProperties","eventNamePattern","reactiveUrl","reactiveDimensions","U","prototype","create","event","context","eventAction","_","S","m","P","k","B","j","x","error","warn","log","v","this","prefix","settings","__assign","_getMergedSettings","_isAllowed","isAvailable","_log","console","dir","debug","info","b","arguments","forEach","Array","isArray","q","timestamp","server","hostname","pageExperience","pageId","url","visitor","deviceBrowserBreakpoint","breakpoint","deviceBrowserHeight","height","deviceBrowserOrientation","orientation","deviceBrowserWidth","width","deviceType","useragent","userAgent","K","V","window","location","href","replace","R","innerHeight","toString","D","innerWidth","T","J","breakpoints","ee","keys","trim","test","parseFloat","te","issues","eventMatrix","events","__rest","type","name","message","f","C","filter","G","h","ie","_className","_logger","_settings","_dataLayerStore","pagData","_defaultProperties","setup","_handleDefaultWebProperties","getRegisteredExtension","getRegisteredExtensionByClassName","className","_extensions","has","getRegisteredExtensions","registerExtension","dataLayerInstance","removeExtension","delete","removeExtensionByClassName","_eventNamePayloadFactory","getDefaultProperties","__spreadArray","apply","sort","byName","byArray","byRegex","identifier","data","RegExp","setDefaultProperties","find","_webPropertiesHandled","toISOString","matchMedia","matches","navigator","Z","_webPayloadFactory","oe","call","__extends","getEnvironmentAbbreviation","Environments","PRODUCTION","PREVIEW","GlobalDataLayerService","homeNavEventId","initialise","gdl","pushDataLayerEvent","setEnvironment","environment","setPageName","pageName","setUser","ids","userId","loginStatus","setLocale","splitLocale","country","language","applicationId","DATA_LAYER_APP_ID","assign","applicationName","DATA_LAYER_APPLICATION_NAME","globalDataLayerService","CarBodyTypeDrawer","bodyTypesImagesLoaded","Set","bodyTypesImagesNotLoaded","seriesWatcher","seriesLoaded","showSkeleton","waitForComponentsToLoad","componentsOnReady","el","Timeout","sent","componentWillLoad","componentDidRender","handleImageLoad","add","series","bodyTypes","every","id","handleImageLoadError","sendMetaFunctionDataLayerEvent","EventActions","MODEL_CTA_CLICK","componentClick","clickElementId","clickElementName","text","clickElementType","ClickElementTypes","Link","targetUrl","componentDisplay","displayElementId","displayElementType","activeRoutingKey","bodyTypeButton","displayElementName","car","modelRangeName","sendBodyTypeClickDataLayerEvent","MODEL_CLICK","Image","modelName","sendNavigationDataLayerEvent","all","getImageSize","xxl","xl","xs","base","getImageSource","getAssetPath","getConfig","navStateStore","env","ASSETS_URL","render","Host","class","Fragment","links","key","variant","icon","size","style","display","onClick","role","getHTMLElement","target","tagName","srcSet","image","alt","onLoad","onError","color","align","description","DealerSearchForm","toggleOverlay","showOverlay","detail","loadedAutoCompleteListener","getDealerFormStrategy","numberOfDealers","locale","formComponent","geolocation","dropdown","byNumberOfDealers","Level1","showRightIconRight","app","isShopAvailable","isDesktop","loggedInState","unreadMessagesCount","userConsent","getLevel1Items","dealerSearchResultsStore","routingKeys","elementId","iconRight","showIconModifier","mobileMenuItemClick","emit","MenuItemVariant","slot","MenuItemCountIndicator$1","count","MenuItemLink","content","getVehiclePurchaseRoutingKey","analyticsId","datalayerEventAction","NAVIGATION_LINK_CLICK","Menu","savedVehiclesPosition","receivedContent","showMenu","constructRoutingKey","routingKey","getSavedVehiclesContent","savedVehicles","item","children","NAVIGATION_CLICK","splice","Models","seriesImagesLoaded","seriesImagesNotLoaded","showMenuWithModels","getModelsRoutingKey","models","subtext","tags","Model","isModels","MODEL_RANGE_CLICK","Links","onLogoutClick","IsLoggedIn","messages","savedSearches","getMyPorscheRoutingKey","MenuItemCountLink","featureToggles","isSavedItemsToggleActive","LogoutLink","MenuItemCountIndicator","logout","Login","login","more","signup","signupText","MyPorscheDrawer","myPorsche","logoutEvent","replaceVariables","String","ShopSection","loginEvent","getMenuContent","RoutingKeys","SHOP","filterWishlistItemsByAuthStatus","additionalContent","showHeadline","iconUrl","iconLeft","getIconNameByMenuItemId","getAvailableShopVariables","VehiclePurchaseSection","topLevelRoutingKey","Router","findTopLevelRoutingKey","DEALER_SEARCH","dealerId","MY_PORSCHE","SERIES","MODELS","MORE","EXPERIENCE","SERVICES","VEHICLE_PURCHASE","__awaiter","windowService","waitForElement","componentOnReady","Promise","__generator","race","initialRoutingKeyHistory","initialRoutingKeyPointer","shopStateStore","wishlistItemsNumber","numberOfShoppingItems","shopInformation","subTotal","shop","availableLocales","Application","isShopAvailableAndLogoLinksToShop","logoLinksToShopLocales","logoLinksToShop","modifyShopItemDependingOnMarket","externalShop","replaceShopWithExternalShop","availableLocalesOnlyForShop","shopNotAvailableOnGlobalPages","removeShopItemFromContent","authStatus","username","getUsername","loggedInFallback","loadsShopPropsOnStore","getWishlistIconName","wishlist","delay","timer","cancel","setTimeout","clearTimeout","unref"],"sourceRoot":""}