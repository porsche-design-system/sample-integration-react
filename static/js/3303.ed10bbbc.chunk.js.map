{"version":3,"file":"static/js/3303.ed10bbbc.chunk.js","mappings":"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","sources":["../node_modules/@porschehn/navigation/dist/esm-es5/node_modules/@porsche/globaldatalayer/dist/GlobalDataLayer.es.js","../node_modules/@porschehn/navigation/dist/esm-es5/src/services/analytics/global-data-layer-service.ts"],"sourcesContent":["var M = Object.defineProperty;\nvar W = (r, t, e) => t in r ? M(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e;\nvar o = (r, t, e) => (W(r, typeof t != \"symbol\" ? t + \"\" : t, e), e);\nconst y = {\n  BEFORE_MERGE: \"BEFORE_MERGE\",\n  AFTER_MERGE: \"AFTER_MERGE\"\n}, w = {\n  clean: {\n    enabled: !1,\n    executionPlace: y.AFTER_MERGE,\n    values: [\"\", void 0, null]\n  },\n  logging: {\n    enabled: !0,\n    level: \"warn\"\n  },\n  validation: {\n    enabled: !1,\n    allowUnknown: !1,\n    verbose: !0\n  },\n  webProperties: {\n    enabled: !0,\n    eventNamePattern: /.*/,\n    reactiveUrl: !0,\n    reactiveDimensions: !0\n  }\n};\nclass U {\n  /**\n   * Creates a PCOM (default) data layer schema specific object, that contains the given event name.\n   *\n   * @param data - Contains the event name in a standardized {@link IFactoryData} like way.\n   *\n   * @returns The event name in the PCOM (default) data layer schema specific object.\n   *\n   * @example\n   * myEventNameFactory.create({ event: 'MY_EVENT_NAME' });\n   * // returns:\n   * // {\n   * //   context: {\n   * //     eventAction: 'MY_EVENT_NAME'\n   * //   }\n   * // }\n   */\n  create(t) {\n    return typeof t.event != \"string\" || t.event.length === 0 ? {} : {\n      context: {\n        eventAction: t.event\n      }\n    };\n  }\n}\nconst S = (r, t) => {\n  let e;\n  for (e in r)\n    if (!(!r || !r[e]) && t(r[e], e) === !1)\n      return !1;\n  return !0;\n}, _ = (r, t) => S(r, (e, s) => {\n  for (const i in r[s])\n    if (t(e[i], i, e, s) === !1)\n      return !1;\n  return !0;\n}), ne = (r) => {\n  if (m(r))\n    return !0;\n  let t = 0, e = 0;\n  return S(r, (s) => {\n    t++, m(s) && e++;\n  }), t === e;\n}, m = (r) => {\n  for (const t in r)\n    return !1;\n  return !0;\n}, P = (r, t = ((e) => (e = w.clean) == null ? void 0 : e.values)() || []) => (_(\n  r,\n  (s, i, n, l) => {\n    t.includes(s) && (delete n[i], m(n) && delete r[l]);\n  }\n), r), G = (r, t) => r && (_(\n  r,\n  (e, s, i, n) => {\n    t.includes(`${n.toString()}.${s.toString()}`) && (delete i[s], m(i) && delete r[n]);\n  }\n), r), k = (r) => (_(\n  r,\n  (t, e, s) => (typeof t != \"function\" || (s[e] = t()), !0)\n), r);\nclass H {\n  /**\n   * Creates a new instance of {@link FrameTicker}.\n   *\n   * @param callback The functionality that should be called\n   * @param ticksPerSecond How many times should the functionality been called in one second\n   */\n  constructor(t, e = 10) {\n    o(this, \"tickInterval\");\n    o(this, \"callback\");\n    o(this, \"_tickTime\", Date.now());\n    o(this, \"_tickActive\", !1);\n    this.callback = t, this.tickInterval = 1e3 / e;\n  }\n  /**\n   * Start the {@link FrameTicker}.\n   */\n  start() {\n    this._tickActive || (this._tickActive = !0, this.run());\n  }\n  /**\n   * Stop the {@link FrameTicker}.\n   */\n  stop() {\n    this._tickActive = !1;\n  }\n  /**\n   * Internal function executed on each _tick_.\n   *\n   * @private\n   */\n  run() {\n    if (!this._tickActive)\n      return;\n    requestAnimationFrame(this.run.bind(this));\n    const t = Date.now(), e = t - this._tickTime;\n    e < this.tickInterval || (this._tickTime = t - e % this.tickInterval, this.callback());\n  }\n}\nconst B = (r, t) => {\n  const e = t.split(\".\");\n  if (e.length !== 2)\n    return;\n  const s = r[e[0]];\n  if (s)\n    return s[e[1]];\n}, C = (r) => {\n  if (!r)\n    return [];\n  const t = [];\n  return _(\n    r,\n    (e, s, i, n) => {\n      t.push(`${n.toString()}.${s.toString()}`);\n    }\n  ), t;\n}, j = w.logging;\nvar x = /* @__PURE__ */ ((r) => (r[r.error = 0] = \"error\", r[r.warn = 1] = \"warn\", r[r.log = 2] = \"log\", r))(x || {});\nconst v = class v {\n  /**\n   * Creates an instance of the {@link Logger} class.\n   *\n   * @param prefix A prefix that is used in all logs\n   *   (`[PREFIX] MESSAGE`, i.e. `[GlobalDataLayer] This is a serious message`).\n   * @param options Options to be merged as settings with the {@link DEFAULT_SETTINGS.logging}.\n   */\n  constructor(t, e) {\n    /**\n     * The prefix that is used in all logs.\n     * @private\n     */\n    o(this, \"prefix\");\n    /**\n     * The merged settings. Also see the options of the {@link constructor} and the {@link DEFAULT_SETTINGS.logging}.\n     *\n     * @see {@link TLoggerSettings}\n     *\n     * @private\n     */\n    o(this, \"settings\");\n    this.prefix = t, this.settings = {\n      ...j,\n      ...e\n    };\n  }\n  /**\n   * Helper function to merge the options of a log method call with the current {@link settings}.\n   *\n   * @param options  Options to be merged with the available {@link settings}\n   *\n   * @returns The merged temporary settings.\n   *\n   * @private\n   */\n  _getMergedSettings(t) {\n    return t ? {\n      ...this.settings,\n      ...t\n    } : this.settings;\n  }\n  /**\n   * Check, if this log message is allowed.\n   *\n   * @see {@link TLoggerSettings.enabled} and {@link TLoggerSettings.level} and {@link isAvailable}\n   *\n   * @param type Type of the current log message.\n   * @param settings The current (temporary) settings.\n   *\n   * @returns `true`if the log message is allowed.\n   *\n   * @private\n   */\n  _isAllowed(t, e) {\n    if (!v.isAvailable || !e.enabled)\n      return !1;\n    const s = x[e.level];\n    switch (t) {\n      case \"error\":\n      case \"warn\":\n        return s >= x[t];\n      case \"info\":\n      case \"log\":\n      case \"debug\":\n      case \"dir\":\n        return s >= 2;\n      default:\n        return !1;\n    }\n  }\n  /**\n   * A helper method to execute the log messages of all different types.\n   *\n   * @param msg The message text.\n   * @param type The type of the message.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   *\n   * @private\n   */\n  _log(t, e = \"log\", s) {\n    const i = this._getMergedSettings(s);\n    if (this._isAllowed(e, i))\n      switch (e) {\n        case \"dir\":\n          console.log(`[${this.prefix}] ${e}:`), console[e](t);\n          break;\n        default:\n          console[e](`[${this.prefix}] ${t}`);\n      }\n  }\n  /**\n   * Write a normal log message.\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  log(t, e) {\n    this._log(t, \"log\", e);\n  }\n  /**\n   * Write a log message of type `dir`.\n   *\n   * This message will be split in two messages, the prefix with \" dir:\" and the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/console/dir dir} output as interactive list.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/dir console.dir()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  dir(t, e) {\n    this._log(t, \"dir\", e);\n  }\n  /**\n   * Write a log message of type `debug`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/debug console.debug()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  debug(t, e) {\n    this._log(t, \"debug\", e);\n  }\n  /**\n   * Write a log message of type `error`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/error console.error()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  error(t, e) {\n    this._log(t, \"error\", e);\n  }\n  /**\n   * Write a log message of type `info`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/info console.info()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  info(t, e) {\n    this._log(t, \"info\", e);\n  }\n  /**\n   * Write a log message of type `warn`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/console/warn console.warn()}\n   *\n   * @param msg The message text.\n   * @param options Temporary options, that will be merged with the current {@link settings}.\n   */\n  warn(t, e) {\n    this._log(t, \"warn\", e);\n  }\n};\n/**\n * Check if there is a console available that makes logging possible.\n */\no(v, \"isAvailable\", (() => typeof console < \"u\")());\nlet b = v;\nconst u = (...r) => {\n  const t = {};\n  return r.forEach((e) => {\n    if (m(e))\n      return;\n    const s = {\n      ...t,\n      ...e\n    };\n    let i;\n    for (i in s)\n      typeof s[i] == \"object\" && !Array.isArray(s[i]) ? t[i] = {\n        ...t[i],\n        ...e[i]\n      } : t[i] = s[i];\n  }), t;\n};\nclass q {\n  /**\n   * Creates a PCOM (default) data layer schema specific object, that contains the given web properties.\n   *\n   * @param data - Contains the web properties in a standardized {@link IFactoryData} like way.\n   *\n   * @returns The given web properties in the PCOM (default) data layer schema specific object.\n   *\n   * @example\n   * myWebPropertiesFactory.create({ userAgent: 'MY_USE_AGENT' });\n   * // returns:\n   * // {\n   * //   visitor: {\n   * //     userAgent: 'MY_USE_AGENT'\n   * //   }\n   * // }\n   */\n  create(t) {\n    return P(\n      {\n        context: {\n          timestamp: t.timestamp,\n          server: t.hostname\n        },\n        pageExperience: {\n          pageId: t.url\n        },\n        visitor: {\n          deviceBrowserBreakpoint: t.breakpoint,\n          deviceBrowserHeight: t.height,\n          deviceBrowserOrientation: t.orientation,\n          deviceBrowserWidth: t.width,\n          deviceType: t.deviceType,\n          useragent: t.userAgent\n        }\n      },\n      [void 0]\n    );\n  }\n}\nconst K = w.webProperties, V = () => window.location.href.replace(/[?#].*/, \"\"), Y = () => (/* @__PURE__ */ new Date()).toISOString(), Q = () => window.location.hostname, R = () => window.innerHeight.toString(), D = () => window.innerHeight > window.innerWidth ? \"p\" : \"l\", T = () => window.innerWidth.toString(), X = () => window.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? \"mobile\" : \"desktop\", z = () => window.navigator.userAgent, J = (r) => {\n  if (!r.breakpoints || r.breakpoints.length < 1)\n    return;\n  const { breakpoints: t } = r, e = () => {\n    const s = window.innerWidth;\n    let i = 0, n = 0;\n    for (; n < t.length && s >= t[n]; )\n      i = t[n], n++;\n    return i.toString();\n  };\n  return r.reactiveDimensions ? e : e();\n}, Z = (r, t) => {\n  const e = {\n    ...K,\n    ...r\n  }, i = {\n    breakpoint: J(e),\n    timestamp: Y(),\n    hostname: Q(),\n    url: e.reactiveUrl ? V : V(),\n    height: e.reactiveDimensions ? R : R(),\n    orientation: e.reactiveDimensions ? D : D(),\n    width: e.reactiveDimensions ? T : T(),\n    deviceType: X(),\n    userAgent: z()\n  };\n  return t ? t.create(i) : i;\n}, ee = (r, t) => {\n  switch (t) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n      return typeof r === t;\n    case \"any[]\":\n      return Array.isArray(r) && r.length > 0;\n    case \"Record<string, any>\":\n      return typeof r == \"object\" && !Array.isArray(r) && Object.keys(r).length > 0;\n    case \"any\":\n      return !0;\n    default:\n      if ((typeof r == \"boolean\" || typeof r == \"number\" || typeof r == \"string\") && t.indexOf(\"|\") > 0)\n        return t.split(\"|\").map((s) => {\n          const i = s.trim();\n          return /^'.*'$/.test(i) ? i.replace(/(^ ?'?|'? ?$)/g, \"\") : /^(true|false)$/.test(i) ? i === \"true\" : /^-?(\\d*\\.)?\\d+$/.test(i) ? Number.parseFloat(i) : i.replace(/(^ ?'?|'? ?$)/g, \"\");\n        }).includes(r);\n  }\n  return !0;\n}, te = (r, t, e) => {\n  const s = {\n    level: null,\n    issues: []\n  };\n  if (!e.enabled || !e.eventMatrix)\n    return s;\n  const { events: i, ...n } = e.eventMatrix, l = i.indexOf(r);\n  if (l === -1)\n    return s.level = \"error\", s.issues.push({\n      level: \"error\",\n      type: \"EVENT_NOT_FOUND\",\n      name: r,\n      message: `'${r}': Event does not exist.`\n    }), s;\n  const a = C(t), d = Object.keys(n), c = a.filter(\n    (g) => !d.includes(g)\n  );\n  c.length > 0 && (e.allowUnknown || G(t, c), c.forEach((g) => {\n    s.level = s.level ?? \"warn\", s.issues.push({\n      level: \"warn\",\n      type: \"PROPERTY_DOES_NOT_EXIST\",\n      name: g,\n      message: `'${g}': Property does not exist in the given Event Matrix.${e.allowUnknown ? \"\" : \" It was omitted from the DataLayer payload.\"}`\n    });\n  }));\n  let h;\n  for (h in n) {\n    const g = n[h], f = typeof g.e[l] < \"u\", p = g.r === 1, E = t ? B(t, h) : void 0, N = typeof E < \"u\";\n    if (f && // Does the event want this property?\n    p && // Is the property mandatory in general?\n    !N && (s.level = \"error\", s.issues.push({\n      level: \"error\",\n      type: \"REQUIRED_PROPERTY_MISSING\",\n      name: h,\n      message: `'${h}': The required property is missing.`\n    }), !e.verbose) || N && !ee(E, g.t) && (s.level = \"error\", s.issues.push({\n      level: \"error\",\n      type: \"WRONG_PROPERTY_TYPE\",\n      name: h,\n      message: `'${h}': Wrong type detected. Expected '${g.t}', got '${typeof E}'.`\n    }), !e.verbose))\n      return s;\n  }\n  return s;\n};\nclass L {\n  constructor(t = \"DataLayerExtension\", e) {\n    /**\n     * A\n     * @protected\n     */\n    o(this, \"_logger\");\n    o(this, \"_className\");\n    o(this, \"_dataLayerInstance\");\n    this._className = t, this._logger = new b(this.className, e);\n  }\n  get dataLayerInstance() {\n    return this._dataLayerInstance;\n  }\n  set dataLayerInstance(t) {\n    this._dataLayerInstance = t;\n  }\n  get className() {\n    return this._className;\n  }\n  set className(t) {\n    this._className = t;\n  }\n  get isRegistered() {\n    return typeof this._dataLayerInstance < \"u\";\n  }\n}\nconst A = {\n  eventName: \"UNKNOWN\",\n  thresholds: {\n    filled: 0.5,\n    visible: 0.3,\n    minValidityPeriod: 1\n  },\n  triggerUpdates: {\n    enabled: !1,\n    eventName: \"VIEWPORT_TRACKER_STATUS_CHANGE\"\n  },\n  tickerSettings: {\n    ticksPerSecond: 10\n  }\n};\nclass se extends Event {\n  constructor(e, s) {\n    super(e);\n    o(this, \"registeredElement\");\n    this.registeredElement = s;\n  }\n}\nclass $ extends L {\n  /**\n   * Creates a new instance of {@link ViewportTrackerExtension} with optional settings of type\n   * {@link TViewportTrackerSettings}.\n   *\n   * @param options The settings to initialize the instance. Will be merged with the defaults.\n   */\n  constructor(e) {\n    var s;\n    super(\"ViewportTrackerExtension\", e == null ? void 0 : e.logger);\n    o(this, \"settings\");\n    o(this, \"observer\", null);\n    o(this, \"frameTicker\");\n    o(this, \"registeredElements\", []);\n    o(this, \"visibleElements\", []);\n    this.settings = e ? u(A, e) : A, this.observer = this.createObserver(), this.frameTicker = new H(\n      this.checkVisibilityOfElements.bind(this),\n      (s = this.settings.tickerSettings) == null ? void 0 : s.ticksPerSecond\n    );\n  }\n  /**\n   * Will create and return the mandatory {@link IntersectionObserver}. The function will log an error if this is not\n   * possible.\n   *\n   * @returns The ready-to-use {@link IntersectionObserver} instance or null.\n   *\n   * @private\n   */\n  createObserver() {\n    return !window || !(\"IntersectionObserver\" in window) ? (this._logger.error(\"The ViewportTrackerExtension will need IntersectionObserver to work.\"), null) : new IntersectionObserver(this.observerHandler.bind(this), {\n      threshold: 0,\n      rootMargin: \"0px 0px\"\n    });\n  }\n  /**\n   * Register an {@link HTMLElement} to be observed.\n   *\n   * @param element The {@link HTMLElement} to register with optional _DataLayer_ properties.\n   */\n  registerElement(e) {\n    var s;\n    this.unregisterElement(e.el), this.registeredElements.push({\n      el: e.el,\n      properties: e.properties,\n      state: {\n        isFilled: !1,\n        isVisible: !1,\n        passedValidityPeriod: !1\n      }\n    }), (s = this.observer) == null || s.observe(e.el);\n  }\n  /**\n   * Register multiple {@link HTMLElement}s to be observed.\n   *\n   * @param elements The {@link HTMLElement}s to register with optional _DataLayer_ properties.\n   */\n  registerElements(e) {\n    for (const s of e)\n      this.registerElement(s);\n  }\n  /**\n   * Unregister an {@link HTMLElement} from observation.\n   *\n   * @param element The {@link HTMLElement} to unregister.\n   */\n  unregisterElement(e) {\n    var i;\n    (i = this.observer) == null || i.unobserve(e);\n    const s = this.getRegisteredElementIndex(e);\n    s < 0 || this.registeredElements.splice(s, 1);\n  }\n  /**\n   * Unregister multiple {@link HTMLElement}s from observation.\n   *\n   * @param elements The {@link HTMLElement}s to unregister.\n   */\n  unregisterElements(e) {\n    for (const s of e)\n      this.unregisterElement(s);\n  }\n  /**\n   * Helper function to retrieve the index of a registered {@link HTMLElement} from the `registeredElements` array.\n   *\n   * @param el The {@link HTMLElement} to find.\n   * @returns The index of the element if found, otherwise `-1`.\n   *\n   * @private\n   */\n  getRegisteredElementIndex(e) {\n    return this.registeredElements.findIndex((s) => s.el === e);\n  }\n  /**\n   * Helper function to retrieve a registered {@link HTMLElement} from the `registeredElements` array.\n   *\n   * @param el The {@link HTMLElement} to find.\n   *\n   * @returns The found element, otherwise `undefined`.\n   *\n   * @private\n   */\n  getRegisteredElement(e) {\n    const s = this.getRegisteredElementIndex(e);\n    if (!(s < 0))\n      return this.registeredElements[s];\n  }\n  /**\n   * The {@link IntersectionObserver} callback function to handle updates to the registered {@link TRegisteredElement}s\n   * {@link HTMLElement}s. Registers or unregisters items based on the given settings and changes their state.\n   *\n   * @param entries Intersection element entries.\n   *\n   * @private\n   */\n  observerHandler(e) {\n    for (const s of e) {\n      const i = s.target, n = this.getRegisteredElement(i);\n      if (n) {\n        if (s.isIntersecting) {\n          this.visibleElements.findIndex((l) => l === n.el) === -1 && this.visibleElements.push(n.el);\n          continue;\n        }\n        this.removeFromVisibleStore(n.el), (n.state.isFilled || n.state.isVisible) && requestAnimationFrame(() => {\n          this.processViewportIntersection(n, {\n            isVisible: !1,\n            isFilled: !1,\n            passedValidityPeriod: !1\n          });\n        });\n      }\n    }\n    this.visibleElements.length > 0 && this.frameTicker.start();\n  }\n  /**\n   * Callback for the {@link FrameTicker} to frequently check the state of all elements which are currently marked as\n   * _in the viewport_.\n   *\n   * @private\n   */\n  checkVisibilityOfElements() {\n    if (this.visibleElements.length === 0)\n      return;\n    const e = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0), s = window.scrollY;\n    for (let i = 0; i < this.visibleElements.length; i++) {\n      const n = this.visibleElements[i], l = this.getRegisteredElement(n);\n      if (!l || !this.settings.triggerUpdates.enabled && l.state.passedValidityPeriod)\n        continue;\n      const { isVisible: a, isFilled: d } = $.percentWithinViewport(n, s, e), c = {\n        isVisible: a >= this.settings.thresholds.visible,\n        isFilled: d >= this.settings.thresholds.filled,\n        passedValidityPeriod: l.state.passedValidityPeriod\n      };\n      this.processViewportIntersection(l, c);\n    }\n  }\n  /**\n   * Get to know how much of the {@link HTMLElement} is visible the viewport.\n   *\n   * @param el The element in the viewport.\n   * @param scrollY The scrollY of the current window.\n   * @param viewportHeight The height of the viewport.\n   *\n   * @returns The % visible of the HTMLElement in the viewport.\n   *\n   * @private\n   */\n  static percentWithinViewport(e, s, i) {\n    const n = { top: s, bottom: s + i }, l = e.getBoundingClientRect(), a = {\n      top: l.y + s,\n      bottom: l.y + l.height + s\n    }, d = l.height;\n    let c = d;\n    a.top < n.top && (c = d - (s - a.top)), a.bottom > n.bottom && (c = c - (a.bottom - n.bottom));\n    let h = c / d, g = c / i;\n    return (n.top > a.bottom || n.bottom < a.top) && (h = 0, g = 0), n.top < a.top && n.bottom > a.bottom && (h = 1), a.top < n.top && a.bottom > n.bottom && (g = 1), {\n      isVisible: h,\n      isFilled: g\n    };\n  }\n  /**\n   * Processes a {@link TRegisteredElement} items intersection. If the element matches the\n   * {@link TViewportTrackerSettings.thresholds `thresholds`}, the {@link IGlobalDataLayer.push} method is called.\n   *\n   * Also dispatches the update event of the {@link TViewportTrackerSettings.triggerUpdates `triggerUpdates`} feature.\n   *\n   * @param registeredElement The registered element to process.\n   * @param isVisible Indicates, if the element is {@link TViewportTrackerSettings.thresholds.visible visible}.\n   * @param isFilled Indicates, if the element is {@link TViewportTrackerSettings.thresholds.filled filled}.\n   *\n   * @private\n   */\n  processViewportIntersection(e, { isVisible: s, isFilled: i }) {\n    const n = e.state || {\n      isVisible: !1,\n      isFilled: !1\n    }, l = Date.now(), a = {\n      isVisible: s,\n      isFilled: i,\n      timeVisible: n.isVisible !== s ? l : n.timeVisible,\n      timeFilled: n.isFilled !== i ? l : n.timeFilled,\n      passedValidityPeriod: n.passedValidityPeriod\n    }, d = (c) => (l - c) / 1e3;\n    if (n.isVisible !== a.isVisible || n.isFilled !== a.isFilled)\n      a.passedValidityPeriod = !1, e.state = a, this.dispatchEvent(e);\n    else if (!a.passedValidityPeriod && (a.isVisible || a.isFilled)) {\n      const c = d(a.timeVisible), h = d(a.timeFilled);\n      (s && c >= this.settings.thresholds.minValidityPeriod || i && h >= this.settings.thresholds.minValidityPeriod) && (a.passedValidityPeriod = !0, e.state = a, this.pushEvent(e), this.dispatchEvent(e));\n    }\n  }\n  /**\n   * Helper function to remove an {@link HTMLElement} from the state of being in the viewport. This will stop the\n   * {@link FrameTicker} checks from being processed for this {@link TRegisteredElement}.\n   *\n   * @param element The HTMLElement to remove.\n   *\n   * @private\n   */\n  removeFromVisibleStore(e) {\n    let s = -1;\n    for (; (s = this.visibleElements.findIndex((i) => i === e)) >= 0; )\n      this.visibleElements.splice(s, 1);\n    this.visibleElements.length === 0 && this.frameTicker.stop();\n  }\n  /**\n   * Will call the {@link IGlobalDataLayer.push} with the given {@link TViewportTrackerSettings.eventName `eventName`},\n   * whenever a {@link TRegisteredElement} matches the given {@link TViewportTrackerSettings.thresholds `thresholds`}.\n   *\n   * @param item The registered {@link HTMLElement} with its {@link TRegisteredElement.properties `properties` payload}.\n   *\n   * @private\n   */\n  pushEvent(e) {\n    if (!this.dataLayerInstance) {\n      this._logger.warn(\"This extension is not registered to a GlobalDataLayer instance.\");\n      return;\n    }\n    const { properties: s } = e, i = typeof s == \"function\" ? s() : s || {};\n    this.dataLayerInstance.push(this.settings.eventName, i);\n  }\n  /**\n   * Dispatches a {@link ViewportTrackerStatusChangeEvent}.\n   *\n   * @param registeredElement The registered {@link HTMLElement} to use as target.\n   *\n   * @private\n   */\n  dispatchEvent(e) {\n    this.settings.triggerUpdates && this.settings.triggerUpdates.enabled && e.el.dispatchEvent(\n      new se(this.settings.triggerUpdates.eventName, e)\n    );\n  }\n}\nconst F = (r) => r.length > 0, O = \"PageNameExtender_unknown_pageName\", I = {\n  initialPageName: O,\n  separator: \"/\"\n};\nclass ae extends L {\n  /**\n   * Constructor of PageNameExtender\n   *\n   * @param options Settings object for this extension.\n   */\n  constructor(e) {\n    super(\"PageNameExtenderExtension\", e == null ? void 0 : e.logger);\n    o(this, \"settings\");\n    /**\n     * Internal page name store. To handle the different levels.\n     */\n    o(this, \"pageName\", []);\n    /**\n     * Internal basic page name length. This is defined in the {@link set} method and used to make sure there is\n     * an option to keep ({@link reduce}) or replace ({@link set}) the basic page name.\n     */\n    o(this, \"basePageNameLength\", 0);\n    this.settings = e ? u(I, e) : I, this.set(this.settings.initialPageName);\n  }\n  /**\n   * Update the complete stored {@link pageName} with a string or an array of strings.\n   *\n   * @param pageName If a simple string is given, it will be separated by the given {@link settings} separator.\n   * @param keepExtensions Keep the parts which were added by {@link extend} method.\n   *\n   * @returns The new {@link pageName} joined with the {@link settings} separator.\n   */\n  set(e, s = !1) {\n    const i = this.basePageNameLength;\n    return typeof e == \"string\" && (e = e.split(this.settings.separator).filter(F)), e.length === 0 ? (this._logger.warn(\"`pageName` must not be empty\"), \"\") : (e[0] === O && this._logger.info(\n      \"No `initialPageName` was provided. Make sure the `pageName` is provided later via the `set` method.\"\n    ), this.basePageNameLength = e.length, s && e.push(...this.pageName.slice(i - 1)), this.pageName = e, this.get());\n  }\n  /**\n   * Get the current {@link pageName}.\n   *\n   * @param basePageNameOnly If you want to ignore the parts which were added by {@link extend}.\n   *\n   * @returns The current {@link pageName} joined with the {@link settings} separator.\n   */\n  get(e = !1) {\n    return (e ? this.pageName.slice(0, this.basePageNameLength) : this.pageName).join(\n      this.settings.separator\n    );\n  }\n  /**\n   * Add (multiple) sub levels to the {@link pageName}.\n   *\n   * @param levels If a simple string is given it will be split by the given {@link settings} separator.\n   *\n   * @returns The new {@link pageName} joined with the given {@link settings} separator.\n   */\n  extend(e) {\n    return Array.isArray(e) && (e = e.join(this.settings.separator)), e = e.split(this.settings.separator).filter(F), e.length === 0 ? this._logger.warn(\"`levels` must not be empty\") : this.pageName.push(...e), this.get();\n  }\n  /**\n   * Remove (multiple) sub levels from the {@link pageName}.\n   *\n   * @param [levelCount='last'] Number of levels that should be removed. You can also use a\n   *   {@link TPageNameExtenderReduceType} to define the \"last\" or \"all\" (except the root).\n   * @param keepBasePageName If the basic page name given by {@link set} should also be reducible. This\n   *   cannot be restored.\n   *\n   * @returns The new {@link pageName} joined with the given {@link settings} separator.\n   */\n  reduce(e = \"last\", s = !0) {\n    let i;\n    return e === \"all\" ? i = this.pageName.length - (s ? this.basePageNameLength : 1) : e === \"last\" ? i = this.pageName.length > (s ? this.basePageNameLength : 1) ? 1 : 0 : (i = e, (this.pageName.length <= e || s && this.pageName.length - this.basePageNameLength < e) && (this._logger.info(\n      `${this.pageName.length - (s ? this.basePageNameLength : 1)} - ${e} must not delete first level or more`\n    ), i = this.pageName.length - (s ? this.basePageNameLength : 1))), this.pageName.splice(i * -1, i), this.basePageNameLength > this.pageName.length && (this.basePageNameLength = this.pageName.length), this.get();\n  }\n  /**\n   * Get a temporary pre-fixed version of the current {@link pageName}.\n   *\n   * @param [prefix=''] The value that should be prepended temporarily.\n   *\n   * @returns The current {@link pageName} joined with the given {@link settings} separator pre-fixed with the given\n   *   string value.\n   */\n  getWithPrefix(e = \"\") {\n    return e + this.get();\n  }\n  /**\n   * Get a temporary post-fixed version of the current {@link pageName}.\n   *\n   * @param [postfix=''] The value that should be appended temporarily.\n   *\n   * @returns The current {@link pageName} joined with the given {@link Settings} separator post-fixed with the given\n   *   string value.\n   */\n  getWithPostfix(e = \"\") {\n    return this.get() + e;\n  }\n}\nclass ie {\n  /**\n   * Create an instance of the GlobalDataLayer library. This constructor has to be overwritten to initialize the needed\n   * factories ({@link _eventNamePayloadFactory} and {@link _webPayloadFactory}).\n   *\n   * @param options All options are merged with the {@link DEFAULT_SETTINGS} of type {@link TSettings}.\n   * @param [dataStore] The array where all the pushes are added to. The default tries to get or generate the\n   *   `window.pagData` array. If this is not possible, it creates an empty array, that is exposed via\n   *   {@link DataLayerStore}.\n   * @param [className] The class name of the library is here, because code can be uglified and/or minified later.\n   *\n   * @protected\n   */\n  constructor(t, e, s = \"GlobalDataLayer\") {\n    /**\n     * The class name of the library. This is needed, because code can be uglified and/or minified later.\n     * @protected\n     */\n    o(this, \"_className\");\n    /**\n     * The merged settings. Also see the options of the {@link constructor} and the {@link DEFAULT_SETTINGS}.\n     * @protected\n     */\n    o(this, \"_settings\");\n    /**\n     * An internal store where all default properties are added to.\n     * @protected\n     */\n    o(this, \"_defaultProperties\");\n    /**\n     * An internal logger, which has to be used for all console logs.\n     * @protected\n     */\n    o(this, \"_logger\");\n    /**\n     * A flag that indicates if the _Web Properties_ feature was already handled.\n     *\n     * @see {@link getWebProperties}\n     *\n     * @protected\n     */\n    o(this, \"_webPropertiesHandled\", !1);\n    /**\n     * the _DataLayer_ store array, that is used to push all the data.\n     *\n     * This can be transferred to the library with the second parameter `dataStore` of the {@link constructor}.\n     *\n     * @protected\n     */\n    o(this, \"_dataLayerStore\");\n    /**\n     * An internal store where all registered extensions are added to.\n     * @protected\n     */\n    o(this, \"_extensions\", /* @__PURE__ */ new Map());\n    const i = u(\n      w,\n      t || {}\n    );\n    this._className = s, this._logger = new b(this._className, i.logging), this._settings = i, e ? this._dataLayerStore = e : typeof window < \"u\" ? (this._dataLayerStore = window.pagData = window.pagData || [], this._logger.info(\"`dataLayerStore` was set to default `window.pagData`\")) : (this._dataLayerStore = [], this._logger.info(\"`dataLayerStore` was set to default `[]`\")), this._defaultProperties = [];\n  }\n  /**\n   * An internal function to set everything up after initialization is done. This has to be called at the end of the\n   * overwritten constructors.\n   * @protected\n   */\n  setup() {\n    this._handleDefaultWebProperties();\n  }\n  /**\n   * The current settings object.\n   * @readonly\n   */\n  get Settings() {\n    return this._settings;\n  }\n  /**\n   * Get the _DataLayer_ store, that is used to push all the data.\n   * @readonly\n   */\n  get DataLayerStore() {\n    return this._dataLayerStore;\n  }\n  /**\n   * Get a registered {@link DataLayerExtension} class instance based of the input type.\n   *\n   * @param TConstructor The class to search for.\n   *\n   * @returns The registered instance of the extension class, `undefined` if not found.\n   */\n  getRegisteredExtension(t) {\n    const e = new t();\n    return this.getRegisteredExtensionByClassName(e.className);\n  }\n  /**\n   * Get a registered {@link DataLayerExtension} class instance based of a classname.\n   *\n   * @param className The name of class instance to compare.\n   *\n   * @returns The registered instance of the extension class, undefined if not found.\n   */\n  getRegisteredExtensionByClassName(t) {\n    return this._extensions.has(t) ? this._extensions.get(t) : void 0;\n  }\n  /**\n   * Get all registered {@link DataLayerExtension}.\n   *\n   * @returns All registered DataLayerExtensions as array.\n   */\n  getRegisteredExtensions() {\n    const t = [];\n    for (const e of this._extensions.values())\n      t.push(e);\n    return t;\n  }\n  /**\n   * Register a new {@link DataLayerExtension} class for this instance.\n   *\n   * @param extension The extension class instance to register.\n   * @param override If there is an existing instance already registered, we override it, otherwise we do nothing.\n   */\n  registerExtension(t, e = !1) {\n    if (!e && this._extensions.has(t.className)) {\n      this._logger.warn(`Tried to register extension class <${t.className}> which already exists.`);\n      return;\n    }\n    t.dataLayerInstance = this, this._extensions.set(t.className, t), e ? this._logger.info(`Overriden registration for extension class <${t.className}>.`) : this._logger.info(`Registered extension class <${t.className}>.`);\n  }\n  /**\n   * Remove a registered {@link DataLayerExtension} instance.\n   *\n   * @param TConstructor The class to search for.\n   */\n  removeExtension(t) {\n    const e = new t();\n    if (this._extensions.has(e.className)) {\n      this._extensions.delete(e.className);\n      return;\n    }\n    this._logger.warn(`Tried to remove not existing extension class <${e.className}>.`);\n  }\n  /**\n   * Remove a registered {@link DataLayerExtension} instance by class name.\n   *\n   * @param className the name of the class\n   */\n  removeExtensionByClassName(t) {\n    if (this._extensions.has(t)) {\n      this._extensions.delete(t);\n      return;\n    }\n    this._logger.warn(`Tried to remove not existing extension class <${t}>.`);\n  }\n  /**\n   * Push a GlobalDataLayer Event with payload to the given data layer store. The method can fail and return `false`\n   *   because ...\n   *\n   *   - the given `eventName` was invalid\n   *   - the validation failed\n   *\n   * A settings object can be added as the third parameter to every call. This will then temporary override the provided\n   * settings for the time of the push action.\n   *\n   * @param eventName The name of the event that should be pushed.\n   * @param [payload] The _DataLayer_ properties to be merged and added to the data layer.\n   * @param [options] Temporary override the settings.\n   *\n   * @returns A boolean to indicate, if the push was successful.\n   */\n  push(t, e = [{}], s) {\n    var d, c;\n    if (t.length === 0)\n      return !1;\n    const i = s && !m(s) ? u(this._settings, s) : this._settings;\n    Array.isArray(e) || (e = [e]), e.forEach(k);\n    const n = this._eventNamePayloadFactory.create({ event: t }), l = k(this.getDefaultProperties(t));\n    i.clean.enabled && i.clean.executionPlace === y.BEFORE_MERGE && [l || {}, ...e].forEach(\n      (h) => P(h, i.clean.values)\n    );\n    const a = u(\n      n,\n      l || {},\n      ...e\n    );\n    if (i.clean.enabled && i.clean.executionPlace === y.AFTER_MERGE && P(a, i.clean.values), (d = i == null ? void 0 : i.validation) != null && d.enabled && ((c = i == null ? void 0 : i.validation) != null && c.eventMatrix)) {\n      const h = te(t, a, i.validation), g = h.issues.sort((f, p) => f.level !== p.level && p.level === \"warn\" ? -1 : 0).map((f) => `- [${f.level}]: ${f.message}`).join(`\n`);\n      switch (h.level) {\n        case \"error\":\n          return this._logger.error(\n            `Validation failed for event '${t}' with errors/warnings: \n${g}`,\n            i.logging\n          ), !1;\n        case \"warn\":\n          this._logger.warn(\n            `Validation success for event '${t}' with warnings: \n${g}`,\n            i.logging\n          );\n          break;\n        default:\n          this._logger.info(`Validation success for event '${t}'.`, i.logging);\n          break;\n      }\n    }\n    return this._dataLayerStore.push(a), !0;\n  }\n  /**\n   * Return the default properties for the given identifier.\n   *\n   * @param identifier The identifier to get the default properties for.\n   *\n   * @returns The found default properties for the identifier, otherwise `undefined`.\n   */\n  getDefaultProperties(t) {\n    const e = {\n      byName: [],\n      byArray: [],\n      byRegex: []\n    };\n    this._defaultProperties.forEach((i) => {\n      if (i.identifier === t)\n        return e.byName.push(i.data);\n      if (Array.isArray(i.identifier) && i.identifier.includes(t))\n        return e.byArray.push(i.data);\n      if (i.identifier instanceof RegExp && i.identifier.test(t))\n        return e.byRegex.push(i.data);\n    });\n    const s = [...e.byRegex, ...e.byArray, ...e.byName];\n    if (s.length)\n      return u(...s);\n  }\n  /**\n   * Set default properties, which will later be merged with the payload of a {@link push}, when the provided identifier\n   * matches the `eventName`.\n   *\n   * @param identifier The identifier to use the default properties for.\n   * @param data The default properties which will be used with the provided identifier to merge those properties with the payload.\n   */\n  setDefaultProperties(t, e) {\n    const s = this._defaultProperties.find((i) => i.identifier === t);\n    if (s) {\n      s.data = u(s.data, e);\n      return;\n    }\n    this._defaultProperties.push({\n      identifier: t,\n      data: e\n    });\n  }\n  /**\n   * Checks if the web properties feature ({@link getWebProperties}) is already handled or does the setup with the\n   * current settings.\n   *\n   * @private\n   */\n  _handleDefaultWebProperties() {\n    if (this._webPropertiesHandled || !this._settings.webProperties.enabled)\n      return;\n    const t = Z(\n      this._settings.webProperties,\n      this._webPayloadFactory\n    );\n    this.setDefaultProperties(this._settings.webProperties.eventNamePattern, t), this._webPropertiesHandled = !0;\n  }\n}\nclass oe extends ie {\n  /**\n   * Create an instance of the GlobalDataLayer library.\n   *\n   * @param options All options are merged with the {@link DEFAULT_SETTINGS} of type {@link TSettings}.\n   * @param [dataStore] The array where all the pushes are added to. The default tries to get or generate the\n   *   `window.pagData` array. If this is not possible, it creates an empty array, that is exposed via\n   *   {@link DataLayerStore}.\n   * @param [className] The class name of the library is here, because code can be uglified and/or minified later.\n   *\n   * @protected\n   */\n  constructor(e, s, i = \"GlobalDataLayer\") {\n    super(e, s, i);\n    o(this, \"_eventNamePayloadFactory\");\n    o(this, \"_webPayloadFactory\");\n    this._eventNamePayloadFactory = new U(), this._webPayloadFactory = new q(), this.setup();\n  }\n  setup() {\n    super.setup();\n  }\n}\nexport {\n  y as CleanExecutionPlace,\n  w as DEFAULT_SETTINGS,\n  L as DataLayerExtension,\n  U as EventNameFactory,\n  H as FrameTicker,\n  oe as GlobalDataLayer,\n  ie as GlobalDataLayerBaseClass,\n  b as Logger,\n  ae as PageNameExtenderExtension,\n  $ as ViewportTrackerExtension,\n  se as ViewportTrackerStatusChangeEvent,\n  q as WebPropertiesFactory,\n  P as clean,\n  G as cleanByDataLayerPaths,\n  _ as each,\n  S as eachFirstLevel,\n  k as executeEachFunction,\n  B as get,\n  C as getDataLayerPaths,\n  Z as getWebProperties,\n  m as isEmpty,\n  ne as isEmptyDataLayer,\n  u as merge,\n  te as validate\n};\n","import { GlobalDataLayer } from '@porsche/globaldatalayer';\nimport { TContextEnvironment, TDataLayer } from '@porsche/globaldatalayer-events/projects/pcom/all/types';\nimport { Environment, Environments } from '../../entities/environment';\nimport { splitLocale } from '../../entities/locale';\nimport { DATA_LAYER_APPLICATION_NAME, DATA_LAYER_APP_ID, EventAction } from '../../utility/constants';\nimport { isString } from '../../utility/helper';\n\nfunction getEnvironmentAbbreviation(env: Environment): TContextEnvironment {\n  switch (env) {\n    case Environments.PRODUCTION:\n      return 'P';\n    case Environments.PREVIEW:\n      return 'PP';\n    default:\n      return 'K';\n  }\n}\n\nclass GlobalDataLayerService {\n  homeNavEventId = /^PAGHomeNav_/;\n  gdl!: GlobalDataLayer<TDataLayer>;\n\n  constructor() {\n    this.initialise();\n  }\n\n  initialise() {\n    this.gdl = new GlobalDataLayer();\n  }\n\n  pushDataLayerEvent(eventAction: EventAction, eventData?: TDataLayer): void {\n    if (eventData) {\n      this.gdl.push(eventAction, eventData);\n    } else {\n      this.gdl.push(eventAction);\n    }\n  }\n\n  setEnvironment(env: Environment) {\n    this.gdl.setDefaultProperties(this.homeNavEventId, {\n      context: { environment: getEnvironmentAbbreviation(env) }\n    });\n  }\n\n  setPageName(pageName?: string) {\n    this.gdl.setDefaultProperties(this.homeNavEventId, {\n      pageExperience: {\n        pageName: pageName\n      }\n    });\n  }\n\n  setUser(userId: string, loginStatus: boolean) {\n    this.gdl.setDefaultProperties(this.homeNavEventId, {\n      ids: { userId },\n      visitor: { loginStatus }\n    });\n  }\n\n  setLocale(locale: string) {\n    try {\n      const { country, language } = splitLocale(locale);\n\n      this.gdl.setDefaultProperties(this.homeNavEventId, {\n        context: { country: country, language: language }\n      });\n    } catch (err) {\n      // throw the error away\n    }\n  }\n\n  setDefaultProperties(locale: string, pageName?: string): void {\n    let defaultGDLProperties: TDataLayer = {\n      context: { applicationId: DATA_LAYER_APP_ID },\n      visitor: { loginStatus: false }\n    };\n\n    try {\n      const { country, language } = splitLocale(locale);\n\n      defaultGDLProperties = {\n        ...defaultGDLProperties,\n        context: { ...defaultGDLProperties.context, country, language, applicationName: DATA_LAYER_APPLICATION_NAME }\n      };\n    } catch (err) {\n      // throw the error away\n    }\n\n    if (isString(pageName)) {\n      defaultGDLProperties = { ...defaultGDLProperties, pageExperience: { pageName: pageName } };\n    }\n\n    this.gdl.setDefaultProperties(this.homeNavEventId, defaultGDLProperties);\n  }\n}\n\nexport default new GlobalDataLayerService();\n"],"names":["e","M","Object","defineProperty","o","t","n","enumerable","configurable","writable","value","W","y","w","clean","enabled","executionPlace","values","logging","level","validation","allowUnknown","verbose","webProperties","eventNamePattern","reactiveUrl","reactiveDimensions","U","prototype","create","event","length","context","eventAction","_","S","r","i","m","P","includes","k","B","split","j","x","error","warn","log","v","this","prefix","settings","__assign","_getMergedSettings","_isAllowed","isAvailable","_log","console","concat","dir","debug","info","b","u","arguments","forEach","Array","isArray","q","timestamp","server","hostname","pageExperience","pageId","url","visitor","deviceBrowserBreakpoint","breakpoint","deviceBrowserHeight","height","deviceBrowserOrientation","orientation","deviceBrowserWidth","width","deviceType","useragent","userAgent","K","V","window","location","href","replace","R","innerHeight","toString","D","innerWidth","T","J","breakpoints","ee","keys","indexOf","map","trim","test","Number","parseFloat","te","issues","eventMatrix","events","a","__rest","s","push","type","name","message","f","c","C","l","filter","G","p","g","d","h","ie","Map","_className","_logger","_settings","_dataLayerStore","pagData","_defaultProperties","setup","_handleDefaultWebProperties","getRegisteredExtension","getRegisteredExtensionByClassName","className","_extensions","has","get","getRegisteredExtensions","registerExtension","dataLayerInstance","set","removeExtension","delete","removeExtensionByClassName","_eventNamePayloadFactory","getDefaultProperties","__spreadArray","apply","sort","join","byName","byArray","byRegex","identifier","data","RegExp","setDefaultProperties","find","_webPropertiesHandled","Date","toISOString","matchMedia","matches","navigator","Z","_webPayloadFactory","oe","call","__extends","getEnvironmentAbbreviation","Environments","PRODUCTION","PREVIEW","GlobalDataLayerService","homeNavEventId","initialise","gdl","pushDataLayerEvent","setEnvironment","environment","setPageName","pageName","setUser","ids","userId","loginStatus","setLocale","splitLocale","country","language","applicationId","DATA_LAYER_APP_ID","assign","applicationName","DATA_LAYER_APPLICATION_NAME","isString","globalDataLayerService"],"sourceRoot":""}